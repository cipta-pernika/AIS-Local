L.TrackController=L.Class.extend({initialize:function(tracks=[],draw,options){L.setOptions(this,options),this._tracks=[],this.addTrack(tracks),this._draw=draw,this._updateTime()},getMinTime:function(){return this._minTime},getMaxTime:function(){return this._maxTime},addTrack:function(track){if(isArray(track))for(let i=0,len=track.length;i<len;i++)this.addTrack(track[i]);else{if(!(track instanceof L.Track))throw new Error("tracks must be an instance of `Track` or an array of `Track` instance!");this._tracks.push(track),this._updateTime()}},drawTracksByTime:function(time){this._draw.clear();for(let i=0,len=this._tracks.length;i<len;i++){let track,tps=this._tracks[i].getTrackPointsBeforeTime(time);tps&&tps.length&&this._draw.drawTrack(tps)}},_updateTime:function(){this._minTime=this._tracks[0].getStartTrackPoint().time,this._maxTime=this._tracks[0].getEndTrackPoint().time;for(let i=0,len=this._tracks.length;i<len;i++){let stime=this._tracks[i].getStartTrackPoint().time,etime=this._tracks[i].getEndTrackPoint().time;stime<this._minTime&&(this._minTime=stime),etime>this._maxTime&&(this._maxTime=etime)}}}),L.trackController=function(tracks,draw,options){return new L.TrackController(tracks,draw,options)};