[
    {
        "id": "5bcb44ebef548647",
        "type": "tab",
        "label": "AIS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a0b1eeb9fca4fab7",
        "type": "tab",
        "label": "ADS-B",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8adbecac0c1b664c",
        "type": "tab",
        "label": "RADAR",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cfa3b248424f35bf",
        "type": "tab",
        "label": "Send & Receive",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6c5598670403b7f8",
        "type": "tab",
        "label": "SOS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4f90a3ebd122d18b",
        "type": "subflow",
        "name": "GPRMC Handler ",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "b4eafedf48ad9063"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99",
        "status": {
            "x": 560,
            "y": 120,
            "wires": []
        }
    },
    {
        "id": "9f8de59c262b7de1",
        "type": "subflow",
        "name": "AIVDM Decoder",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 60,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 940,
                "y": 120,
                "wires": [
                    {
                        "id": "4704a8d760c26ca4",
                        "port": 1
                    },
                    {
                        "id": "0204f1adc622e486",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99",
        "status": {
            "x": 940,
            "y": 220,
            "wires": [
                {
                    "id": "4704a8d760c26ca4",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "2c05e43f5561e440",
        "type": "subflow",
        "name": "AIVDM Decoder (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 60,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 940,
                "y": 120,
                "wires": [
                    {
                        "id": "1a9e5a4eec62c9b9",
                        "port": 1
                    },
                    {
                        "id": "93becb0694dba2d7",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99",
        "status": {
            "x": 940,
            "y": 220,
            "wires": [
                {
                    "id": "1a9e5a4eec62c9b9",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "37e155d714079b94",
        "type": "subflow",
        "name": "AIVDM Decoder (2) (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 60,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 940,
                "y": 120,
                "wires": [
                    {
                        "id": "1a748f5cd8e44dd0",
                        "port": 1
                    },
                    {
                        "id": "245ec52f8534cf52",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99",
        "status": {
            "x": 940,
            "y": 220,
            "wires": [
                {
                    "id": "1a748f5cd8e44dd0",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "f614c112864cc4d3",
        "type": "websocket-listener",
        "d": true,
        "path": "/ws/sensordata",
        "wholemsg": "false"
    },
    {
        "id": "92bd4385102b2542",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "ed5625119e8ad936",
        "type": "websocket-listener",
        "d": true,
        "path": "/ws/sensordata",
        "wholemsg": "false"
    },
    {
        "id": "c0587586e0feab65",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "c5d4c21594239517",
        "type": "websocket-listener",
        "path": "/ws/sensordatas",
        "wholemsg": "false"
    },
    {
        "id": "287fbfd1c0981137",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "6ad12317b7d625b5",
        "type": "websocket-listener",
        "path": "/ws/sos",
        "wholemsg": "false"
    },
    {
        "id": "a854ee812dc72335",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "d54d706df92f463f",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "2e45b84f9f25eef5",
        "type": "websocket-listener",
        "d": true,
        "path": "/ws/sensordata",
        "wholemsg": "false"
    },
    {
        "id": "9ee02307b412a04e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "1007f679e71fda83",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "7a514ac7e4bcf6eb",
        "type": "serial-port",
        "serialport": "COM1",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "0960ae41486c6ef0",
        "type": "serial-port",
        "serialport": "COM7",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "11e860719980e3ac",
        "type": "serial-port",
        "serialport": "COM1",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "bb03f8d1f5b4d598",
        "type": "serial-port",
        "serialport": "COM3",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "e7a9b72075600f01",
        "type": "serial-port",
        "serialport": "COM1",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "aba184a3952dbf7a",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "f4c28490e4b106b2",
        "type": "serial-port",
        "serialport": "COM1",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "f26a67f4525d43cb",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "68de80a9c366f577",
        "type": "serial-port",
        "serialport": "COM6",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "13e8a2fb2cd93486",
        "type": "serial-port",
        "serialport": "COM7",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "b29801386c70cd21",
        "type": "serial-port",
        "serialport": "COM1",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "5fc1199116bd0a72",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "06b7b65f50430d3b",
        "type": "serial-port",
        "serialport": "COM1",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "45c521cc4de59c87",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "2bffb4e783a0c2ed",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "32a6da0f907a8237",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "1a43de3ee452c915",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder_insert",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "54e0e4d1986c3da6",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "cfc2b2a58a07f4a6",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "b443960d2f483fde",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder_insert",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "65e826a5d17f83ca",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "8a7f7bd3c920a188",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "7fc24ae888100d55",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder_insert",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "7a51fe6abe3c127f",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "b47258cf45ab94ed",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "0d4577e88360a832",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder_insert",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "fb6290d2789e4005",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "3212c2b9630d5a79",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "a8ca26ea719245ec",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder_insert",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "15ac1be9d7b1b4e1",
        "type": "function",
        "z": "4f90a3ebd122d18b",
        "name": "",
        "func": "function convertLat(latitude,north_south){\n    var splitLat=latitude.split(\".\"),\n    secLat=splitLat[0].substring(splitLat[0].length - 2, splitLat[0].length)+'.'+splitLat[1],\n    degLat=splitLat[0].substring(0,splitLat[0].length - 2),\n    minLat=parseFloat(secLat)/60;\n    if(north_south=='S'){\n    \tnorth_south=-1;\n    }else{\n    \tnorth_south=1;\n    }\n    return String((parseFloat(degLat)+minLat)*north_south);\n}\n\nfunction convertLng(longitude,east_west){\n    var splitLng=longitude.split(\".\"),\n    secLng=splitLng[0].substring(splitLng[0].length - 2, splitLng[0].length)+'.'+splitLng[1],\n    degLng=splitLng[0].substring(0,splitLng[0].length - 2),\n    minLng=parseFloat(secLng)/60;\n    if(east_west=='W'){\n    \teast_west=-1;\n    }else{\n    \teast_west=1;\n    }\n    return String((parseFloat(degLng)+minLng)*east_west);\n}\n\nfunction fixDateTime(date_stamp,time_stamp){\n    var d = new Date(), date = date_stamp.substring(0,2), month = date_stamp.substring(2,4);\n    var fixDateStamp=String(d.getUTCFullYear())+'-'+month+'-'+date;\n    var fixTimeStamp=time_stamp.substring(0,2)+':'+time_stamp.substring(2,4)+':'+time_stamp.substring(4,6);\n    return String(fixDateStamp+' '+fixTimeStamp);\n}\n\n// var msgText=String(msg.payload);\nvar msgText=String(msg.gprmc);\nvar m=msgText.split(\",\");\nvar time_stamp=String(m[1]),validity=m[2],latitude=m[3],north_south=m[4],longitude=m[5],east_west=m[6],sog=m[7],cog=m[8],\ndate_stamp=String(m[9]),variation=m[10],fillbits=m[11];\n\nif(String(sog)!==''){\n    sog=String(parseFloat(sog));\n}else{\n    sog=\"0\";\n}\nif(String(cog)!==''){\n    cog=String(parseFloat(cog));\n}else{\n    cog=\"0\";\n}\nvar heading=cog;\nvar lat=convertLat(latitude,north_south);\nvar lng=convertLng(longitude,east_west);\nvar fixDT=fixDateTime(date_stamp,time_stamp);\n\nmsg.topic=\"INSERT INTO bst_mbs VALUES(0,\"+global.get('stationId')+\",\"+lat+\",\"+lng+\",\"+heading+\",\"+sog+\",\"+cog+\",'\"+fixDT+\"','\"+fixDT+\"')\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "b4eafedf48ad9063",
        "type": "function",
        "z": "4f90a3ebd122d18b",
        "name": "",
        "func": "var msgText=String(msg.payload);\nmsg.gprmc=msgText;\nmsg.topic=\"INSERT INTO gprmc_msg VALUES (0,'\"+msgText+\"',\"+global.get('stationId')+\",1,UTC_TIMESTAMP())\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "1c5099576fbb9689",
        "type": "debug",
        "z": "4f90a3ebd122d18b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 140,
        "wires": []
    },
    {
        "id": "4af9b5aa3828a88b",
        "type": "debug",
        "z": "4f90a3ebd122d18b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 140,
        "wires": []
    },
    {
        "id": "1e414a35ddb3cecc",
        "type": "debug",
        "z": "4f90a3ebd122d18b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 140,
        "y": 220,
        "wires": []
    },
    {
        "id": "d2376b60045d1aac",
        "type": "function",
        "z": "9f8de59c262b7de1",
        "name": "",
        "func": "// var parsed={\"static\":{\"mmsi\":\"525019645\"},\"dynamic\":{\"station_id\":\"1\",\"sog\":0.3,\"cog\":15.6,\"bearing\":0,\"nav_status\":0,\"latitude\":-6.062245,\"longitude\":106.87224833333333,\"raim\":false,\"msg_type\":1,\"repeat_indicator\":0,\"position_accuracy\":0},\"destination\":{},\"draught\":{},\"ship_id\":0,\"time_stamp\":\"2020-10-01 10:27:50\",\"exists\":false};\nif(msg.parsed.ship_id===0){\n    msg.parsed.ship_id=msg.payload.insertId;\n}\nvar parsed=msg.parsed;\n\nObject.size = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\n\nfunction addZero(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n}\n\nvar dynamic=parsed.dynamic;\nvar destination=parsed.destination;\nvar draught=parsed.draught;\nvar dynamicSize = Object.size(dynamic);\nvar destinationSize = Object.size(destination);\nvar draughtSize = Object.size(draught);\n\nmsg.parsed.size={};\nmsg.parsed.size.dynamic=dynamicSize;\nmsg.parsed.size.destination=destinationSize;\nmsg.parsed.size.draught=draughtSize;\n\nvar d = new Date();\nvar suffix = String(d.getUTCFullYear())+String(addZero(d.getUTCMonth()+1));\nvar insertDynamic=\"INSERT INTO ais_dynamic_\"+suffix+\" set ship_id=\"+parsed.ship_id+\",\";\nvar updateDynamic=\"INSERT INTO ais_dynamic set ship_id=\"+parsed.ship_id+\",\";\nif(parsed.exists){\n    updateDynamic=\"UPDATE ais_dynamic set \";\n}\ni=1;\nObject.keys(dynamic).forEach(key => {\n\t// console.log(key, static[key]);\n    if(i>1){\n    \tinsertDynamic+=\",\";\n    \tupdateDynamic+=\",\";\n    }\n    var column = String(key);\n    var value = String(dynamic[key]);\n    if(value===\"undefined\"){\n        value=\"0\";\n    }\n    if(column===\"raim\"){\n        if(value===\"false\"){\n            value=\"0\";\n        }else{\n            value=\"1\";\n        }\n    }\n    if(column===\"latitude\" || column===\"longitude\"){\n        if(value!==\"0\" && value!==\"undefined\"){\n            insertDynamic+=column+\"='\"+value+\"'\";\n            updateDynamic+=column+\"='\"+value+\"'\";\n        }\n    }else{\n        insertDynamic+=column+\"='\"+value+\"'\";\n        updateDynamic+=column+\"='\"+value+\"'\";\n    }\n    i++;\n});\ninsertDynamic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\nif(!parsed.exists){\n    updateDynamic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\n}else{\n    updateDynamic+=\",updated_at=UTC_TIMESTAMP() WHERE ship_id=\"+parsed.ship_id;\n}\n\nmsg.insertDynamic=insertDynamic.replace(\",,,\", \",\");\nmsg.updateDynamic=updateDynamic.replace(\",,,\", \",\");\n\nvar insertDestination=0;\ni=1;\nif(destination.destination!==undefined){\n    var tempEta = destination.eta.toISOString().slice(0, 19).replace('T', ' ');\n    destination.eta = tempEta;\n    insertDestination=\"INSERT INTO ais_destination set ship_id=\"+parsed.ship_id+\",\";\n    Object.keys(destination).forEach(key => {\n    \t// console.log(key, static[key]);\n        if(i>1){\n        \tinsertDestination+=\",\";\n        }\n        var column = String(key);\n        var value = String(destination[key]);\n        // if(value===\"undefined\"){\n        //     value=\"0\";\n        // }\n        insertDestination+=column+\"='\"+value+\"'\";\n        i++;\n    });\n    insertDestination+=\",updated_at='\"+parsed.time_stamp+\"'\";\n    insertDestination=insertDestination.replace(\"\\\\\", \"\\\\\\\\\");\n}\nmsg.insertDestination=insertDestination;\n\nvar insertDraught=0;\ni=1;\nif(draught.draught!==undefined){\n    insertDraught=\"INSERT INTO ais_draught set ship_id=\"+parsed.ship_id+\",\";\n    Object.keys(draught).forEach(key => {\n    \t// console.log(key, static[key]);\n        if(i>1){\n        \tinsertDraught+=\",\";\n        }\n        var column = String(key);\n        var value = String(draught[key]);\n        // if(value===\"undefined\"){\n        //     value=\"0\";\n        // }\n        insertDraught+=column+\"='\"+value+\"'\";\n        i++;\n    });\n    insertDraught+=\",updated_at='\"+parsed.time_stamp+\"'\";\n}\nmsg.insertDraught=insertDraught;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "04ae55b28dfff270"
            ]
        ]
    },
    {
        "id": "04ae55b28dfff270",
        "type": "change",
        "z": "9f8de59c262b7de1",
        "name": "insertDynamic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDynamic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4506c6dcf9751299",
        "type": "change",
        "z": "9f8de59c262b7de1",
        "name": "updateDynamic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "updateDynamic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "06333236853bfae1",
        "type": "change",
        "z": "9f8de59c262b7de1",
        "name": "insertDestination",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDestination",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "3c9bf3f04d2340c0",
        "type": "change",
        "z": "9f8de59c262b7de1",
        "name": "insertDraught",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDraught",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "a3129761479bebbd",
        "type": "switch",
        "z": "9f8de59c262b7de1",
        "name": "checkDestination",
        "property": "insertDestination",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 300,
        "wires": [
            [
                "06333236853bfae1"
            ],
            [
                "4704a8d760c26ca4"
            ]
        ]
    },
    {
        "id": "4704a8d760c26ca4",
        "type": "switch",
        "z": "9f8de59c262b7de1",
        "name": "checkDraught",
        "property": "insertDraught",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 380,
        "wires": [
            [
                "3c9bf3f04d2340c0"
            ],
            []
        ]
    },
    {
        "id": "791ca52868337347",
        "type": "function",
        "z": "9f8de59c262b7de1",
        "name": "",
        "func": "var decoded=msg.payload;\nmsg.decoded=decoded;\nif(decoded!==undefined){\n    msg.sqlStatic=\"SELECT * from ais_static where mmsi='\"+msg.payload.senderMmsi+\"'\";\n    // msg.sqlDynamic=\"SELECT count() as total from ais_dynamic where mmsi='\"+msg.payload.senderMmsi+\"'\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 60,
        "wires": [
            [
                "d306d82cefa9b14f"
            ]
        ]
    },
    {
        "id": "0204f1adc622e486",
        "type": "switch",
        "z": "9f8de59c262b7de1",
        "name": "If !Undefined",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 60,
        "wires": [
            [
                "791ca52868337347"
            ],
            []
        ]
    },
    {
        "id": "d306d82cefa9b14f",
        "type": "change",
        "z": "9f8de59c262b7de1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "sqlStatic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "6d5f2d25d35ddda7",
        "type": "function",
        "z": "9f8de59c262b7de1",
        "name": "",
        "func": "// if (msg.payload && !msg.payload.length){\n//     msg.result=\"No Data\";\n// }else{\n//     msg.result=msg.payload.length;\n// }\n// return msg;\n\nfunction addZero(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n}\n\nvar isDataExists=true;\nvar ship_id=0;\nvar aisData={static:{},dynamic:{},destination:{},draught:{}};\n\nif (msg.payload && !msg.payload.length){\n    isDataExists=false;\n}\n\nvar d = new Date();\nvar time_stamp = String(d.getUTCFullYear())+'-'+String(addZero(d.getUTCMonth()+1))+'-'+String(addZero(d.getUTCDate()))+' ';\ntime_stamp += String(addZero(d.getUTCHours()))+':'+String(addZero(d.getUTCMinutes()))+':'+String(addZero(d.getUTCSeconds()));\n\n//Init Ship ID\nif(!isDataExists){\n    ship_id=0;\n}else{\n    ship_id=msg.payload[0].id;\n}\naisData.ship_id=ship_id;\n//Static Data\naisData.static.mmsi=msg.decoded.senderMmsi,\naisData.static.callsign=msg.decoded.callsign,\naisData.static.vessel_name=msg.decoded.name,\naisData.static.imo=msg.decoded.shipId,\naisData.static.ship_type=msg.decoded.shipType,\naisData.static.dimension_a=msg.decoded.dimensionToBow,\naisData.static.dimension_b=msg.decoded.dimensionToStern,\naisData.static.dimension_c=msg.decoded.dimensionToPort,\naisData.static.dimension_d=msg.decoded.dimensionToStarboard,\naisData.static.fix_type=msg.decoded.fix_type,\n//Dynamic Data\naisData.dynamic.station_id=global.get('stationId'),\naisData.dynamic.sog=msg.decoded.speedOverGround,\naisData.dynamic.cog=msg.decoded.courseOverGround,\naisData.dynamic.heading=msg.decoded.trueHeading,\naisData.dynamic.turning_direction=msg.decoded.turningDirection,\naisData.dynamic.rot=msg.decoded.turningRate,\naisData.dynamic.bearing=0,\naisData.dynamic.nav_status=msg.decoded.navigationStatus,\naisData.dynamic.latitude=msg.decoded.latitude,\naisData.dynamic.longitude=msg.decoded.longitude,\naisData.dynamic.raim=msg.decoded.raim,\naisData.dynamic.msg_type=msg.decoded.messageType,\naisData.dynamic.repeat_indicator=msg.decoded.repeatIndicator,\naisData.dynamic.position_accuracy=msg.decoded.positionAccuracy,\n//Destination\naisData.destination.destination=msg.decoded.destination,\naisData.destination.eta=msg.decoded.eta,\n//Draught\naisData.draught.draught=msg.decoded.draught;\n//Timestamp\naisData.time_stamp=time_stamp;\n//isExists?\naisData.exists=isDataExists;\n\nmsg.parsed=aisData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 120,
        "wires": [
            [
                "275d49e4b399794b"
            ]
        ]
    },
    {
        "id": "275d49e4b399794b",
        "type": "function",
        "z": "9f8de59c262b7de1",
        "name": "",
        "func": "// var parsed={\"static\":{\"mmsi\":\"525019645\"},\"dynamic\":{\"station_id\":\"1\",\"sog\":0.3,\"cog\":15.6,\"bearing\":0,\"nav_status\":0,\"latitude\":-6.062245,\"longitude\":106.87224833333333,\"raim\":false,\"msg_type\":1,\"repeat_indicator\":0,\"position_accuracy\":0},\"destination\":{},\"draught\":{},\"ship_id\":0,\"time_stamp\":\"2020-10-01 10:27:50\",\"exists\":false};\nvar parsed=msg.parsed;\nObject.size = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\nvar astatic=parsed.static;\nvar staticSize = Object.size(astatic);\n\nvar insertStatic;\nvar isUpdate=false;\nif(!parsed.exists){\n\tinsertStatic=\"INSERT INTO ais_static set \";\n}else{\n    insertStatic=\"UPDATE ais_static set \";\n    isUpdate=true;\n}\nvar i=1;\nObject.keys(astatic).forEach(key => {\n    // console.log(key, astatic[key]);\n    if(i>1){\n        insertStatic+=\",\";\n    }\n    var column = String(key);\n    var value = String(astatic[key]);\n    if(value===\"undefined\"){\n        value=0;\n        if(column==\"vessel_name\"){\n            value=\"\";\n        }else if(column==\"imo\"){\n            value=\"\";\n        }else if(column==\"callsign\"){\n            value=\"\";\n        }\n    }\n    insertStatic+=column+\"='\"+value+\"'\";\n    i++;\n});\n// console.log(insertStatic);\nif(isUpdate){\n    insertStatic+=\",updated_at=UTC_TIMESTAMP() WHERE id=\"+parsed.ship_id;\n}else{\n    insertStatic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\n}\nmsg.topic=insertStatic;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "0ee1358dd073c5c2",
        "type": "function",
        "z": "9f8de59c262b7de1",
        "name": "",
        "func": "if(msg.payload===undefined){\n    msg.payload=0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 60,
        "wires": [
            [
                "0204f1adc622e486"
            ]
        ]
    },
    {
        "id": "be663177b19fbffd",
        "type": "function",
        "z": "2c05e43f5561e440",
        "name": "",
        "func": "// var parsed={\"static\":{\"mmsi\":\"525019645\"},\"dynamic\":{\"station_id\":\"1\",\"sog\":0.3,\"cog\":15.6,\"bearing\":0,\"nav_status\":0,\"latitude\":-6.062245,\"longitude\":106.87224833333333,\"raim\":false,\"msg_type\":1,\"repeat_indicator\":0,\"position_accuracy\":0},\"destination\":{},\"draught\":{},\"ship_id\":0,\"time_stamp\":\"2020-10-01 10:27:50\",\"exists\":false};\nif(msg.parsed.ship_id===0){\n    msg.parsed.ship_id=msg.payload.insertId;\n}\nvar parsed=msg.parsed;\n\nObject.size = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\n\nfunction addZero(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n}\n\nvar dynamic=parsed.dynamic;\nvar destination=parsed.destination;\nvar draught=parsed.draught;\nvar dynamicSize = Object.size(dynamic);\nvar destinationSize = Object.size(destination);\nvar draughtSize = Object.size(draught);\n\nmsg.parsed.size={};\nmsg.parsed.size.dynamic=dynamicSize;\nmsg.parsed.size.destination=destinationSize;\nmsg.parsed.size.draught=draughtSize;\n\nvar d = new Date();\nvar suffix = String(d.getUTCFullYear())+String(addZero(d.getUTCMonth()+1));\nvar insertDynamic=\"INSERT INTO ais_dynamic_\"+suffix+\" set ship_id=\"+parsed.ship_id+\",\";\nvar updateDynamic=\"INSERT INTO ais_dynamic set ship_id=\"+parsed.ship_id+\",\";\nif(parsed.exists){\n    updateDynamic=\"UPDATE ais_dynamic set \";\n}\ni=1;\nObject.keys(dynamic).forEach(key => {\n\t// console.log(key, static[key]);\n    if(i>1){\n    \tinsertDynamic+=\",\";\n    \tupdateDynamic+=\",\";\n    }\n    var column = String(key);\n    var value = String(dynamic[key]);\n    if(value===\"undefined\"){\n        value=\"0\";\n    }\n    if(column===\"raim\"){\n        if(value===\"false\"){\n            value=\"0\";\n        }else{\n            value=\"1\";\n        }\n    }\n    if(column===\"latitude\" || column===\"longitude\"){\n        if(value!==\"0\" && value!==\"undefined\"){\n            insertDynamic+=column+\"='\"+value+\"'\";\n            updateDynamic+=column+\"='\"+value+\"'\";\n        }\n    }else{\n        insertDynamic+=column+\"='\"+value+\"'\";\n        updateDynamic+=column+\"='\"+value+\"'\";\n    }\n    i++;\n});\ninsertDynamic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\nif(!parsed.exists){\n    updateDynamic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\n}else{\n    updateDynamic+=\",updated_at=UTC_TIMESTAMP() WHERE ship_id=\"+parsed.ship_id;\n}\n\nmsg.insertDynamic=insertDynamic.replace(\",,,\", \",\");\nmsg.updateDynamic=updateDynamic.replace(\",,,\", \",\");\n\nvar insertDestination=0;\ni=1;\nif(destination.destination!==undefined){\n    var tempEta = destination.eta.toISOString().slice(0, 19).replace('T', ' ');\n    destination.eta = tempEta;\n    insertDestination=\"INSERT INTO ais_destination set ship_id=\"+parsed.ship_id+\",\";\n    Object.keys(destination).forEach(key => {\n    \t// console.log(key, static[key]);\n        if(i>1){\n        \tinsertDestination+=\",\";\n        }\n        var column = String(key);\n        var value = String(destination[key]);\n        // if(value===\"undefined\"){\n        //     value=\"0\";\n        // }\n        insertDestination+=column+\"='\"+value+\"'\";\n        i++;\n    });\n    insertDestination+=\",updated_at='\"+parsed.time_stamp+\"'\";\n    insertDestination=insertDestination.replace(\"\\\\\", \"\\\\\\\\\");\n}\nmsg.insertDestination=insertDestination;\n\nvar insertDraught=0;\ni=1;\nif(draught.draught!==undefined){\n    insertDraught=\"INSERT INTO ais_draught set ship_id=\"+parsed.ship_id+\",\";\n    Object.keys(draught).forEach(key => {\n    \t// console.log(key, static[key]);\n        if(i>1){\n        \tinsertDraught+=\",\";\n        }\n        var column = String(key);\n        var value = String(draught[key]);\n        // if(value===\"undefined\"){\n        //     value=\"0\";\n        // }\n        insertDraught+=column+\"='\"+value+\"'\";\n        i++;\n    });\n    insertDraught+=\",updated_at='\"+parsed.time_stamp+\"'\";\n}\nmsg.insertDraught=insertDraught;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "72680223010d0b81"
            ]
        ]
    },
    {
        "id": "72680223010d0b81",
        "type": "change",
        "z": "2c05e43f5561e440",
        "name": "insertDynamic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDynamic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "27fe80dd03e4f377",
        "type": "change",
        "z": "2c05e43f5561e440",
        "name": "updateDynamic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "updateDynamic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "95e7e28b14e2b73f",
        "type": "change",
        "z": "2c05e43f5561e440",
        "name": "insertDestination",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDestination",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "f6e445e12985a0ed",
        "type": "change",
        "z": "2c05e43f5561e440",
        "name": "insertDraught",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDraught",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "c83a7ec03f279b01",
        "type": "switch",
        "z": "2c05e43f5561e440",
        "name": "checkDestination",
        "property": "insertDestination",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 300,
        "wires": [
            [
                "95e7e28b14e2b73f"
            ],
            [
                "1a9e5a4eec62c9b9"
            ]
        ]
    },
    {
        "id": "1a9e5a4eec62c9b9",
        "type": "switch",
        "z": "2c05e43f5561e440",
        "name": "checkDraught",
        "property": "insertDraught",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 380,
        "wires": [
            [
                "f6e445e12985a0ed"
            ],
            []
        ]
    },
    {
        "id": "3bc9c7982286d39f",
        "type": "function",
        "z": "2c05e43f5561e440",
        "name": "",
        "func": "var decoded=msg.payload;\nmsg.decoded=decoded;\nif(decoded!==undefined){\n    msg.sqlStatic=\"SELECT * from ais_static where mmsi='\"+msg.payload.senderMmsi+\"'\";\n    // msg.sqlDynamic=\"SELECT count() as total from ais_dynamic where mmsi='\"+msg.payload.senderMmsi+\"'\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 60,
        "wires": [
            [
                "5266ed605c6713cc"
            ]
        ]
    },
    {
        "id": "93becb0694dba2d7",
        "type": "switch",
        "z": "2c05e43f5561e440",
        "name": "If !Undefined",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 60,
        "wires": [
            [
                "3bc9c7982286d39f"
            ],
            []
        ]
    },
    {
        "id": "5266ed605c6713cc",
        "type": "change",
        "z": "2c05e43f5561e440",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "sqlStatic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "ed6b7f66ff5e02cf",
        "type": "function",
        "z": "2c05e43f5561e440",
        "name": "",
        "func": "// if (msg.payload && !msg.payload.length){\n//     msg.result=\"No Data\";\n// }else{\n//     msg.result=msg.payload.length;\n// }\n// return msg;\n\nfunction addZero(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n}\n\nvar isDataExists=true;\nvar ship_id=0;\nvar aisData={static:{},dynamic:{},destination:{},draught:{}};\n\nif (msg.payload && !msg.payload.length){\n    isDataExists=false;\n}\n\nvar d = new Date();\nvar time_stamp = String(d.getUTCFullYear())+'-'+String(addZero(d.getUTCMonth()+1))+'-'+String(addZero(d.getUTCDate()))+' ';\ntime_stamp += String(addZero(d.getUTCHours()))+':'+String(addZero(d.getUTCMinutes()))+':'+String(addZero(d.getUTCSeconds()));\n\n//Init Ship ID\nif(!isDataExists){\n    ship_id=0;\n}else{\n    ship_id=msg.payload[0].id;\n}\naisData.ship_id=ship_id;\n//Static Data\naisData.static.mmsi=msg.decoded.senderMmsi,\naisData.static.callsign=msg.decoded.callsign,\naisData.static.vessel_name=msg.decoded.name,\naisData.static.imo=msg.decoded.shipId,\naisData.static.ship_type=msg.decoded.shipType,\naisData.static.dimension_a=msg.decoded.dimensionToBow,\naisData.static.dimension_b=msg.decoded.dimensionToStern,\naisData.static.dimension_c=msg.decoded.dimensionToPort,\naisData.static.dimension_d=msg.decoded.dimensionToStarboard,\naisData.static.fix_type=msg.decoded.fix_type,\n//Dynamic Data\naisData.dynamic.station_id=global.get('stationId'),\naisData.dynamic.sog=msg.decoded.speedOverGround,\naisData.dynamic.cog=msg.decoded.courseOverGround,\naisData.dynamic.heading=msg.decoded.trueHeading,\naisData.dynamic.turning_direction=msg.decoded.turningDirection,\naisData.dynamic.rot=msg.decoded.turningRate,\naisData.dynamic.bearing=0,\naisData.dynamic.nav_status=msg.decoded.navigationStatus,\naisData.dynamic.latitude=msg.decoded.latitude,\naisData.dynamic.longitude=msg.decoded.longitude,\naisData.dynamic.raim=msg.decoded.raim,\naisData.dynamic.msg_type=msg.decoded.messageType,\naisData.dynamic.repeat_indicator=msg.decoded.repeatIndicator,\naisData.dynamic.position_accuracy=msg.decoded.positionAccuracy,\n//Destination\naisData.destination.destination=msg.decoded.destination,\naisData.destination.eta=msg.decoded.eta,\n//Draught\naisData.draught.draught=msg.decoded.draught;\n//Timestamp\naisData.time_stamp=time_stamp;\n//isExists?\naisData.exists=isDataExists;\n\nmsg.parsed=aisData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 120,
        "wires": [
            [
                "bce0313f86497319"
            ]
        ]
    },
    {
        "id": "bce0313f86497319",
        "type": "function",
        "z": "2c05e43f5561e440",
        "name": "",
        "func": "// var parsed={\"static\":{\"mmsi\":\"525019645\"},\"dynamic\":{\"station_id\":\"1\",\"sog\":0.3,\"cog\":15.6,\"bearing\":0,\"nav_status\":0,\"latitude\":-6.062245,\"longitude\":106.87224833333333,\"raim\":false,\"msg_type\":1,\"repeat_indicator\":0,\"position_accuracy\":0},\"destination\":{},\"draught\":{},\"ship_id\":0,\"time_stamp\":\"2020-10-01 10:27:50\",\"exists\":false};\nvar parsed=msg.parsed;\nObject.size = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\nvar astatic=parsed.static;\nvar staticSize = Object.size(astatic);\n\nvar insertStatic;\nvar isUpdate=false;\nif(!parsed.exists){\n\tinsertStatic=\"INSERT INTO ais_static set \";\n}else{\n    insertStatic=\"UPDATE ais_static set \";\n    isUpdate=true;\n}\nvar i=1;\nObject.keys(astatic).forEach(key => {\n    // console.log(key, astatic[key]);\n    if(i>1){\n        insertStatic+=\",\";\n    }\n    var column = String(key);\n    var value = String(astatic[key]);\n    if(value===\"undefined\"){\n        value=0;\n        if(column==\"vessel_name\"){\n            value=\"\";\n        }else if(column==\"imo\"){\n            value=\"\";\n        }else if(column==\"callsign\"){\n            value=\"\";\n        }\n    }\n    insertStatic+=column+\"='\"+value+\"'\";\n    i++;\n});\n// console.log(insertStatic);\nif(isUpdate){\n    insertStatic+=\",updated_at=UTC_TIMESTAMP() WHERE id=\"+parsed.ship_id;\n}else{\n    insertStatic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\n}\nmsg.topic=insertStatic;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "141565759c1b9326",
        "type": "function",
        "z": "2c05e43f5561e440",
        "name": "",
        "func": "if(msg.payload===undefined){\n    msg.payload=0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 60,
        "wires": [
            [
                "93becb0694dba2d7"
            ]
        ]
    },
    {
        "id": "8f12f8aba2fa9968",
        "type": "function",
        "z": "37e155d714079b94",
        "name": "",
        "func": "// var parsed={\"static\":{\"mmsi\":\"525019645\"},\"dynamic\":{\"station_id\":\"1\",\"sog\":0.3,\"cog\":15.6,\"bearing\":0,\"nav_status\":0,\"latitude\":-6.062245,\"longitude\":106.87224833333333,\"raim\":false,\"msg_type\":1,\"repeat_indicator\":0,\"position_accuracy\":0},\"destination\":{},\"draught\":{},\"ship_id\":0,\"time_stamp\":\"2020-10-01 10:27:50\",\"exists\":false};\nif(msg.parsed.ship_id===0){\n    msg.parsed.ship_id=msg.payload.insertId;\n}\nvar parsed=msg.parsed;\n\nObject.size = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\n\nfunction addZero(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n}\n\nvar dynamic=parsed.dynamic;\nvar destination=parsed.destination;\nvar draught=parsed.draught;\nvar dynamicSize = Object.size(dynamic);\nvar destinationSize = Object.size(destination);\nvar draughtSize = Object.size(draught);\n\nmsg.parsed.size={};\nmsg.parsed.size.dynamic=dynamicSize;\nmsg.parsed.size.destination=destinationSize;\nmsg.parsed.size.draught=draughtSize;\n\nvar d = new Date();\nvar suffix = String(d.getUTCFullYear())+String(addZero(d.getUTCMonth()+1));\nvar insertDynamic=\"INSERT INTO ais_dynamic_\"+suffix+\" set ship_id=\"+parsed.ship_id+\",\";\nvar updateDynamic=\"INSERT INTO ais_dynamic set ship_id=\"+parsed.ship_id+\",\";\nif(parsed.exists){\n    updateDynamic=\"UPDATE ais_dynamic set \";\n}\ni=1;\nObject.keys(dynamic).forEach(key => {\n\t// console.log(key, static[key]);\n    if(i>1){\n    \tinsertDynamic+=\",\";\n    \tupdateDynamic+=\",\";\n    }\n    var column = String(key);\n    var value = String(dynamic[key]);\n    if(value===\"undefined\"){\n        value=\"0\";\n    }\n    if(column===\"raim\"){\n        if(value===\"false\"){\n            value=\"0\";\n        }else{\n            value=\"1\";\n        }\n    }\n    if(column===\"latitude\" || column===\"longitude\"){\n        if(value!==\"0\" && value!==\"undefined\"){\n            insertDynamic+=column+\"='\"+value+\"'\";\n            updateDynamic+=column+\"='\"+value+\"'\";\n        }\n    }else{\n        insertDynamic+=column+\"='\"+value+\"'\";\n        updateDynamic+=column+\"='\"+value+\"'\";\n    }\n    i++;\n});\ninsertDynamic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\nif(!parsed.exists){\n    updateDynamic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\n}else{\n    updateDynamic+=\",updated_at=UTC_TIMESTAMP() WHERE ship_id=\"+parsed.ship_id;\n}\n\nmsg.insertDynamic=insertDynamic.replace(\",,,\", \",\");\nmsg.updateDynamic=updateDynamic.replace(\",,,\", \",\");\n\nvar insertDestination=0;\ni=1;\nif(destination.destination!==undefined){\n    var tempEta = destination.eta.toISOString().slice(0, 19).replace('T', ' ');\n    destination.eta = tempEta;\n    insertDestination=\"INSERT INTO ais_destination set ship_id=\"+parsed.ship_id+\",\";\n    Object.keys(destination).forEach(key => {\n    \t// console.log(key, static[key]);\n        if(i>1){\n        \tinsertDestination+=\",\";\n        }\n        var column = String(key);\n        var value = String(destination[key]);\n        // if(value===\"undefined\"){\n        //     value=\"0\";\n        // }\n        insertDestination+=column+\"='\"+value+\"'\";\n        i++;\n    });\n    insertDestination+=\",updated_at='\"+parsed.time_stamp+\"'\";\n    insertDestination=insertDestination.replace(\"\\\\\", \"\\\\\\\\\");\n}\nmsg.insertDestination=insertDestination;\n\nvar insertDraught=0;\ni=1;\nif(draught.draught!==undefined){\n    insertDraught=\"INSERT INTO ais_draught set ship_id=\"+parsed.ship_id+\",\";\n    Object.keys(draught).forEach(key => {\n    \t// console.log(key, static[key]);\n        if(i>1){\n        \tinsertDraught+=\",\";\n        }\n        var column = String(key);\n        var value = String(draught[key]);\n        // if(value===\"undefined\"){\n        //     value=\"0\";\n        // }\n        insertDraught+=column+\"='\"+value+\"'\";\n        i++;\n    });\n    insertDraught+=\",updated_at='\"+parsed.time_stamp+\"'\";\n}\nmsg.insertDraught=insertDraught;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "51b74a8fc7760613"
            ]
        ]
    },
    {
        "id": "51b74a8fc7760613",
        "type": "change",
        "z": "37e155d714079b94",
        "name": "insertDynamic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDynamic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "1c97481b23328a6c",
        "type": "change",
        "z": "37e155d714079b94",
        "name": "updateDynamic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "updateDynamic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "afe7b75f9d70eebb",
        "type": "change",
        "z": "37e155d714079b94",
        "name": "insertDestination",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDestination",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "a413eae90d37a94d",
        "type": "change",
        "z": "37e155d714079b94",
        "name": "insertDraught",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDraught",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "678a512a87901f19",
        "type": "switch",
        "z": "37e155d714079b94",
        "name": "checkDestination",
        "property": "insertDestination",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 300,
        "wires": [
            [
                "afe7b75f9d70eebb"
            ],
            [
                "1a748f5cd8e44dd0"
            ]
        ]
    },
    {
        "id": "1a748f5cd8e44dd0",
        "type": "switch",
        "z": "37e155d714079b94",
        "name": "checkDraught",
        "property": "insertDraught",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 380,
        "wires": [
            [
                "a413eae90d37a94d"
            ],
            []
        ]
    },
    {
        "id": "95a368c73b2cc613",
        "type": "function",
        "z": "37e155d714079b94",
        "name": "",
        "func": "var decoded=msg.payload;\nmsg.decoded=decoded;\nif(decoded!==undefined){\n    msg.sqlStatic=\"SELECT * from ais_static where mmsi='\"+msg.payload.senderMmsi+\"'\";\n    // msg.sqlDynamic=\"SELECT count() as total from ais_dynamic where mmsi='\"+msg.payload.senderMmsi+\"'\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 60,
        "wires": [
            [
                "95def9b5586bdb79"
            ]
        ]
    },
    {
        "id": "245ec52f8534cf52",
        "type": "switch",
        "z": "37e155d714079b94",
        "name": "If !Undefined",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 60,
        "wires": [
            [
                "95a368c73b2cc613"
            ],
            []
        ]
    },
    {
        "id": "95def9b5586bdb79",
        "type": "change",
        "z": "37e155d714079b94",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "sqlStatic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "e1abb2e621c296da",
        "type": "function",
        "z": "37e155d714079b94",
        "name": "",
        "func": "// if (msg.payload && !msg.payload.length){\n//     msg.result=\"No Data\";\n// }else{\n//     msg.result=msg.payload.length;\n// }\n// return msg;\n\nfunction addZero(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n}\n\nvar isDataExists=true;\nvar ship_id=0;\nvar aisData={static:{},dynamic:{},destination:{},draught:{}};\n\nif (msg.payload && !msg.payload.length){\n    isDataExists=false;\n}\n\nvar d = new Date();\nvar time_stamp = String(d.getUTCFullYear())+'-'+String(addZero(d.getUTCMonth()+1))+'-'+String(addZero(d.getUTCDate()))+' ';\ntime_stamp += String(addZero(d.getUTCHours()))+':'+String(addZero(d.getUTCMinutes()))+':'+String(addZero(d.getUTCSeconds()));\n\n//Init Ship ID\nif(!isDataExists){\n    ship_id=0;\n}else{\n    ship_id=msg.payload[0].id;\n}\naisData.ship_id=ship_id;\n//Static Data\naisData.static.mmsi=msg.decoded.senderMmsi,\naisData.static.callsign=msg.decoded.callsign,\naisData.static.vessel_name=msg.decoded.name,\naisData.static.imo=msg.decoded.shipId,\naisData.static.ship_type=msg.decoded.shipType,\naisData.static.dimension_a=msg.decoded.dimensionToBow,\naisData.static.dimension_b=msg.decoded.dimensionToStern,\naisData.static.dimension_c=msg.decoded.dimensionToPort,\naisData.static.dimension_d=msg.decoded.dimensionToStarboard,\naisData.static.fix_type=msg.decoded.fix_type,\n//Dynamic Data\naisData.dynamic.station_id=global.get('stationId'),\naisData.dynamic.sog=msg.decoded.speedOverGround,\naisData.dynamic.cog=msg.decoded.courseOverGround,\naisData.dynamic.heading=msg.decoded.trueHeading,\naisData.dynamic.turning_direction=msg.decoded.turningDirection,\naisData.dynamic.rot=msg.decoded.turningRate,\naisData.dynamic.bearing=0,\naisData.dynamic.nav_status=msg.decoded.navigationStatus,\naisData.dynamic.latitude=msg.decoded.latitude,\naisData.dynamic.longitude=msg.decoded.longitude,\naisData.dynamic.raim=msg.decoded.raim,\naisData.dynamic.msg_type=msg.decoded.messageType,\naisData.dynamic.repeat_indicator=msg.decoded.repeatIndicator,\naisData.dynamic.position_accuracy=msg.decoded.positionAccuracy,\n//Destination\naisData.destination.destination=msg.decoded.destination,\naisData.destination.eta=msg.decoded.eta,\n//Draught\naisData.draught.draught=msg.decoded.draught;\n//Timestamp\naisData.time_stamp=time_stamp;\n//isExists?\naisData.exists=isDataExists;\n\nmsg.parsed=aisData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 120,
        "wires": [
            [
                "7274aa47139b24c0"
            ]
        ]
    },
    {
        "id": "7274aa47139b24c0",
        "type": "function",
        "z": "37e155d714079b94",
        "name": "",
        "func": "// var parsed={\"static\":{\"mmsi\":\"525019645\"},\"dynamic\":{\"station_id\":\"1\",\"sog\":0.3,\"cog\":15.6,\"bearing\":0,\"nav_status\":0,\"latitude\":-6.062245,\"longitude\":106.87224833333333,\"raim\":false,\"msg_type\":1,\"repeat_indicator\":0,\"position_accuracy\":0},\"destination\":{},\"draught\":{},\"ship_id\":0,\"time_stamp\":\"2020-10-01 10:27:50\",\"exists\":false};\nvar parsed=msg.parsed;\nObject.size = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\nvar astatic=parsed.static;\nvar staticSize = Object.size(astatic);\n\nvar insertStatic;\nvar isUpdate=false;\nif(!parsed.exists){\n\tinsertStatic=\"INSERT INTO ais_static set \";\n}else{\n    insertStatic=\"UPDATE ais_static set \";\n    isUpdate=true;\n}\nvar i=1;\nObject.keys(astatic).forEach(key => {\n    // console.log(key, astatic[key]);\n    if(i>1){\n        insertStatic+=\",\";\n    }\n    var column = String(key);\n    var value = String(astatic[key]);\n    if(value===\"undefined\"){\n        value=0;\n        if(column==\"vessel_name\"){\n            value=\"\";\n        }else if(column==\"imo\"){\n            value=\"\";\n        }else if(column==\"callsign\"){\n            value=\"\";\n        }\n    }\n    insertStatic+=column+\"='\"+value+\"'\";\n    i++;\n});\n// console.log(insertStatic);\nif(isUpdate){\n    insertStatic+=\",updated_at=UTC_TIMESTAMP() WHERE id=\"+parsed.ship_id;\n}else{\n    insertStatic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\n}\nmsg.topic=insertStatic;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "4fca860cbdd4d505",
        "type": "function",
        "z": "37e155d714079b94",
        "name": "",
        "func": "if(msg.payload===undefined){\n    msg.payload=0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 60,
        "wires": [
            [
                "245ec52f8534cf52"
            ]
        ]
    },
    {
        "id": "588c57281f5af4af",
        "type": "http request",
        "z": "5bcb44ebef548647",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1570,
        "y": 160,
        "wires": [
            [
                "cc6acc4d3e607336",
                "39e9290ff3e1913b"
            ]
        ]
    },
    {
        "id": "6d8eaf9c2e4f0e40",
        "type": "function",
        "z": "5bcb44ebef548647",
        "name": "function 1",
        "func": "msg.method = \"POST\"\nmsg.url = \"http://127.0.0.1:8000/api/aisdata\"\nconst aisdata1 = flow.get(\"dataais\")\nconst aisdata2 = msg.payload\nconst joinedObject = { ...aisdata2, ...aisdata1 };\nmsg.payload = joinedObject;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 120,
        "wires": [
            [
                "8c1a25896f332ebd"
            ]
        ]
    },
    {
        "id": "79a68e383a84f592",
        "type": "split",
        "z": "5bcb44ebef548647",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 310,
        "y": 100,
        "wires": [
            [
                "32573320f6879891",
                "1c40c3695379f861"
            ]
        ]
    },
    {
        "id": "c26077f0e179a91a",
        "type": "function",
        "z": "5bcb44ebef548647",
        "name": "function 2",
        "func": "flow.set(\"dataais\", msg.payload)\nmsg.payload = msg.payload.source\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 120,
        "wires": [
            [
                "07b53e7fb68e6155"
            ]
        ]
    },
    {
        "id": "d99505183151d23d",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "",
        "server": "client",
        "host": "192.168.5.148",
        "port": "2101",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "79a68e383a84f592",
                "37daadf13b1cac53"
            ]
        ]
    },
    {
        "id": "595b8b1259671ca6",
        "type": "websocket out",
        "z": "5bcb44ebef548647",
        "name": "",
        "server": "6ad12317b7d625b5",
        "client": "",
        "x": 1990,
        "y": 140,
        "wires": []
    },
    {
        "id": "3afecfdfb427312e",
        "type": "mqtt out",
        "z": "5bcb44ebef548647",
        "name": "",
        "topic": "aisdataloggerfak",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a854ee812dc72335",
        "x": 1580,
        "y": 100,
        "wires": []
    },
    {
        "id": "32573320f6879891",
        "type": "function",
        "z": "5bcb44ebef548647",
        "name": "function 6",
        "func": "var pl = String(msg.payload);\nmsg.payload = pl;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 60,
        "wires": [
            [
                "1deb6d3338b41c94",
                "53e2ad5eb09c30d7"
            ]
        ]
    },
    {
        "id": "f9c6413e57644bea",
        "type": "switch",
        "z": "5bcb44ebef548647",
        "name": "",
        "property": "payload.mmsi",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^(0\\d{8}|1\\d{8}|2\\d{8}|3\\d{8}|4\\d{8}|5\\d{8}|6\\d{8}|7\\d{8}|8\\d{8}|9\\d{8})$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 120,
        "wires": [
            [
                "c26077f0e179a91a"
            ]
        ]
    },
    {
        "id": "f8f8c697397b205b",
        "type": "switch",
        "z": "5bcb44ebef548647",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 20,
        "wires": [
            [
                "5b2a8084f7c00f80"
            ]
        ]
    },
    {
        "id": "5b2a8084f7c00f80",
        "type": "switch",
        "z": "5bcb44ebef548647",
        "name": "",
        "property": "payload.name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 890,
        "y": 20,
        "wires": [
            [
                "0b15e906dd372f48"
            ]
        ]
    },
    {
        "id": "0b15e906dd372f48",
        "type": "function",
        "z": "5bcb44ebef548647",
        "name": "function 11",
        "func": "msg.method = \"POST\"\nmsg.url = \"http://127.0.0.1:8000/api/aisstatic\"\nconst aisdata2 = msg.payload\nmsg.payload = aisdata2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 20,
        "wires": [
            [
                "ce4b8b1df12e721a"
            ]
        ]
    },
    {
        "id": "39c9ebb768e4270a",
        "type": "http request",
        "z": "5bcb44ebef548647",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1450,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "242819caa409e3e7",
        "type": "mqtt out",
        "z": "5bcb44ebef548647",
        "name": "",
        "topic": "aisdatastaticfak",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a854ee812dc72335",
        "x": 1460,
        "y": 60,
        "wires": []
    },
    {
        "id": "344a5cdd81e5c53e",
        "type": "switch",
        "z": "5bcb44ebef548647",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "GPRMC",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 180,
        "wires": [
            [
                "d91467a317a10786"
            ]
        ]
    },
    {
        "id": "d91467a317a10786",
        "type": "function",
        "z": "5bcb44ebef548647",
        "name": "function 14",
        "func": "var pl = String(msg.payload);\nmsg.payload = pl;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 180,
        "wires": [
            [
                "3aed4211fa35bdc1"
            ]
        ]
    },
    {
        "id": "1c40c3695379f861",
        "type": "delay",
        "z": "5bcb44ebef548647",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 470,
        "y": 180,
        "wires": [
            [
                "344a5cdd81e5c53e"
            ]
        ]
    },
    {
        "id": "509474e792ccda7e",
        "type": "function",
        "z": "5bcb44ebef548647",
        "name": "function 15",
        "func": "msg.method = \"POST\"\nmsg.url = \"http://127.0.0.1:8000/api/position\"\nmsg.payload = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 180,
        "wires": [
            [
                "3bc10fb7966b29a0"
            ]
        ]
    },
    {
        "id": "3bc10fb7966b29a0",
        "type": "http request",
        "z": "5bcb44ebef548647",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1250,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "8adfc22c89d02ead",
        "type": "debug",
        "z": "5bcb44ebef548647",
        "name": "debug 25",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 280,
        "wires": []
    },
    {
        "id": "8c1a25896f332ebd",
        "type": "delay",
        "z": "5bcb44ebef548647",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1370,
        "y": 120,
        "wires": [
            [
                "588c57281f5af4af",
                "3afecfdfb427312e"
            ]
        ]
    },
    {
        "id": "ce4b8b1df12e721a",
        "type": "delay",
        "z": "5bcb44ebef548647",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1250,
        "y": 20,
        "wires": [
            [
                "39c9ebb768e4270a",
                "242819caa409e3e7"
            ]
        ]
    },
    {
        "id": "cc6acc4d3e607336",
        "type": "debug",
        "z": "5bcb44ebef548647",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1740,
        "y": 160,
        "wires": []
    },
    {
        "id": "bb4d1486b8f89e44",
        "type": "udp out",
        "z": "5bcb44ebef548647",
        "name": "",
        "addr": "127.0.0.1",
        "iface": "",
        "port": "2104",
        "ipv": "udp4",
        "outport": "2104",
        "base64": false,
        "multicast": "false",
        "x": 450,
        "y": 220,
        "wires": []
    },
    {
        "id": "f0e0a04ff4def13a",
        "type": "switch",
        "z": "5bcb44ebef548647",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "GPRMC",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 270,
        "y": 220,
        "wires": [
            [
                "bb4d1486b8f89e44",
                "4f10a4394b0da60d"
            ]
        ]
    },
    {
        "id": "37daadf13b1cac53",
        "type": "split",
        "z": "5bcb44ebef548647",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "f0e0a04ff4def13a"
            ]
        ]
    },
    {
        "id": "66ef07c4f082d276",
        "type": "mqtt out",
        "z": "5bcb44ebef548647",
        "name": "",
        "topic": "aisdatamatang",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a854ee812dc72335",
        "x": 1980,
        "y": 200,
        "wires": []
    },
    {
        "id": "4f10a4394b0da60d",
        "type": "udp out",
        "z": "5bcb44ebef548647",
        "name": "",
        "addr": "127.0.0.1",
        "iface": "",
        "port": "2108",
        "ipv": "udp4",
        "outport": "2108",
        "base64": false,
        "multicast": "false",
        "x": 450,
        "y": 260,
        "wires": []
    },
    {
        "id": "39e9290ff3e1913b",
        "type": "delay",
        "z": "5bcb44ebef548647",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1750,
        "y": 200,
        "wires": [
            [
                "66ef07c4f082d276",
                "595b8b1259671ca6"
            ]
        ]
    },
    {
        "id": "1deb6d3338b41c94",
        "type": "ais",
        "z": "5bcb44ebef548647",
        "name": "",
        "x": 610,
        "y": 120,
        "wires": [
            [
                "f9c6413e57644bea"
            ]
        ]
    },
    {
        "id": "07b53e7fb68e6155",
        "type": "ais-decoder",
        "z": "5bcb44ebef548647",
        "name": "",
        "x": 1050,
        "y": 120,
        "wires": [
            [
                "6d8eaf9c2e4f0e40"
            ]
        ]
    },
    {
        "id": "53e2ad5eb09c30d7",
        "type": "ais-decoder",
        "z": "5bcb44ebef548647",
        "name": "",
        "x": 610,
        "y": 20,
        "wires": [
            [
                "f8f8c697397b205b"
            ]
        ]
    },
    {
        "id": "3aed4211fa35bdc1",
        "type": "nmea",
        "z": "5bcb44ebef548647",
        "name": "",
        "property": "payload",
        "outputProperty": "payload",
        "x": 910,
        "y": 180,
        "wires": [
            [
                "509474e792ccda7e",
                "8adfc22c89d02ead"
            ]
        ]
    },
    {
        "id": "ee9a03828f11a8d4",
        "type": "cronplus",
        "z": "5bcb44ebef548647",
        "name": "out of range",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "str",
                "payload": "C:\\laragon\\bin\\php\\php-8.1.10-Win32-vs16-x64\\php \"C:\\Users\\USER\\Documents\\AIS-Local\\artisan\" app:outofrange",
                "expressionType": "cron",
                "expression": "0 */10 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 110,
        "y": 400,
        "wires": [
            [
                "78fb7beeac84dfb8"
            ]
        ]
    },
    {
        "id": "78fb7beeac84dfb8",
        "type": "exec",
        "z": "5bcb44ebef548647",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 270,
        "y": 400,
        "wires": [
            [
                "80833f8549a953c7"
            ],
            [
                "80833f8549a953c7"
            ],
            [
                "80833f8549a953c7"
            ]
        ]
    },
    {
        "id": "80833f8549a953c7",
        "type": "debug",
        "z": "5bcb44ebef548647",
        "name": "debug 28",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 400,
        "wires": []
    },
    {
        "id": "a030d12df663ee33",
        "type": "tcp in",
        "z": "a0b1eeb9fca4fab7",
        "name": "",
        "server": "client",
        "host": "192.168.5.147",
        "port": "32459",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 210,
        "y": 100,
        "wires": [
            [
                "f2ba46985479748a"
            ]
        ]
    },
    {
        "id": "e7d83eb68da4151f",
        "type": "debug",
        "z": "a0b1eeb9fca4fab7",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 40,
        "wires": []
    },
    {
        "id": "f2ba46985479748a",
        "type": "delay",
        "z": "a0b1eeb9fca4fab7",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 450,
        "y": 100,
        "wires": [
            [
                "026f2471fc9faf24"
            ]
        ]
    },
    {
        "id": "7e3d05ae7980b8aa",
        "type": "tcp in",
        "z": "a0b1eeb9fca4fab7",
        "name": "",
        "server": "client",
        "host": "192.168.100.2",
        "port": "32457",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 210,
        "y": 320,
        "wires": [
            [
                "9b71c036faf2a780"
            ]
        ]
    },
    {
        "id": "e5241316c6b9fd20",
        "type": "tcp in",
        "z": "a0b1eeb9fca4fab7",
        "name": "",
        "server": "client",
        "host": "192.168.100.4",
        "port": "32458",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 210,
        "y": 400,
        "wires": [
            [
                "9b71c036faf2a780",
                "21d7aa87af91d1cc"
            ]
        ]
    },
    {
        "id": "411373cca4e3a0c2",
        "type": "debug",
        "z": "a0b1eeb9fca4fab7",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 320,
        "wires": []
    },
    {
        "id": "4d766e73c11e4286",
        "type": "debug",
        "z": "a0b1eeb9fca4fab7",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 400,
        "wires": []
    },
    {
        "id": "799a5a08985ca544",
        "type": "inject",
        "z": "a0b1eeb9fca4fab7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 460,
        "wires": [
            [
                "00882594fd05e6f8"
            ]
        ]
    },
    {
        "id": "2e632cf94cd031e0",
        "type": "function",
        "z": "a0b1eeb9fca4fab7",
        "name": "function 3",
        "func": "msg.method = \"POST\"\nmsg.url = \"http://127.0.0.1:8000/api/adsbdatav2\"\nconst aisdata1 = { msgSbs: flow.get(\"dataadsb\") }\nconst aisdata2 = msg.payload\nconst joinedObject = { ...aisdata2, ...aisdata1 };\nmsg.payload = joinedObject;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 140,
        "wires": [
            [
                "d82d227e54dbbf1e",
                "0a02bbe6f754ee9f"
            ]
        ]
    },
    {
        "id": "d82d227e54dbbf1e",
        "type": "http request",
        "z": "a0b1eeb9fca4fab7",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 390,
        "y": 220,
        "wires": [
            [
                "0640dce1fbc02dd4"
            ]
        ]
    },
    {
        "id": "0640dce1fbc02dd4",
        "type": "debug",
        "z": "a0b1eeb9fca4fab7",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 220,
        "wires": []
    },
    {
        "id": "026f2471fc9faf24",
        "type": "function",
        "z": "a0b1eeb9fca4fab7",
        "name": "function 4",
        "func": "flow.set(\"dataadsb\", msg.payload)\nmsg.payload = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 100,
        "wires": [
            [
                "ea975225e2af643a"
            ]
        ]
    },
    {
        "id": "9b71c036faf2a780",
        "type": "debug",
        "z": "a0b1eeb9fca4fab7",
        "name": "debug 19",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 220,
        "y": 160,
        "wires": []
    },
    {
        "id": "19cf5b273cd38178",
        "type": "tcp in",
        "z": "a0b1eeb9fca4fab7",
        "name": "",
        "server": "client",
        "host": "192.168.100.4",
        "port": "32459",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 210,
        "y": 40,
        "wires": [
            [
                "e731416d9b6f7e14",
                "f2ba46985479748a",
                "c6da07e861f4ffeb"
            ]
        ]
    },
    {
        "id": "e731416d9b6f7e14",
        "type": "function",
        "z": "a0b1eeb9fca4fab7",
        "name": "function 13",
        "func": "flow.set(\"dataadsb\", msg.payload)\nmsg.payload = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 40,
        "wires": [
            [
                "26b42203ed63587c"
            ]
        ]
    },
    {
        "id": "0a02bbe6f754ee9f",
        "type": "mqtt out",
        "z": "a0b1eeb9fca4fab7",
        "name": "",
        "topic": "adsbdataloggerfak",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a854ee812dc72335",
        "x": 1170,
        "y": 100,
        "wires": []
    },
    {
        "id": "21d7aa87af91d1cc",
        "type": "debug",
        "z": "a0b1eeb9fca4fab7",
        "name": "debug 20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 360,
        "wires": []
    },
    {
        "id": "c6da07e861f4ffeb",
        "type": "debug",
        "z": "a0b1eeb9fca4fab7",
        "name": "debug 21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 140,
        "wires": []
    },
    {
        "id": "bd2976b7616379b3",
        "type": "switch",
        "z": "a0b1eeb9fca4fab7",
        "name": "",
        "property": "payload.lat",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 40,
        "wires": [
            [
                "e7d83eb68da4151f"
            ]
        ]
    },
    {
        "id": "ea975225e2af643a",
        "type": "npm",
        "z": "a0b1eeb9fca4fab7",
        "name": "",
        "func": "// NPM module exposed as variable, npm_module\nreturn npm_module(msg.payload);",
        "npm_module": "sbs1",
        "module_style": "function",
        "msg_payload": "return_val",
        "function_name": "parseSbs1Message",
        "x": 770,
        "y": 100,
        "wires": [
            [
                "2e632cf94cd031e0"
            ]
        ]
    },
    {
        "id": "6ffdfc934b00e987",
        "type": "npm",
        "z": "a0b1eeb9fca4fab7",
        "name": "",
        "func": "// NPM module exposed as variable, npm_module\nreturn npm_module(msg.payload);",
        "npm_module": "mode-s-decoder",
        "module_style": "function",
        "msg_payload": "return_val",
        "function_name": "parse",
        "x": 470,
        "y": 320,
        "wires": [
            [
                "411373cca4e3a0c2"
            ]
        ]
    },
    {
        "id": "6b17e24639aa05a7",
        "type": "npm",
        "z": "a0b1eeb9fca4fab7",
        "name": "",
        "func": "// NPM module exposed as variable, npm_module\nreturn npm_module(msg.payload);",
        "npm_module": "ads-b",
        "module_style": "function",
        "msg_payload": "return_val",
        "function_name": "decode",
        "x": 470,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "013b1b5e77c6a31e",
        "type": "npm",
        "z": "a0b1eeb9fca4fab7",
        "d": true,
        "name": "",
        "func": "// NPM module exposed as variable, npm_module\nreturn npm_module(msg.payload);",
        "npm_module": "decoder1090-c",
        "module_style": "cstr",
        "msg_payload": "return_val",
        "function_name": "",
        "x": 450,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "26b42203ed63587c",
        "type": "npm",
        "z": "a0b1eeb9fca4fab7",
        "name": "",
        "func": "// NPM module exposed as variable, npm_module\nreturn npm_module(msg.payload);",
        "npm_module": "sbs1",
        "module_style": "function",
        "msg_payload": "return_val",
        "function_name": "parseSbs1Message",
        "x": 610,
        "y": 40,
        "wires": [
            [
                "bd2976b7616379b3"
            ]
        ]
    },
    {
        "id": "00882594fd05e6f8",
        "type": "function-npm",
        "z": "a0b1eeb9fca4fab7",
        "name": "",
        "func": "const decoder = require('decoder1090-c')\nmsg.payload = decoder.decodeMsg(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 460,
        "wires": [
            [
                "4d766e73c11e4286"
            ]
        ]
    },
    {
        "id": "0b5a11380a7d3255",
        "type": "debug",
        "z": "8adbecac0c1b664c",
        "name": "debug 23",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 60,
        "wires": []
    },
    {
        "id": "aaf2275f8dbd556d",
        "type": "exec",
        "z": "8adbecac0c1b664c",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 310,
        "y": 60,
        "wires": [
            [
                "0b5a11380a7d3255"
            ],
            [
                "0b5a11380a7d3255"
            ],
            [
                "0b5a11380a7d3255"
            ]
        ]
    },
    {
        "id": "63132010c4eeda16",
        "type": "debug",
        "z": "8adbecac0c1b664c",
        "name": "debug 24",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 140,
        "wires": []
    },
    {
        "id": "827d6fd18f81ee70",
        "type": "exec",
        "z": "8adbecac0c1b664c",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 310,
        "y": 140,
        "wires": [
            [
                "63132010c4eeda16"
            ],
            [
                "63132010c4eeda16"
            ],
            [
                "63132010c4eeda16"
            ]
        ]
    },
    {
        "id": "6ee289206f5ecc39",
        "type": "debug",
        "z": "8adbecac0c1b664c",
        "name": "debug 27",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 320,
        "wires": []
    },
    {
        "id": "258f3ef675cc07c3",
        "type": "mqtt out",
        "z": "8adbecac0c1b664c",
        "name": "",
        "topic": "radardatafak",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a854ee812dc72335",
        "x": 690,
        "y": 260,
        "wires": []
    },
    {
        "id": "2b99ab069342c235",
        "type": "function",
        "z": "8adbecac0c1b664c",
        "name": "function 16",
        "func": "msg.method = \"GET\"\nmsg.url = \"http://127.0.0.1:8000/api/radardatauniquelimit\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 260,
        "wires": [
            [
                "bfd1de8ff5c227d2"
            ]
        ]
    },
    {
        "id": "bfd1de8ff5c227d2",
        "type": "http request",
        "z": "8adbecac0c1b664c",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 490,
        "y": 260,
        "wires": [
            [
                "258f3ef675cc07c3",
                "6ee289206f5ecc39"
            ]
        ]
    },
    {
        "id": "4ac4e7d097e61377",
        "type": "cronplus",
        "z": "8adbecac0c1b664c",
        "name": "radar image",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "str",
                "payload": "C:\\laragon\\bin\\php\\php-8.1.10-Win32-vs16-x64\\php \"C:\\Users\\admin\\Documents\\AIS-Local\\artisan\" radarpng",
                "expressionType": "cron",
                "expression": "0 */10 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 150,
        "y": 60,
        "wires": [
            [
                "aaf2275f8dbd556d"
            ]
        ]
    },
    {
        "id": "72102baf9cff38fd",
        "type": "cronplus",
        "z": "8adbecac0c1b664c",
        "name": "radar data",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "str",
                "payload": "C:\\laragon\\bin\\php\\php-8.1.10-Win32-vs16-x64\\php \"C:\\Users\\admin\\Documents\\AIS-Local\\artisan\" fetchradar",
                "expressionType": "cron",
                "expression": "0 */10 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 150,
        "y": 140,
        "wires": [
            [
                "827d6fd18f81ee70"
            ]
        ]
    },
    {
        "id": "3187aefd37a0acbc",
        "type": "cronplus",
        "z": "8adbecac0c1b664c",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */10 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 140,
        "y": 260,
        "wires": [
            [
                "2b99ab069342c235"
            ]
        ]
    },
    {
        "id": "2a936f24a6751eea",
        "type": "debug",
        "z": "cfa3b248424f35bf",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 80,
        "wires": []
    },
    {
        "id": "e35047beb5d0d3bf",
        "type": "exec",
        "z": "cfa3b248424f35bf",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 350,
        "y": 80,
        "wires": [
            [
                "2a936f24a6751eea"
            ],
            [
                "2a936f24a6751eea"
            ],
            [
                "2a936f24a6751eea"
            ]
        ]
    },
    {
        "id": "98fe1a1895a5f37d",
        "type": "http in",
        "z": "cfa3b248424f35bf",
        "name": "",
        "url": "/api/nampungdata",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 360,
        "wires": [
            [
                "a10a35bc266f9533",
                "c4465c70f83bc814"
            ]
        ]
    },
    {
        "id": "c4465c70f83bc814",
        "type": "debug",
        "z": "cfa3b248424f35bf",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 360,
        "wires": []
    },
    {
        "id": "a10a35bc266f9533",
        "type": "http response",
        "z": "cfa3b248424f35bf",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 420,
        "y": 440,
        "wires": []
    },
    {
        "id": "55d5512f5fc8d588",
        "type": "cronplus",
        "z": "cfa3b248424f35bf",
        "d": true,
        "name": "sendata",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "str",
                "payload": "C:\\laragon\\bin\\php\\php-8.1.10-Win32-vs16-x64\\php \"C:\\Users\\user\\Documents\\GitHub\\AIS-Local\\artisan\" app:sendata",
                "expressionType": "cron",
                "expression": "0 * * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 180,
        "y": 80,
        "wires": [
            [
                "e35047beb5d0d3bf"
            ]
        ]
    },
    {
        "id": "9491342092325130",
        "type": "websocket out",
        "z": "6c5598670403b7f8",
        "name": "",
        "server": "6ad12317b7d625b5",
        "client": "",
        "x": 350,
        "y": 140,
        "wires": []
    },
    {
        "id": "c622dc98673df985",
        "type": "mqtt out",
        "z": "6c5598670403b7f8",
        "name": "",
        "topic": "sosfak",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92bd4385102b2542",
        "x": 330,
        "y": 200,
        "wires": []
    },
    {
        "id": "cc60f8b756f97084",
        "type": "serial in",
        "z": "6c5598670403b7f8",
        "name": "",
        "serial": "bb03f8d1f5b4d598",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "9491342092325130",
                "c622dc98673df985"
            ]
        ]
    }
]