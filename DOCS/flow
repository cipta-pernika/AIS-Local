[
    {
        "id": "9b9e509d1703eac9",
        "type": "tab",
        "label": "AIS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2d6f8cc0a5fc8c14",
        "type": "tab",
        "label": "ADS-B",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cfd5b7ec251213e1",
        "type": "tab",
        "label": "RADAR",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "56b7141f21693ef7",
        "type": "tab",
        "label": "Send & Receive",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4f90a3ebd122d18b",
        "type": "subflow",
        "name": "GPRMC Handler ",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "b4eafedf48ad9063"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99",
        "status": {
            "x": 560,
            "y": 120,
            "wires": []
        }
    },
    {
        "id": "9f8de59c262b7de1",
        "type": "subflow",
        "name": "AIVDM Decoder",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 60,
                "wires": [
                    {
                        "id": "44c59405dbf60c58"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 940,
                "y": 120,
                "wires": [
                    {
                        "id": "4704a8d760c26ca4",
                        "port": 1
                    },
                    {
                        "id": "0204f1adc622e486",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99",
        "status": {
            "x": 940,
            "y": 220,
            "wires": [
                {
                    "id": "4704a8d760c26ca4",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "7a514ac7e4bcf6eb",
        "type": "serial-port",
        "serialport": "COM1",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "f614c112864cc4d3",
        "type": "websocket-listener",
        "path": "/ws/sensordata",
        "wholemsg": "false"
    },
    {
        "id": "92bd4385102b2542",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "0960ae41486c6ef0",
        "type": "serial-port",
        "serialport": "COM7",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "11e860719980e3ac",
        "type": "serial-port",
        "serialport": "COM1",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "bb03f8d1f5b4d598",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "ed5625119e8ad936",
        "type": "websocket-listener",
        "d": true,
        "path": "/ws/sensordata",
        "wholemsg": "false"
    },
    {
        "id": "c0587586e0feab65",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "2bffb4e783a0c2ed",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "32a6da0f907a8237",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "1a43de3ee452c915",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder_insert",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "e7a9b72075600f01",
        "type": "serial-port",
        "serialport": "COM1",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "aba184a3952dbf7a",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "54e0e4d1986c3da6",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "cfc2b2a58a07f4a6",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "b443960d2f483fde",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder_insert",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "c5d4c21594239517",
        "type": "websocket-listener",
        "path": "/ws/sensordatas",
        "wholemsg": "false"
    },
    {
        "id": "287fbfd1c0981137",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "15ac1be9d7b1b4e1",
        "type": "function",
        "z": "4f90a3ebd122d18b",
        "name": "",
        "func": "function convertLat(latitude,north_south){\n    var splitLat=latitude.split(\".\"),\n    secLat=splitLat[0].substring(splitLat[0].length - 2, splitLat[0].length)+'.'+splitLat[1],\n    degLat=splitLat[0].substring(0,splitLat[0].length - 2),\n    minLat=parseFloat(secLat)/60;\n    if(north_south=='S'){\n    \tnorth_south=-1;\n    }else{\n    \tnorth_south=1;\n    }\n    return String((parseFloat(degLat)+minLat)*north_south);\n}\n\nfunction convertLng(longitude,east_west){\n    var splitLng=longitude.split(\".\"),\n    secLng=splitLng[0].substring(splitLng[0].length - 2, splitLng[0].length)+'.'+splitLng[1],\n    degLng=splitLng[0].substring(0,splitLng[0].length - 2),\n    minLng=parseFloat(secLng)/60;\n    if(east_west=='W'){\n    \teast_west=-1;\n    }else{\n    \teast_west=1;\n    }\n    return String((parseFloat(degLng)+minLng)*east_west);\n}\n\nfunction fixDateTime(date_stamp,time_stamp){\n    var d = new Date(), date = date_stamp.substring(0,2), month = date_stamp.substring(2,4);\n    var fixDateStamp=String(d.getUTCFullYear())+'-'+month+'-'+date;\n    var fixTimeStamp=time_stamp.substring(0,2)+':'+time_stamp.substring(2,4)+':'+time_stamp.substring(4,6);\n    return String(fixDateStamp+' '+fixTimeStamp);\n}\n\n// var msgText=String(msg.payload);\nvar msgText=String(msg.gprmc);\nvar m=msgText.split(\",\");\nvar time_stamp=String(m[1]),validity=m[2],latitude=m[3],north_south=m[4],longitude=m[5],east_west=m[6],sog=m[7],cog=m[8],\ndate_stamp=String(m[9]),variation=m[10],fillbits=m[11];\n\nif(String(sog)!==''){\n    sog=String(parseFloat(sog));\n}else{\n    sog=\"0\";\n}\nif(String(cog)!==''){\n    cog=String(parseFloat(cog));\n}else{\n    cog=\"0\";\n}\nvar heading=cog;\nvar lat=convertLat(latitude,north_south);\nvar lng=convertLng(longitude,east_west);\nvar fixDT=fixDateTime(date_stamp,time_stamp);\n\nmsg.topic=\"INSERT INTO bst_mbs VALUES(0,\"+global.get('stationId')+\",\"+lat+\",\"+lng+\",\"+heading+\",\"+sog+\",\"+cog+\",'\"+fixDT+\"','\"+fixDT+\"')\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "b4eafedf48ad9063",
        "type": "function",
        "z": "4f90a3ebd122d18b",
        "name": "",
        "func": "var msgText=String(msg.payload);\nmsg.gprmc=msgText;\nmsg.topic=\"INSERT INTO gprmc_msg VALUES (0,'\"+msgText+\"',\"+global.get('stationId')+\",1,UTC_TIMESTAMP())\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "1c5099576fbb9689",
        "type": "debug",
        "z": "4f90a3ebd122d18b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 140,
        "wires": []
    },
    {
        "id": "4af9b5aa3828a88b",
        "type": "debug",
        "z": "4f90a3ebd122d18b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 140,
        "wires": []
    },
    {
        "id": "1e414a35ddb3cecc",
        "type": "debug",
        "z": "4f90a3ebd122d18b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 140,
        "y": 220,
        "wires": []
    },
    {
        "id": "d2376b60045d1aac",
        "type": "function",
        "z": "9f8de59c262b7de1",
        "name": "",
        "func": "// var parsed={\"static\":{\"mmsi\":\"525019645\"},\"dynamic\":{\"station_id\":\"1\",\"sog\":0.3,\"cog\":15.6,\"bearing\":0,\"nav_status\":0,\"latitude\":-6.062245,\"longitude\":106.87224833333333,\"raim\":false,\"msg_type\":1,\"repeat_indicator\":0,\"position_accuracy\":0},\"destination\":{},\"draught\":{},\"ship_id\":0,\"time_stamp\":\"2020-10-01 10:27:50\",\"exists\":false};\nif(msg.parsed.ship_id===0){\n    msg.parsed.ship_id=msg.payload.insertId;\n}\nvar parsed=msg.parsed;\n\nObject.size = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\n\nfunction addZero(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n}\n\nvar dynamic=parsed.dynamic;\nvar destination=parsed.destination;\nvar draught=parsed.draught;\nvar dynamicSize = Object.size(dynamic);\nvar destinationSize = Object.size(destination);\nvar draughtSize = Object.size(draught);\n\nmsg.parsed.size={};\nmsg.parsed.size.dynamic=dynamicSize;\nmsg.parsed.size.destination=destinationSize;\nmsg.parsed.size.draught=draughtSize;\n\nvar d = new Date();\nvar suffix = String(d.getUTCFullYear())+String(addZero(d.getUTCMonth()+1));\nvar insertDynamic=\"INSERT INTO ais_dynamic_\"+suffix+\" set ship_id=\"+parsed.ship_id+\",\";\nvar updateDynamic=\"INSERT INTO ais_dynamic set ship_id=\"+parsed.ship_id+\",\";\nif(parsed.exists){\n    updateDynamic=\"UPDATE ais_dynamic set \";\n}\ni=1;\nObject.keys(dynamic).forEach(key => {\n\t// console.log(key, static[key]);\n    if(i>1){\n    \tinsertDynamic+=\",\";\n    \tupdateDynamic+=\",\";\n    }\n    var column = String(key);\n    var value = String(dynamic[key]);\n    if(value===\"undefined\"){\n        value=\"0\";\n    }\n    if(column===\"raim\"){\n        if(value===\"false\"){\n            value=\"0\";\n        }else{\n            value=\"1\";\n        }\n    }\n    if(column===\"latitude\" || column===\"longitude\"){\n        if(value!==\"0\" && value!==\"undefined\"){\n            insertDynamic+=column+\"='\"+value+\"'\";\n            updateDynamic+=column+\"='\"+value+\"'\";\n        }\n    }else{\n        insertDynamic+=column+\"='\"+value+\"'\";\n        updateDynamic+=column+\"='\"+value+\"'\";\n    }\n    i++;\n});\ninsertDynamic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\nif(!parsed.exists){\n    updateDynamic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\n}else{\n    updateDynamic+=\",updated_at=UTC_TIMESTAMP() WHERE ship_id=\"+parsed.ship_id;\n}\n\nmsg.insertDynamic=insertDynamic.replace(\",,,\", \",\");\nmsg.updateDynamic=updateDynamic.replace(\",,,\", \",\");\n\nvar insertDestination=0;\ni=1;\nif(destination.destination!==undefined){\n    var tempEta = destination.eta.toISOString().slice(0, 19).replace('T', ' ');\n    destination.eta = tempEta;\n    insertDestination=\"INSERT INTO ais_destination set ship_id=\"+parsed.ship_id+\",\";\n    Object.keys(destination).forEach(key => {\n    \t// console.log(key, static[key]);\n        if(i>1){\n        \tinsertDestination+=\",\";\n        }\n        var column = String(key);\n        var value = String(destination[key]);\n        // if(value===\"undefined\"){\n        //     value=\"0\";\n        // }\n        insertDestination+=column+\"='\"+value+\"'\";\n        i++;\n    });\n    insertDestination+=\",updated_at='\"+parsed.time_stamp+\"'\";\n    insertDestination=insertDestination.replace(\"\\\\\", \"\\\\\\\\\");\n}\nmsg.insertDestination=insertDestination;\n\nvar insertDraught=0;\ni=1;\nif(draught.draught!==undefined){\n    insertDraught=\"INSERT INTO ais_draught set ship_id=\"+parsed.ship_id+\",\";\n    Object.keys(draught).forEach(key => {\n    \t// console.log(key, static[key]);\n        if(i>1){\n        \tinsertDraught+=\",\";\n        }\n        var column = String(key);\n        var value = String(draught[key]);\n        // if(value===\"undefined\"){\n        //     value=\"0\";\n        // }\n        insertDraught+=column+\"='\"+value+\"'\";\n        i++;\n    });\n    insertDraught+=\",updated_at='\"+parsed.time_stamp+\"'\";\n}\nmsg.insertDraught=insertDraught;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "04ae55b28dfff270"
            ]
        ]
    },
    {
        "id": "04ae55b28dfff270",
        "type": "change",
        "z": "9f8de59c262b7de1",
        "name": "insertDynamic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDynamic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4506c6dcf9751299",
        "type": "change",
        "z": "9f8de59c262b7de1",
        "name": "updateDynamic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "updateDynamic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "06333236853bfae1",
        "type": "change",
        "z": "9f8de59c262b7de1",
        "name": "insertDestination",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDestination",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "3c9bf3f04d2340c0",
        "type": "change",
        "z": "9f8de59c262b7de1",
        "name": "insertDraught",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDraught",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "a3129761479bebbd",
        "type": "switch",
        "z": "9f8de59c262b7de1",
        "name": "checkDestination",
        "property": "insertDestination",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 300,
        "wires": [
            [
                "06333236853bfae1"
            ],
            [
                "4704a8d760c26ca4"
            ]
        ]
    },
    {
        "id": "4704a8d760c26ca4",
        "type": "switch",
        "z": "9f8de59c262b7de1",
        "name": "checkDraught",
        "property": "insertDraught",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 380,
        "wires": [
            [
                "3c9bf3f04d2340c0"
            ],
            []
        ]
    },
    {
        "id": "791ca52868337347",
        "type": "function",
        "z": "9f8de59c262b7de1",
        "name": "",
        "func": "var decoded=msg.payload;\nmsg.decoded=decoded;\nif(decoded!==undefined){\n    msg.sqlStatic=\"SELECT * from ais_static where mmsi='\"+msg.payload.senderMmsi+\"'\";\n    // msg.sqlDynamic=\"SELECT count() as total from ais_dynamic where mmsi='\"+msg.payload.senderMmsi+\"'\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 60,
        "wires": [
            [
                "d306d82cefa9b14f"
            ]
        ]
    },
    {
        "id": "0204f1adc622e486",
        "type": "switch",
        "z": "9f8de59c262b7de1",
        "name": "If !Undefined",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 60,
        "wires": [
            [
                "791ca52868337347"
            ],
            []
        ]
    },
    {
        "id": "d306d82cefa9b14f",
        "type": "change",
        "z": "9f8de59c262b7de1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "sqlStatic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "6d5f2d25d35ddda7",
        "type": "function",
        "z": "9f8de59c262b7de1",
        "name": "",
        "func": "// if (msg.payload && !msg.payload.length){\n//     msg.result=\"No Data\";\n// }else{\n//     msg.result=msg.payload.length;\n// }\n// return msg;\n\nfunction addZero(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n}\n\nvar isDataExists=true;\nvar ship_id=0;\nvar aisData={static:{},dynamic:{},destination:{},draught:{}};\n\nif (msg.payload && !msg.payload.length){\n    isDataExists=false;\n}\n\nvar d = new Date();\nvar time_stamp = String(d.getUTCFullYear())+'-'+String(addZero(d.getUTCMonth()+1))+'-'+String(addZero(d.getUTCDate()))+' ';\ntime_stamp += String(addZero(d.getUTCHours()))+':'+String(addZero(d.getUTCMinutes()))+':'+String(addZero(d.getUTCSeconds()));\n\n//Init Ship ID\nif(!isDataExists){\n    ship_id=0;\n}else{\n    ship_id=msg.payload[0].id;\n}\naisData.ship_id=ship_id;\n//Static Data\naisData.static.mmsi=msg.decoded.senderMmsi,\naisData.static.callsign=msg.decoded.callsign,\naisData.static.vessel_name=msg.decoded.name,\naisData.static.imo=msg.decoded.shipId,\naisData.static.ship_type=msg.decoded.shipType,\naisData.static.dimension_a=msg.decoded.dimensionToBow,\naisData.static.dimension_b=msg.decoded.dimensionToStern,\naisData.static.dimension_c=msg.decoded.dimensionToPort,\naisData.static.dimension_d=msg.decoded.dimensionToStarboard,\naisData.static.fix_type=msg.decoded.fix_type,\n//Dynamic Data\naisData.dynamic.station_id=global.get('stationId'),\naisData.dynamic.sog=msg.decoded.speedOverGround,\naisData.dynamic.cog=msg.decoded.courseOverGround,\naisData.dynamic.heading=msg.decoded.trueHeading,\naisData.dynamic.turning_direction=msg.decoded.turningDirection,\naisData.dynamic.rot=msg.decoded.turningRate,\naisData.dynamic.bearing=0,\naisData.dynamic.nav_status=msg.decoded.navigationStatus,\naisData.dynamic.latitude=msg.decoded.latitude,\naisData.dynamic.longitude=msg.decoded.longitude,\naisData.dynamic.raim=msg.decoded.raim,\naisData.dynamic.msg_type=msg.decoded.messageType,\naisData.dynamic.repeat_indicator=msg.decoded.repeatIndicator,\naisData.dynamic.position_accuracy=msg.decoded.positionAccuracy,\n//Destination\naisData.destination.destination=msg.decoded.destination,\naisData.destination.eta=msg.decoded.eta,\n//Draught\naisData.draught.draught=msg.decoded.draught;\n//Timestamp\naisData.time_stamp=time_stamp;\n//isExists?\naisData.exists=isDataExists;\n\nmsg.parsed=aisData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 120,
        "wires": [
            [
                "275d49e4b399794b"
            ]
        ]
    },
    {
        "id": "275d49e4b399794b",
        "type": "function",
        "z": "9f8de59c262b7de1",
        "name": "",
        "func": "// var parsed={\"static\":{\"mmsi\":\"525019645\"},\"dynamic\":{\"station_id\":\"1\",\"sog\":0.3,\"cog\":15.6,\"bearing\":0,\"nav_status\":0,\"latitude\":-6.062245,\"longitude\":106.87224833333333,\"raim\":false,\"msg_type\":1,\"repeat_indicator\":0,\"position_accuracy\":0},\"destination\":{},\"draught\":{},\"ship_id\":0,\"time_stamp\":\"2020-10-01 10:27:50\",\"exists\":false};\nvar parsed=msg.parsed;\nObject.size = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\nvar astatic=parsed.static;\nvar staticSize = Object.size(astatic);\n\nvar insertStatic;\nvar isUpdate=false;\nif(!parsed.exists){\n\tinsertStatic=\"INSERT INTO ais_static set \";\n}else{\n    insertStatic=\"UPDATE ais_static set \";\n    isUpdate=true;\n}\nvar i=1;\nObject.keys(astatic).forEach(key => {\n    // console.log(key, astatic[key]);\n    if(i>1){\n        insertStatic+=\",\";\n    }\n    var column = String(key);\n    var value = String(astatic[key]);\n    if(value===\"undefined\"){\n        value=0;\n        if(column==\"vessel_name\"){\n            value=\"\";\n        }else if(column==\"imo\"){\n            value=\"\";\n        }else if(column==\"callsign\"){\n            value=\"\";\n        }\n    }\n    insertStatic+=column+\"='\"+value+\"'\";\n    i++;\n});\n// console.log(insertStatic);\nif(isUpdate){\n    insertStatic+=\",updated_at=UTC_TIMESTAMP() WHERE id=\"+parsed.ship_id;\n}else{\n    insertStatic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\n}\nmsg.topic=insertStatic;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "44c59405dbf60c58",
        "type": "ais-decoder",
        "z": "9f8de59c262b7de1",
        "name": "",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "0ee1358dd073c5c2"
            ]
        ]
    },
    {
        "id": "0ee1358dd073c5c2",
        "type": "function",
        "z": "9f8de59c262b7de1",
        "name": "",
        "func": "if(msg.payload===undefined){\n    msg.payload=0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 60,
        "wires": [
            [
                "0204f1adc622e486"
            ]
        ]
    },
    {
        "id": "e792a7fb81e4ac4f",
        "type": "http request",
        "z": "9b9e509d1703eac9",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1370,
        "y": 120,
        "wires": [
            [
                "2dc69fabc40d1b85"
            ]
        ]
    },
    {
        "id": "0fb01a2861f59319",
        "type": "function",
        "z": "9b9e509d1703eac9",
        "name": "function 1",
        "func": "msg.method = \"POST\"\nmsg.url = \"http://127.0.0.1:8000/api/aisdata\"\nconst aisdata1 = flow.get(\"dataais\")\nconst aisdata2 = msg.payload\nconst joinedObject = { ...aisdata2, ...aisdata1 };\nmsg.payload = joinedObject;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 120,
        "wires": [
            [
                "e792a7fb81e4ac4f",
                "69de1248522f5c0e",
                "bb0d3bf5f291f1ee"
            ]
        ]
    },
    {
        "id": "e3645e98b8c11450",
        "type": "split",
        "z": "9b9e509d1703eac9",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 310,
        "y": 100,
        "wires": [
            [
                "ba991d2f63117597",
                "626c23837895b4a2"
            ]
        ]
    },
    {
        "id": "ae23f564335c8986",
        "type": "function",
        "z": "9b9e509d1703eac9",
        "name": "function 2",
        "func": "flow.set(\"dataais\", msg.payload)\nmsg.payload = msg.payload.source\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 120,
        "wires": [
            [
                "5953ee730235f4d5"
            ]
        ]
    },
    {
        "id": "f5287b8317f8b1a1",
        "type": "ais",
        "z": "9b9e509d1703eac9",
        "name": "",
        "x": 610,
        "y": 120,
        "wires": [
            [
                "fcae5ceb037b41f5",
                "bb0d3bf5f291f1ee"
            ]
        ]
    },
    {
        "id": "5953ee730235f4d5",
        "type": "ais-decoder",
        "z": "9b9e509d1703eac9",
        "name": "",
        "x": 1050,
        "y": 120,
        "wires": [
            [
                "0fb01a2861f59319"
            ]
        ]
    },
    {
        "id": "04fa3abbcfec1c59",
        "type": "tcp in",
        "z": "9b9e509d1703eac9",
        "name": "",
        "server": "client",
        "host": "192.168.5.148",
        "port": "2101",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "e3645e98b8c11450",
                "904a1e54d4836058"
            ]
        ]
    },
    {
        "id": "2dc69fabc40d1b85",
        "type": "websocket out",
        "z": "9b9e509d1703eac9",
        "name": "",
        "server": "c5d4c21594239517",
        "client": "",
        "x": 1580,
        "y": 120,
        "wires": []
    },
    {
        "id": "69de1248522f5c0e",
        "type": "mqtt out",
        "z": "9b9e509d1703eac9",
        "name": "",
        "topic": "aisdataloggerfak",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "287fbfd1c0981137",
        "x": 1380,
        "y": 60,
        "wires": []
    },
    {
        "id": "ba991d2f63117597",
        "type": "function",
        "z": "9b9e509d1703eac9",
        "name": "function 6",
        "func": "var pl = String(msg.payload);\nmsg.payload = pl;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 60,
        "wires": [
            [
                "f5287b8317f8b1a1",
                "232210ca657e94fd"
            ]
        ]
    },
    {
        "id": "fcae5ceb037b41f5",
        "type": "switch",
        "z": "9b9e509d1703eac9",
        "name": "",
        "property": "payload.mmsi",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^(0\\d{8}|1\\d{8}|2\\d{8}|3\\d{8}|4\\d{8}|5\\d{8}|6\\d{8}|7\\d{8}|8\\d{8}|9\\d{8})$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 120,
        "wires": [
            [
                "ae23f564335c8986"
            ]
        ]
    },
    {
        "id": "232210ca657e94fd",
        "type": "ais-decoder",
        "z": "9b9e509d1703eac9",
        "name": "",
        "x": 610,
        "y": 20,
        "wires": [
            [
                "6da8e89caf37360c"
            ]
        ]
    },
    {
        "id": "6da8e89caf37360c",
        "type": "switch",
        "z": "9b9e509d1703eac9",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 20,
        "wires": [
            [
                "2178abf1e4817ed0"
            ]
        ]
    },
    {
        "id": "2178abf1e4817ed0",
        "type": "switch",
        "z": "9b9e509d1703eac9",
        "name": "",
        "property": "payload.name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 890,
        "y": 20,
        "wires": [
            [
                "0aedd60e2a31cc8d",
                "24441c57e44a60d8"
            ]
        ]
    },
    {
        "id": "0aedd60e2a31cc8d",
        "type": "function",
        "z": "9b9e509d1703eac9",
        "name": "function 11",
        "func": "msg.method = \"POST\"\nmsg.url = \"http://127.0.0.1:8000/api/aisstatic\"\nconst aisdata2 = msg.payload\nmsg.payload = aisdata2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 20,
        "wires": [
            [
                "f9d6cc69e15129c4"
            ]
        ]
    },
    {
        "id": "f9d6cc69e15129c4",
        "type": "http request",
        "z": "9b9e509d1703eac9",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1230,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "24441c57e44a60d8",
        "type": "mqtt out",
        "z": "9b9e509d1703eac9",
        "name": "",
        "topic": "aisdataloggerfak",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "287fbfd1c0981137",
        "x": 1080,
        "y": 60,
        "wires": []
    },
    {
        "id": "6f29a6e80fdeb542",
        "type": "switch",
        "z": "9b9e509d1703eac9",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "GPRMC",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 180,
        "wires": [
            [
                "4c5e60ccf22af1ec"
            ]
        ]
    },
    {
        "id": "acd81445418e9b16",
        "type": "nmea",
        "z": "9b9e509d1703eac9",
        "name": "",
        "property": "payload",
        "outputProperty": "payload",
        "x": 910,
        "y": 180,
        "wires": [
            [
                "6e60a2d48f40c402"
            ]
        ]
    },
    {
        "id": "4c5e60ccf22af1ec",
        "type": "function",
        "z": "9b9e509d1703eac9",
        "name": "function 14",
        "func": "var pl = String(msg.payload);\nmsg.payload = pl;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 180,
        "wires": [
            [
                "acd81445418e9b16"
            ]
        ]
    },
    {
        "id": "626c23837895b4a2",
        "type": "delay",
        "z": "9b9e509d1703eac9",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "25",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 180,
        "wires": [
            [
                "6f29a6e80fdeb542"
            ]
        ]
    },
    {
        "id": "6e60a2d48f40c402",
        "type": "function",
        "z": "9b9e509d1703eac9",
        "name": "function 15",
        "func": "msg.method = \"POST\"\nmsg.url = \"http://127.0.0.1:8000/api/position\"\nmsg.payload = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 180,
        "wires": [
            [
                "dd69bd2afbd4981f",
                "ee152dad4f038a13",
                "5505d13224f9f290"
            ]
        ]
    },
    {
        "id": "dd69bd2afbd4981f",
        "type": "http request",
        "z": "9b9e509d1703eac9",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1250,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "bb0d3bf5f291f1ee",
        "type": "debug",
        "z": "9b9e509d1703eac9",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 240,
        "wires": []
    },
    {
        "id": "904a1e54d4836058",
        "type": "debug",
        "z": "9b9e509d1703eac9",
        "name": "debug 26",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 260,
        "wires": []
    },
    {
        "id": "ee152dad4f038a13",
        "type": "debug",
        "z": "9b9e509d1703eac9",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 280,
        "wires": []
    },
    {
        "id": "5505d13224f9f290",
        "type": "mqtt out",
        "z": "9b9e509d1703eac9",
        "name": "",
        "topic": "positionfak",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92bd4385102b2542",
        "x": 1210,
        "y": 340,
        "wires": []
    },
    {
        "id": "28125ac61adab877",
        "type": "tcp in",
        "z": "2d6f8cc0a5fc8c14",
        "name": "",
        "server": "client",
        "host": "192.168.5.150",
        "port": "32459",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 210,
        "y": 100,
        "wires": [
            [
                "82b645528859c03d",
                "0e0a5b90a2f82c9b"
            ]
        ]
    },
    {
        "id": "f8ead4abc0b88702",
        "type": "debug",
        "z": "2d6f8cc0a5fc8c14",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 40,
        "wires": []
    },
    {
        "id": "82b645528859c03d",
        "type": "delay",
        "z": "2d6f8cc0a5fc8c14",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "2",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 450,
        "y": 100,
        "wires": [
            [
                "94ab8f595a83cfa0"
            ]
        ]
    },
    {
        "id": "e47c99b1226a708a",
        "type": "npm",
        "z": "2d6f8cc0a5fc8c14",
        "name": "",
        "func": "// NPM module exposed as variable, npm_module\nreturn npm_module(msg.payload);",
        "npm_module": "sbs1",
        "module_style": "function",
        "msg_payload": "return_val",
        "function_name": "parseSbs1Message",
        "x": 770,
        "y": 100,
        "wires": [
            [
                "efae9a505ab8343c",
                "a8602be8442fa8c0"
            ]
        ]
    },
    {
        "id": "709a74ee40fe2cdd",
        "type": "tcp in",
        "z": "2d6f8cc0a5fc8c14",
        "name": "",
        "server": "client",
        "host": "192.168.100.2",
        "port": "32457",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 210,
        "y": 320,
        "wires": [
            [
                "4e156cd1d9feed80"
            ]
        ]
    },
    {
        "id": "938d42f5d112697e",
        "type": "tcp in",
        "z": "2d6f8cc0a5fc8c14",
        "name": "",
        "server": "client",
        "host": "192.168.100.4",
        "port": "32458",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 210,
        "y": 400,
        "wires": [
            [
                "4e156cd1d9feed80",
                "cc6b35ab3bbba06e"
            ]
        ]
    },
    {
        "id": "8949610ee36dbc8b",
        "type": "debug",
        "z": "2d6f8cc0a5fc8c14",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 320,
        "wires": []
    },
    {
        "id": "cefdab3758b04b25",
        "type": "debug",
        "z": "2d6f8cc0a5fc8c14",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 400,
        "wires": []
    },
    {
        "id": "4702b86d4526c6e8",
        "type": "npm",
        "z": "2d6f8cc0a5fc8c14",
        "name": "",
        "func": "// NPM module exposed as variable, npm_module\nreturn npm_module(msg.payload);",
        "npm_module": "mode-s-decoder",
        "module_style": "function",
        "msg_payload": "return_val",
        "function_name": "parse",
        "x": 470,
        "y": 320,
        "wires": [
            [
                "8949610ee36dbc8b"
            ]
        ]
    },
    {
        "id": "1c0757756e3e4e91",
        "type": "npm",
        "z": "2d6f8cc0a5fc8c14",
        "name": "",
        "func": "// NPM module exposed as variable, npm_module\nreturn npm_module(msg.payload);",
        "npm_module": "ads-b",
        "module_style": "function",
        "msg_payload": "return_val",
        "function_name": "decode",
        "x": 470,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "0fde47b91e95e05a",
        "type": "inject",
        "z": "2d6f8cc0a5fc8c14",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 460,
        "wires": [
            [
                "f793d5fdc636e91d"
            ]
        ]
    },
    {
        "id": "f793d5fdc636e91d",
        "type": "function-npm",
        "z": "2d6f8cc0a5fc8c14",
        "name": "",
        "func": "const decoder = require('decoder1090-c')\nmsg.payload = decoder.decodeMsg(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 460,
        "wires": [
            [
                "cefdab3758b04b25"
            ]
        ]
    },
    {
        "id": "373f690571362652",
        "type": "npm",
        "z": "2d6f8cc0a5fc8c14",
        "d": true,
        "name": "",
        "func": "// NPM module exposed as variable, npm_module\nreturn npm_module(msg.payload);",
        "npm_module": "decoder1090-c",
        "module_style": "cstr",
        "msg_payload": "return_val",
        "function_name": "",
        "x": 450,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "efae9a505ab8343c",
        "type": "function",
        "z": "2d6f8cc0a5fc8c14",
        "name": "function 3",
        "func": "msg.method = \"POST\"\nmsg.url = \"http://127.0.0.1:8000/api/adsbdatav2\"\nconst aisdata1 = { msgSbs: flow.get(\"dataadsb\") }\nconst aisdata2 = msg.payload\nconst joinedObject = { ...aisdata2, ...aisdata1 };\nmsg.payload = joinedObject;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 140,
        "wires": [
            [
                "d854ffac87bab812",
                "78ce472ba0f7da13"
            ]
        ]
    },
    {
        "id": "d854ffac87bab812",
        "type": "http request",
        "z": "2d6f8cc0a5fc8c14",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 390,
        "y": 220,
        "wires": [
            [
                "9956612d07a4b964"
            ]
        ]
    },
    {
        "id": "9956612d07a4b964",
        "type": "debug",
        "z": "2d6f8cc0a5fc8c14",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 220,
        "wires": []
    },
    {
        "id": "94ab8f595a83cfa0",
        "type": "function",
        "z": "2d6f8cc0a5fc8c14",
        "name": "function 4",
        "func": "flow.set(\"dataadsb\", msg.payload)\nmsg.payload = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 100,
        "wires": [
            [
                "e47c99b1226a708a"
            ]
        ]
    },
    {
        "id": "4e156cd1d9feed80",
        "type": "debug",
        "z": "2d6f8cc0a5fc8c14",
        "name": "debug 19",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 220,
        "y": 160,
        "wires": []
    },
    {
        "id": "63d1f42011bc693f",
        "type": "tcp in",
        "z": "2d6f8cc0a5fc8c14",
        "name": "",
        "server": "client",
        "host": "192.168.100.4",
        "port": "32459",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 210,
        "y": 40,
        "wires": [
            [
                "30295a007071efec",
                "82b645528859c03d",
                "efb9298085a85c33"
            ]
        ]
    },
    {
        "id": "30295a007071efec",
        "type": "function",
        "z": "2d6f8cc0a5fc8c14",
        "name": "function 13",
        "func": "flow.set(\"dataadsb\", msg.payload)\nmsg.payload = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 40,
        "wires": [
            [
                "aac1b5843bb380bb"
            ]
        ]
    },
    {
        "id": "aac1b5843bb380bb",
        "type": "npm",
        "z": "2d6f8cc0a5fc8c14",
        "name": "",
        "func": "// NPM module exposed as variable, npm_module\nreturn npm_module(msg.payload);",
        "npm_module": "sbs1",
        "module_style": "function",
        "msg_payload": "return_val",
        "function_name": "parseSbs1Message",
        "x": 610,
        "y": 40,
        "wires": [
            [
                "2d453231130238db"
            ]
        ]
    },
    {
        "id": "78ce472ba0f7da13",
        "type": "mqtt out",
        "z": "2d6f8cc0a5fc8c14",
        "name": "",
        "topic": "adsbdataloggerfak",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "287fbfd1c0981137",
        "x": 1170,
        "y": 100,
        "wires": []
    },
    {
        "id": "cc6b35ab3bbba06e",
        "type": "debug",
        "z": "2d6f8cc0a5fc8c14",
        "name": "debug 20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 360,
        "wires": []
    },
    {
        "id": "efb9298085a85c33",
        "type": "debug",
        "z": "2d6f8cc0a5fc8c14",
        "name": "debug 21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 140,
        "wires": []
    },
    {
        "id": "2d453231130238db",
        "type": "switch",
        "z": "2d6f8cc0a5fc8c14",
        "name": "",
        "property": "payload.lat",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 40,
        "wires": [
            [
                "f8ead4abc0b88702"
            ]
        ]
    },
    {
        "id": "0e0a5b90a2f82c9b",
        "type": "debug",
        "z": "2d6f8cc0a5fc8c14",
        "name": "debug 27",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 140,
        "wires": []
    },
    {
        "id": "a8602be8442fa8c0",
        "type": "debug",
        "z": "2d6f8cc0a5fc8c14",
        "name": "debug 28",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 240,
        "wires": []
    },
    {
        "id": "06839b3282ec963b",
        "type": "debug",
        "z": "cfd5b7ec251213e1",
        "name": "debug 23",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 60,
        "wires": []
    },
    {
        "id": "6183214fbf49fa29",
        "type": "exec",
        "z": "cfd5b7ec251213e1",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 310,
        "y": 60,
        "wires": [
            [
                "06839b3282ec963b"
            ],
            [
                "06839b3282ec963b"
            ],
            [
                "06839b3282ec963b"
            ]
        ]
    },
    {
        "id": "9238996c3584d227",
        "type": "cronplus",
        "z": "cfd5b7ec251213e1",
        "d": true,
        "name": "radar image",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "str",
                "payload": "C:\\laragon\\bin\\php\\php-8.1.10-Win32-vs16-x64\\php \"C:\\Users\\user\\Documents\\GitHub\\AIS-Local\\artisan\" radarpng",
                "expressionType": "cron",
                "expression": "0 * * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 150,
        "y": 60,
        "wires": [
            [
                "6183214fbf49fa29"
            ]
        ]
    },
    {
        "id": "7d93c16bc3176e5c",
        "type": "debug",
        "z": "cfd5b7ec251213e1",
        "name": "debug 24",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 140,
        "wires": []
    },
    {
        "id": "ab5a0b1f73066d91",
        "type": "exec",
        "z": "cfd5b7ec251213e1",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 310,
        "y": 140,
        "wires": [
            [
                "7d93c16bc3176e5c"
            ],
            [
                "7d93c16bc3176e5c"
            ],
            [
                "7d93c16bc3176e5c"
            ]
        ]
    },
    {
        "id": "efeb5dc9e90d4c66",
        "type": "cronplus",
        "z": "cfd5b7ec251213e1",
        "d": true,
        "name": "radar data",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "str",
                "payload": "C:\\laragon\\bin\\php\\php-8.1.10-Win32-vs16-x64\\php \"C:\\Users\\user\\Documents\\GitHub\\AIS-Local\\artisan\" fetchradar",
                "expressionType": "cron",
                "expression": "0 * * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 150,
        "y": 140,
        "wires": [
            [
                "ab5a0b1f73066d91"
            ]
        ]
    },
    {
        "id": "3fb888f726b5a13f",
        "type": "debug",
        "z": "56b7141f21693ef7",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 80,
        "wires": []
    },
    {
        "id": "9d5a447613ee2de0",
        "type": "exec",
        "z": "56b7141f21693ef7",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 350,
        "y": 80,
        "wires": [
            [
                "3fb888f726b5a13f"
            ],
            [
                "3fb888f726b5a13f"
            ],
            [
                "3fb888f726b5a13f"
            ]
        ]
    },
    {
        "id": "3555a50c46fb2ac7",
        "type": "http in",
        "z": "56b7141f21693ef7",
        "name": "",
        "url": "/api/nampungdata",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 360,
        "wires": [
            [
                "d3ce271a952d3b55",
                "d81456655edeaf16"
            ]
        ]
    },
    {
        "id": "d81456655edeaf16",
        "type": "debug",
        "z": "56b7141f21693ef7",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 360,
        "wires": []
    },
    {
        "id": "d3ce271a952d3b55",
        "type": "http response",
        "z": "56b7141f21693ef7",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 420,
        "y": 440,
        "wires": []
    },
    {
        "id": "b0f4f39fe095ddc1",
        "type": "cronplus",
        "z": "56b7141f21693ef7",
        "d": true,
        "name": "sendata",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "str",
                "payload": "C:\\laragon\\bin\\php\\php-8.1.10-Win32-vs16-x64\\php \"C:\\Users\\user\\Documents\\GitHub\\AIS-Local\\artisan\" app:sendata",
                "expressionType": "cron",
                "expression": "0 * * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 180,
        "y": 80,
        "wires": [
            [
                "9d5a447613ee2de0"
            ]
        ]
    }
]